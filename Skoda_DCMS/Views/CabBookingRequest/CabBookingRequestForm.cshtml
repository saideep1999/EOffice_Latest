@model dynamic
@{
    bool IsNew = true;
    dynamic CBRF = null;
    List<Skoda_DCMS.Models.CBRFData> CabUsersList = new List<Skoda_DCMS.Models.CBRFData>();
    dynamic FlagRedirect = null;
    bool IsValidityCheck = true;
    bool IsEdit = true;
    int FormId = 0, AppRowId = 0, ApprovalType = 0;
    Layout = ViewBag.Layout;
    if (ViewBag != null && ViewBag.IsNew != null)
    {
        IsNew = ViewBag.IsNew;
        //CBRF = ViewBag.Model;
        CBRF = ViewBag.Model.one[0] as Skoda_DCMS.Models.CBRFData;
        FormId = ViewBag.FormId;
        AppRowId = ViewBag.AppRowId;
        ApprovalType = ViewBag.ApprovalType != null ? (int)ViewBag.ApprovalType : 0;
        IsValidityCheck = ViewBag.IsValidityCheck != null ? (bool)ViewBag.IsValidityCheck : false;
        IsEdit = ViewBag.IsEdit;
        CabUsersList = ViewBag.Model.Four as List<Skoda_DCMS.Models.CBRFData>;

    }
    var currentUser = (Skoda_DCMS.Models.UserData)HttpContext.Current.Session["UserData"];
    ViewBag.Title = "Cab Booking Request Form";

}

<style>
    /*New design css start here*/
    .astColor {
        color: red;
    }

    .textTrans {
        width: 100%;
        max-width: 99%;
        border-radius: 5px;
        margin-right: 0px;
        border: 1px solid !important;
    }

    .empDetailsBg {
        background-color: #fffbef;
    }

    #accordion select {
        color: #000;
        width: 100% !important;
        max-width: 97%;
        height: 45px;
        background-color: #F8F8F8;
        border: 1px solid #BFBFBF;
        box-sizing: border-box;
        border-radius: 5px;
        background-image: url(data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>);
        background-repeat: no-repeat;
        background-position: right .75rem center;
        background-size: 16px 12px;
    }

    .tblRowBtn input {
        text-align: center;
        width: 7% !important;
        border-radius: 0 !important
    }

    #accordion input[type='text'] {
        width: 100%;
        max-width: 100%;
        height: 45px;
        background-color: #fff;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
    }

    #accordion input[type='date'] {
        width: 100% !important;
        max-width: 100%;
        height: 45px;
        background-color: #F8F8F8;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
    }

    #accordion input[type='time'] {
        height: 45px;
    }

    #accordion label {
        font-size: 16px;
        line-height: 22px;
        font-weight: 600;
        color: #201F1F;
    }

    #accordion table tr td {
        font-size: 16px;
        line-height: 19px;
        color: #201F1F;
        background-color: white;
    }

    #accordion label {
        display: block;
    }

    #accordion .card-header {
        background: rgb(4 59 100) !important;
        border-radius: 5px 5px 0px 0px;
        position: relative;
        margin-top: 15px;
    }

        #accordion .card-header.collapsed h5:after {
            content: '+';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

        #accordion .card-header h5:after {
            content: '-';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

    #accordion h5 button {
        font-size: 18px;
        line-height: 22px;
        /* identical to box height */
        padding-left: 0px;
        display: flex;
        align-items: center;
        text-transform: uppercase;
        /* Text_white */

        color: #FFFFFF;
    }

        #accordion h5 button:focus {
            box-shadow: none;
        }

    .empDetailsFields label {
        display: block !important;
        margin-bottom: 0px;
    }

    .empDetailsFields .row label {
        display: block;
        margin-bottom: 0px;
    }

        .empDetailsFields .row label:nth-child(1) {
            font-style: normal;
            font-weight: normal !important;
            font-size: 12px;
            line-height: 18px;
            color: #A9A9A9 !important;
        }

        .empDetailsFields .row label:nth-child(2) {
            font-style: normal;
            font-weight: normal;
            font-size: 18px;
            line-height: 22px;
            color: #201F1F;
        }

    .firstLastName {
        font-style: normal;
        font-weight: normal;
        font-size: 20px;
        line-height: 24px;
        /* identical to box height */

        display: flex;
        align-items: center;
        color: #201F1F;
    }

    .submit-btn {
        background: #3D3D3D;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #FFFFFF;
        border-color: transparent !important;
    }

    .cancl-btn {
        background: #FAE99B;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        border-color: transparent !important;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #212221;
        margin-left: 10px;
    }




    .card-footer {
        display: flex;
        background-color: transparent !important;
    }

    .photo-form {
        width: 100%;
    }

    .ui-front {
        z-index: 9999999 !important;
    }
    /*Animation CSS Starts*/

    div.input-block {
        position: relative;
    }

        div.input-block input {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 188px;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block textarea {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 100%;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            background-color: #fff;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block span.placeholder {
            position: absolute;
            margin: 17px 0;
            padding: 0 4px;
            font-family: Roboto, sans-serif;
            color: #6c757d;
            display: flex;
            align-items: center;
            font-size: 1rem;
            top: -6px;
            left: 15px;
            transition: all 0.2s;
            transform-origin: 0% 0%;
            background: none;
            pointer-events: none;
            z-index: 1;
        }

        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: #fff !important;
        }

        div.input-block textarea:valid + span.placeholder,
        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px) !important;
            background: #fff !important;
        }

        div.input-block input:valid + span.placeholder,
        div.input-block input:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }


        div.input-block input.spanUpperSide + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }

        div.input-block input:read-only + span.placeholder,
        div.input-block input:read-only + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background: rgb(219,238,213);
        }


    div.inputSelect span.placeholder {
        position: absolute;
        margin: 17px 0;
        padding: 0 4px;
        font-family: Roboto, sans-serif;
        color: #000;
        display: flex;
        align-items: center;
        font-size: 1rem;
        top: -6px;
        left: 15px;
        transition: all 0.2s;
        transform-origin: 0% 0%;
        background: none;
        pointer-events: none;
        z-index: 1;
    }

    div.inputSelect select:focus + span.placeholder {
        transform: scale(0.8) translateY(-30px);
        background: rgb(219,238,213);
        z-index: 9;
    }

    div.inputSelect select:not([value=""]):valid + span.placeholder {
        transition: all 0.2s;
        transform-origin: 0% 0%;
    }



    div.input-block input:focus + span.placeholder {
        color: #284B63;
    }

    .breadcrumb {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding: 1rem 1rem 0;
        margin-bottom: 0;
        list-style: none;
        background-color: #FFFFFF;
        border-radius: .25rem;
    }

    body.nav-sm .container.body .left_col {
        width: 63px;
        padding: 0;
        position: fixed;
        height: 100%;
        z-index: 8;
    }

    .card {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0px;
        border-radius: .25rem;
    }

    .dropdown-toggle::after {
        display: none;
        width: 0;
        height: 0;
        margin-left: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
    }

    input.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213);
    }

    inputSelect.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213) !important;
    }

    select.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background-color: rgb(219,238,213) !important;
        z-index: 9;
    }

    textarea.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }

    .TransView {
        background-color: white !important;
    }

    @@media only screen and (min-width: 992px) {
        div .input-block span.placeholder {
            font-size: 15px;
        }

        div.inputSelect span.placeholder {
            font-size: 14px;
        }
    }

    input[type='date'].spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }

    .showBorder {
        border: 1px solid #dee2e6;
    }

        .showBorder td {
            border: none !important;
        }

    .wField {
        width: 233px !important;
        margin-left: 10px;
    }

    @@-moz-document url-prefix() {
        input[type=time]::-ms-clear {
            display: none;
        }
    }

    .datetime-reset-button {
        display: none !important;
    }

    .forShoppingCart {
        margin-left: 16% !important;
    }

    #txtCarRequiredFromTime, #txtCarRequiredToTime, #txtReportingTime, #txtFlightTime {
        cursor: pointer;
    }

    input:-webkit-autofill {
        -webkit-box-shadow: 0 0 0px 1000px white inset;
    }


    input::-webkit-calendar-picker-indicator {
        cursor: pointer;
    }

    .showBorder {
        border: 1px solid #dee2e6;
    }

    #usersBody td {
        vertical-align: middle !important;
    }

    .form-table-container-2 tr td input {
        border-color: #bfbfbf !important;
    }

    .widthForTime {
        width: 130px !important;
        margin-left: 0px !important;
    }

    .showBorder {
        border: 1px solid #dee2e6;
    }
</style>
<script src="~/assets/js/jszip.js"></script>
<script src="~/assets/js/xlsx.js"></script>
<script type="text/javascript">
    function checkSelect(id) {

        if ($('#' + id).val() != '') {
            $('#' + id).addClass('spanUpperSide');
        }
    }
    /*$('#timedemo').pickatime({ twelvehour: true });*/

</script>

@*Loader*@
<style type="text/css">
    #loader {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        z-index: 10000;
    }
</style>

@*Loader*@
<body>
    <form action="/OCRF/SaveCBRF" id="CBRFForm" method="post">
        <div class="right_col" role="main">
            <!-- ACCORDIAN STRUCTURE START HERE-->

            @if (!IsNew || !IsEdit)
            {
                <input type="hidden" name="cabUsers" id="cabUsers" value="@(CabUsersList.Count)" />

            }
            @if (IsNew)
            {
                @* EDIT SECTION*@
                if (!IsEdit)
                {
                    //foreach (var item in CBRF)
                    //{
                    <div class="">
                        <div>
                            <ol class="breadcrumb pl-0">
                                <li>
                                    <a href="/Dashboard?formName=CBRF">
                                        Dashboard
                                    </a>
                                </li>
                                <li class="active"><a href="/Dashboard/GetDepartmentWiseForms?department=HR">HR Department</a></li>
                                <li class="active">Cab Booking Request Form</li>
                            </ol>
                        </div>
                        <div class="row breadcrumb-container table-bordered  mr-1 ml-1" style="background-color: rgb(219,238,213) !important; ">
                            <div class="col-md-2 col-lg-2">
                                <span class="placeholder">Date : @(!IsNew ||!IsEdit ? (Convert.ToDateTime(CBRF.FormID.CreatedDate).ToShortDateString()) : DateTime.Now.ToShortDateString())</span>
                            </div>
                            <div class="col-md-8 col-lg-8 mt-2 mb-1 form-heading" style="text-align:center; margin-top:5px">
                                <span> Cab Booking Request Form</span>
                            </div>
                            <div class="col-md-2 col-lg-2">
                                @if (!IsNew || !IsEdit)
                                {
                                    <span class="placeholder"> Form Id : @(!IsNew || !IsEdit ? ("CBRF" + CBRF.FormID.Id ?? "") : "" )</span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="heading d-none" id="headingErr">
                        <h1 id="" class="info-header">Following fields are mandatory. Please fill in information for<br /></h1>
                        <div id="add_to_me" class="header-list" style="color:red;"></div>
                    </div>
                    <div id="accordion">

                        <div class="card">
                            <div class="card-header collapsed" id="headingSelf" data-toggle="collapse" data-target="#collapseSelf" aria-expanded="true" aria-controls="collapseSelf">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseSelf" aria-expanded="true" aria-controls="collapseSelf">
                                        <img src="~/assets/img/empIcon.svg" width="24" height="24" class="mr-2" /> Employee Details
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseSelf" class="collapse show" aria-labelledby="headingSelf">
                                <div class="card-body empDetailsBg">
                                    <div class="row">

                                        <div class="col-md-12 col-lg-12 col-12">
                                            <div class="empDetailsFields">

                                                <div class="row">
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" onkeypress="alphaOnly(event)" autocomplete="off" name="txtEmployeeName" maxlength="20" class="inpText" id="txtEmployeeName" readonly value="@(!IsNew || !IsEdit ? (CBRF.EmployeeName ?? "") : "")">
                                                        <span class="firstLastName placeholder">Employee Name</span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" name="txtEmpId" class="inpDisable inpText" id="txtEmpId" value="@(!IsNew || !IsEdit ? (CBRF.SelfEmployeeIDNo ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                        <span class="placeholder">Employee Code</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" name="txtDepartment" autocomplete="off" class="w-100 inpDisable" id="txtDepartment" value="@(!IsNew || !IsEdit  ? (CBRF.Department ?? " ") : " ")">
                                                        <span class="placeholder">Department</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" name="txtCostCenterNumber" autocomplete="off" class="w-100 inpDisable" id="txtCostCenterNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew || !IsEdit  ? (CBRF.CostCenterNumber ?? "") : "")">
                                                        <span class="placeholder">Cost Center No.</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-12 input-block">

                                                        <select name="ddEmpDesignation" class="drpSize spanUpperSide" id="ddEmpDesignation"></select>
                                                        <span class="placeholder">Designation</span>
                                                    </div>

                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtMobile" id="txtMobile" class="inpText" value="@(!IsNew || !IsEdit ? (CBRF.SelfMobile ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                        <span class="placeholder">Mobile(+91)</span>
                                                    </div>
                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtTelephone" id="txtTelephone" autocomplete="off" class="inpText"
                                                               maxlength="10"
                                                               value="@((!IsNew && CBRF.SelfTelephone != 0) || (!IsEdit && CBRF.SelfTelephone != 0) ? (CBRF.SelfTelephone ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                        <span class="placeholder">Telephone (office)</span>
                                                    </div>

                                                    <div class="form-group col-md-5 col-lg-5 col-12 input-block">

                                                        <input type="text" name="txtEmail" id="txtEmail" class="inpDisable" onkeypress="allowNumbersOnly(event)" value="@(!IsNew || !IsEdit ? (CBRF.EmployeeEmailId ?? "") : "")">
                                                        <span class="placeholder">Email ID</span>
                                                    </div>
                                                    <div class="form-group col-md-4 col-lg-4 col-12 input-block">

                                                        <select name="ddEmpLocation" class="spanUpperSide" id="ddEmpLocation" onchange="checkSelect('ddEmpLocation')" required></select>
                                                        <span class="placeholder">Location</span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-3 input-block">

                                                        <select name="drpRequestSubType" id="drpRequestSubType" class="drpDisable spanUpperSide" onchange="RequestSubmission()">
                                                            <option @(CBRF.RequestSubmissionFor == "Self" ? "selected" : "" ) value="Self">Self</option>
                                                            <option @(CBRF.RequestSubmissionFor == "OnBehalf" ? "selected" : "" ) value="OnBehalf">On Behalf</option>
                                                        </select>
                                                        <span class="placeholder">Request Submission Type:</span>
                                                    </div>



                                                </div>
                                                <div class="row">

                                                    <div id="OtherEmpName">
                                                        <div class="form-group col-md-12 col-12">
                                                            @*  <label class="f-600">Name (Type at least 4 letters for faster results):</label>*@
                                                            @*<input type="text" name="txtOtherEmpname" id="txtOtherEmpname" class="form-control" required="required">*@
                                                            @if (CBRF.RequestSubmissionFor == "Self")
                                                            {
                                                                <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="" />
                                                            }
                                                            else if (CBRF.RequestSubmissionFor == "OnBehalf")
                                                            {
                                                                <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="@(!IsEdit ? (CBRF.OtherEmployeeEmailId ?? "") : "")" />
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card" id="divOnBehalf">
                            <div class="card-header collapsed" id="headingOnBehalf" data-toggle="collapse" data-target="#collapseOnBehalf" aria-expanded="true" aria-controls="collapseOnBehalf">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseOnBehalf" aria-expanded="true" aria-controls="collapseOnBehalf">
                                        <img src="~/assets/img/empIcon.svg" width="24" height="24" class="mr-2" />Applicant Details
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseOnBehalf" class="collapse show" aria-labelledby="headingOnBehalf">
                                <div class="card-body empDetailsBg">
                                    <div class="row">

                                        <div class="col-md-12 col-lg-12 col-12">
                                            <div class="empDetailsFields">
                                                <div class="row">
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block autocomplete-div">
                                                        <input type="hidden" id="txtOtherEmployeeName" name="txtOtherEmployeeName" value="@CBRF.OtherEmployeeName" />
                                                        <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="@CBRF.OtherEmployeeEmailId" />
                                                        <input type="text" class="w-100 txtDisable" name="txtOtherEmpname" id="txtOtherEmpname" value="@(CBRF.OtherEmployeeName ?? "")" onkeypress="alphaOnly(event)" required />
                                                        <span class="placeholder">Name (Type 4 letters)</span>
                                                    </div>

                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfEmpId" class="inpDisable inpText" id="txtOnBehalfEmpId" value="@(!IsNew || !IsEdit ? (CBRF.OnBehalfEmployeeIDNo ?? "") : "")" onkeypress="allowNumbersOnly(event)" required>
                                                        <span class="placeholder">Employee Code</span>
                                                    </div>



                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfCostCenterNumber" autocomplete="off" class="w-100 inpDisable" id="txtOnBehalfCostCenterNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew || !IsEdit  ? (CBRF.OnBehalfCostCenterNumber ?? "") : "")" required>
                                                        <span class="placeholder">Cost Center No.</span>
                                                    </div>

                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfTelephone" id="txtOnBehalfTelephone" autocomplete="off" class="inpText" value="@((!IsNew && CBRF.OnBehalfTelephone != 0) || (!IsEdit && CBRF.OnBehalfTelephone != 0) ? (CBRF.OnBehalfTelephone ?? "") : "")" onkeypress="allowNumbersOnly(event)" required>
                                                        <span class="placeholder">Telephone (office)</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" maxlength="10" name="txtOnBehalfMobile" id="txtOnBehalfMobile" class="inpText" value="@(!IsNew || !IsEdit ? (CBRF.OnBehalfMobile ?? "") : "")" onkeypress="allowNumbersOnly(event)" required>
                                                        <span class="placeholder">Mobile(+91)</span>
                                                    </div>


                                                    <div class="form-group col-md-5 col-lg-5 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfEmail" id="txtOnBehalfEmail" class="inpDisable" value="@(!IsNew || !IsEdit ? (CBRF.OtherEmployeeEmailId ?? "") : "")" required>
                                                        <span class="placeholder">Email ID</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfDepartment" class="inpDisable inpText" id="txtOnBehalfDepartment" value="@(!IsNew || !IsEdit ? (CBRF.OnBehlafDepartment ?? "") : "")" required>
                                                        <span class="placeholder">Department</span>
                                                    </div>

                                                    <div class="col-12 col-md-4 form-group inputSelect">

                                                        <select name="txtOnBehalfdesignation" class="w-100 inpDisable spanUpperSide" id="txtOnBehalfdesignation" onchange="checkSelect('txtOnBehalfdesignation');" required></select>
                                                        <span class="placeholder">Designation</span>
                                                    </div>

                                                    <div class="form-group col-md-4 col-lg-4 col-12 input-block">

                                                        <select name="ddOnBehalfLocation" class="spanUpperSide" id="ddOnBehalfLocation" onchange="checkSelect('ddOnBehalfLocation')" required></select>
                                                        <span class="placeholder">Location</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header collapsed" id="headingTwo" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                        <img src="~/assets/img/transactionIcon.svg" width="24" height="24" class="mr-2" />  Transaction Fields
                                    </button>
                                </h5>
                            </div>


                            <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo">
                                <div class="card-body">
                                    <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="" />
                                    <input type="hidden" id="FormSrId" name="FormSrId" value="@(CBRF.Id)" />
                                    <input type="hidden" id="FormId" name="FormId" value="@(FormId)" />
                                    <input type="hidden" id="AppRowId" name="AppRowId" value="@(AppRowId)" />
                                    <span id="hiddenApproverInformation"></span>

                                    <div class="form-row">

                                        <div class="col-4 col-md-4 form-group input-block">
                                            <div class="d-flex input-block">
                                                <input type="text" value="SC-" readonly class="inpSC col-2" style="max-width:50px;" />
                                                <input type="text" name="txtShoppingCartNo" maxlength="10" autocomplete="off" class="inpDisable TransView" onkeypress="allowNumbersOnly(event)" id="txtShoppingCartNo" style="margin-left:5px;" value="@(!IsNew ||!IsEdit ? (CBRF.ShoppingCartNo ?? "") : "")">
                                                <span for="drpInstrument" class="placeholder TransView forShoppingCart">Shopping Cart Number</span>
                                            </div>

                                        </div>
                                        <div class="col-4 col-md-4 form-group input-block">

                                            <input type="text" name="txtName" autocomplete="off" class="inpDisable TransView" id="txtName" value="@(!IsNew || !IsEdit ? (CBRF.Name ?? " ") : "")">
                                            <span class="placeholder TransView">Name (Booked By)</span>
                                        </div>
                                        <div class="col-4 col-md-4 form-group input-block">

                                            <input type="text" name="txtContactNumber" maxlength="10" autocomplete="off" class="inpDisable TransView" id="txtContactNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew || !IsEdit ? (CBRF.ContactNumber ?? "") : "")">
                                            <span for="drpInstrument" class="placeholder TransView">Contact Number (Booked By)</span>
                                        </div>
                                    </div>

                                    <div class="form-row">

                                    </div>

                                    <label>Car Required</label>

                                    <div class="form-row">

                                        <div class="form-group col-md-6 col-12">

                                            <div class="d-flex dflexMargin input-block">
                                                <input type="date" name="txtCarRequiredFromDate" autocomplete="off" style="width:250px !important;" class="inpDisable TransView" id="txtCarRequiredFromDate" value="@(!IsNew  || !IsEdit ? (CBRF.CarRequiredFromDate.ToString("yyyy-MM-dd") ?? "") : "")">
                                                <span class="placeholder TransView">From  (MM-DD-YY) </span>
                                                <div class="form-group timepicker input-block" twelvehour="true">
                                                    <input id="txtCarRequiredFromTime" name="txtCarRequiredFromTime" type="time" class="wField form-control" style=" background-color: white !important;" value="@(!IsNew  || !IsEdit ? (CBRF.CarRequiredFromDate.ToString("HH:mm") ?? "") : "")" />
                                                    <span class="placeholder TransView"> Time</span>
                                                </div>

                                            </div>

                                        </div>
                                        <div class="form-group col-md-6 col-12">

                                            <div class="d-flex dflexMargin input-block">
                                                <input type="date" name="txtCarRequiredToDate" autocomplete="off" style="width:250px !important;" class="inpDisable TransView" id="txtCarRequiredToDate" value="@(!IsNew || !IsEdit ? (CBRF.CarRequiredToDate.ToString("yyyy-MM-dd") ?? "") : "")">
                                                <span class="placeholder TransView">To (MM-DD-YY) </span>
                                                <div class="form-group timepicker input-block" twelvehour="true">
                                                    <input id="txtCarRequiredToTime" name="txtCarRequiredToTime" type="time" class="wField form-control" style=" background-color: white !important;" value="@(!IsNew || !IsEdit ? (CBRF.CarRequiredToDate.ToString("HH:mm") ?? "") : "")" />
                                                    <span class="placeholder  TransView"> Time</span>

                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <label class="f-600" id="lblBookedFor">Booked For</label>
                                    <div>
                                        <input type="file" id="UserDetailscsvfile" name="files[]" />
                                        <input type="button" id="viewfile" value="Export To Table" onclick="ExportToTable()" />
                                        &nbsp;<label><b>Note</b>: Only Excel format will be allowed.</label>
                                    </div>
                                    <div>  <a download href="~/Doc/DownloadSampleFile.xlsx" target="_blank"> <i class="fa-solid fa-file-csv"></i> Download Sample File </a></div>
                                    <table class="mainTbl table table-border form-table-container-2">
                                        <tr>
                                            <td class="bt-0 bb-0 pl-0 pr-0">
                                                <table class="w-100 mx-auto table table-border form-border text-center">

                                                    <thead class="form-head-1" style="margin-left:inherit !important;">
                                                        <tr>
                                                            <th>Sr. No.</th>
                                                            <th>User Name</th>
                                                            <th>User Contact Number</th>
                                                            <th>Destination</th>
                                                            <th>Reporting Time</th>
                                                            <th>Reporting Place with address</th>
                                                            <th></th>

                                                        </tr>
                                                    </thead>
                                                    @if (IsNew)
                                                    {
                                                        var count = 1;
                                                        <tbody class="form-border tableUser" id="usersBody">
                                                            @foreach (var itemCabUser in CabUsersList)
                                                            {

                                                                <tr id='@("row" + count)' class="tr_input">
                                                                    <td class="sNo text-center">@count</td>
                                                                    <td class="text-center"><input autocomplete="off" type="text" class="sftDetClass form-control txtDisable inpValidateUserName" id='@("txtUserName_"+count)' name='@("txtUserName_"+count)' maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" value="@itemCabUser.UserName" /><input type="hidden" id='@("txtCBUId_"+count)' name='@("txtCBUId_"+count)' value="@itemCabUser.CBUId" /></td>
                                                                    <td class="text-center"><input autocomplete="off" type="text" class="form-control txtDisable inpValidateUserContNum" id='@("txtUserContactNumber_"+count)' name='@("txtUserContactNumber_"+count)' maxlength="10" onkeypress="allowNumbersOnly(event)" onPaste="return false" value="@itemCabUser.UserContactNumber" /></td>
                                                                    <td class="text-center"><input autocomplete="off" type="text" class="form-control txtDisable inpValidateDesg" id='@("txtDestination_"+count)' name='@("txtDestination_"+count)' maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" value="@itemCabUser.Destination" /></td>
                                                                    <td class="text-center">
                                                                        <input autocomplete="off" class="wField txtDisable widthForTime form-control inpValidateRtime" type="time" id='@("txtReportingTime_"+count)' name='@("txtReportingTime_"+count)' maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" value="@itemCabUser.ReportingTime.ToString("HH:mm")" />
                                                                    </td>
                                                                    <td class="text-center">
                                                                        <textarea class=" form-control txtDisable input-width-1 select-border emp-name-input inpValidateReportingAddress" cols="60" rows="2" maxlength="500" id='@("txtReportingPlaceWithAddress_"+count)' name='@("txtReportingPlaceWithAddress_"+count)' onPaste="return false">@itemCabUser.ReportingPlaceWithAddress</textarea>
                                                                    </td>
                                                                    <td class="text-center" style="background-color:white; max-width:123px; vertical-align:central;">
                                                                        <input class="remove-btn  remove align-center" type="image" src="~/assets/img/remove.png"
                                                                               alt="Remove" style="max-width: 85%; background-color: white; border:none;">
                                                                    </td>

                                                                </tr>
                                                                count++;
                                                            }


                                                        </tbody>
                                                    }
                                                </table>
                                            </td>
                                        </tr>
                                        @if (IsNew || !IsEdit)
                                        {

                                            <tr align="right" id="addSoftwarebtn">
                                                <td class="">
                                                    <button type="button" class="btn btn-sm submit-btn d-flex float-right mb-2 bl-1 " onclick="AddUsersRows()">
                                                        + Add
                                                    </button>
                                                    <input type="hidden" name="totalrows" id="totalrows" />
                                                </td>
                                            </tr>

                                        }
                                    </table>

                                    <div class="form-row">
                                        <div class="form-group col-md-4 col-12 input-block">
                                            <input readonly type="text" name="txtNumberofUsers" autocomplete="off" class="inpDisable spanUpperSide TransView" id="txtNumberofUsers" onkeypress="allowNumbersOnly(event)" value="@(!IsNew || !IsEdit ? (CBRF.NumberofUsers ?? "") : "")" onpaste="return false">
                                            <span class="placeholder TransView">Number of Travellers</span>
                                        </div>
                                    </div>

                                    <label class="f-600">Flight No & Time (Incase it is Airport Pickup or Drop)</label>
                                    <div class="form-row">

                                        <div class="form-group col-md-4 col-12 input-block">

                                            <select name="drpAirportPickUpDrop" id="drpAirportPickUpDrop" onchange="FlightEnableDisable(); checkSelect('drpAirportPickUpDrop');" class="drpDisable spanUpperSide TransView">
                                                <option @(CBRF.AirportPickUpDrop == "No" ? "selected" : "" ) value="No">No</option>
                                                <option @(CBRF.AirportPickUpDrop == "Yes" ? "selected" : "" ) value="Yes">Yes</option>
                                            </select>
                                            <span class="placeholder TransView" style="background-color:white !important;">Airport Pick Up Drop</span>
                                        </div>
                                        <div class="form-group col-md-4 col-12 input-block d-none" id="divFlightNo">

                                            <input type="text" name="txtFlightNo" autocomplete="off" class="inpDisable spanUpperSide TransView" id="txtFlightNo" maxlength="10" value="@(!IsNew || !IsEdit ? (CBRF.FlightNo ?? "") : "")">
                                            <span class="placeholder TransView">Flight No</span>
                                        </div>
                                        <div class="form-group col-md-4 col-12 d-none" id="divFlightTime">
                                            <div class="d-flex dflexMargin input-block">
                                                <input id="txtFlightTime" name="txtFlightTime" type="time" class="form-control" style=" background-color: white !important;" value="@(!IsNew || !IsEdit ? (CBRF.FlightTime.ToString("HH:mm") ?? "") : "")" />
                                                <span class="placeholder TransView">Flight Time</span>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-row">
                                        <div class="form-group col-md-12 col-12 input-block">
                                            <textarea class="form-control input-width-1 mx-auto TransView" cols="60" rows="2" maxlength="500" name="txtReasonforBooking" id="txtReasonforBooking" required>@(!IsNew || !IsEdit ? (CBRF.ReasonforBooking ?? ""): "")</textarea>
                                            <span class="placeholder TransView">Reason for Booking</span>
                                        </div>
                                    </div>
                                    <div class="form-row">
                                        <div class="col-12 form-group">
                                            <span class="f-600">Note</span> :- If the above details are  not filled properly or are left incomplete the booking will be not be considered
                                        </div>
                                    </div>

                                    @*<div class="form-row">

                                            <div class="form-group col-md-6 col-12">
                                                @if (CBRF.attachmentlist.attachmentData.Count != 0)
                                                {
                                                    foreach (var attachment in CBRF.attachmentlist.attachmentData)
                                                    {

                                                        <label class="f-600">File Upload: <span><i class="fa fa-upload" aria-hidden="true"></i></span></label><br>


                                                        <input type="file" id="fileToUpload" name="fileToUpload" style="background-color: white !important; width: 205px;" />
                                                        <input type="hidden" id="attachedfile" name="attachedfile" value="@System.Configuration.ConfigurationManager.AppSettings["SharepointSiteURL"]@attachment.ServerRelativeUrl" />
                                                        <input type="hidden" id="attachedfileName" name="attachedfileName" value="@attachment.FileName" />
                                                        <a href=@System.Configuration.ConfigurationManager.AppSettings["SharepointSiteURL"]@attachment.ServerRelativeUrl download=@attachment.FileName target="_blank">@attachment.FileName </a>

                                                    }
                                                }
                                                else
                                                {
                                                    <label class="f-600">File Upload:<span><i class="fa fa-upload" aria-hidden="true"></i></span></label><br>

                                                    <input type="file" id="fileToUpload" name="fileToUpload" style="background-color: white !important; width: 205px;" />
                                                }
                                            </div>
                                        </div>*@
                                </div>
                            </div>


                        </div>

                        <div class="card">
                            <div class="card-header collapsed" id="headingThree" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                        <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" />Approval Tracking
                                    </button>
                                </h5>
                            </div>
                            <div id="collapseThree" class="collapse" aria-labelledby="headingOne">
                                <div class="card-body approvalTracking">
                                    <table class="table w-100 td-border showBorder">
                                        <thead>
                                            <tr>
                                                @*<th>Sr. No.</th>*@
                                                <th>Name</th>
                                                <th>Role</th>
                                                <th>Processed on</th>
                                                <th>Status</th>
                                                <th class="text-center">Comments</th>
                                                <th class="text-center">Approval Level</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (!IsNew || !IsEdit)
                                            {
                                                //Dynamic Code
                                                var appList = ViewBag.Model.three as List<Skoda_DCMS.Models.ApprovalDataModel>;

                                                {
                                                    Html.RenderPartial("_ApprovalTracking", appList);
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header collapsed" id="headingFive" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                        <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" /> Action
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseFive" class="collapse" aria-labelledby="headingFive">
                                <div class="card-body actionTab">
                                    <label class="f-600">Note:To be filled by the Admin</label>
                                    <div class="form-row">
                                        <div class="form-group col-md-4 col-12">
                                            <label class="f-600">Type of Car</label>
                                            <select name="ddTypeofCar" class="drpSize mb-2" style="background-color:white !important;" id="ddTypeofCar" disabled></select>
                                            <input type="text" name="txtTypeofCarOther" style="background-color:white !important;" autocomplete="off" class="inpDisable" id="txtTypeofCarOther" value="@(!IsNew ? (CBRF.TypeofCarOther ?? "") : "")" disabled>
                                        </div>
                                        <div class="form-group col-md-4 col-12">
                                            <label class="f-600">Vehicle number</label>
                                            <select name="ddVehicleNumber" class="drpSize mb-2" style="background-color:white !important;" id="ddVehicleNumber" disabled></select>
                                            <input type="text" name="txtVehicleNumberOther" style="background-color:white !important;" autocomplete="off" class="inpDisable" id="txtVehicleNumberOther" value="@(!IsNew ? (CBRF.VehicleNumberOther ?? "") : "")" disabled>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                    //}
                }

                @*CREATE SECTION*@
                else
                {
                    <div class="">
                        <div>
                            <ol class="breadcrumb pl-0">
                                <li>
                                    <a href="/Dashboard?formName=CBRF">
                                        Dashboard
                                    </a>
                                </li>
                                <li class="active"><a href="/Dashboard/GetDepartmentWiseForms?department=HR">HR Department</a></li>
                                <li class="active">Cab Booking Request Form</li>
                            </ol>
                        </div>
                        <div class="row breadcrumb-container table-bordered  mr-1 ml-1" style="background-color: rgb(219,238,213) !important; ">
                            <div class="col-md-2 col-lg-2">
                                <span class="placeholder">Date : @(!IsNew ||!IsEdit ? (Convert.ToDateTime(CBRF.FormId.Created).ToShortDateString()) : DateTime.Now.ToShortDateString())</span>
                            </div>
                            <div class="col-md-8 col-lg-8 mt-2 mb-1 form-heading" style="text-align:center; margin-top:5px">
                                <span> Cab Booking Request Form</span>
                            </div>
                            <div class="col-md-2 col-lg-2">
                                @if (!IsNew || !IsEdit)
                                {
                                    <span class="placeholder"> Form Id : @(!IsNew || !IsEdit ? ("CBRF" + CBRF.FormID.Id ?? "") : "" )</span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="heading d-none" id="headingErr">
                        <h1 id="" class="info-header">Following fields are mandatory. Please fill in information for<br /></h1>
                        <div id="add_to_me" class="header-list" style="color:red;"></div>
                    </div>
                    <div id="accordion">
                        <div class="card">
                            <div class="card-header collapsed" id="headingSelf" data-toggle="collapse" data-target="#collapseSelf" aria-expanded="true" aria-controls="collapseSelf">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseSelf" aria-expanded="true" aria-controls="collapseSelf">
                                        <img src="~/assets/img/empIcon.svg" width="24" height="24" class="mr-2" /> Employee Details
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseSelf" class="collapse show" aria-labelledby="headingSelf">
                                <div class="card-body empDetailsBg">
                                    <div class="row">

                                        <div class="col-md-12 col-lg-12 col-12">
                                            <div class="empDetailsFields">

                                                <div class="row">
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" onkeypress="alphaOnly(event)" autocomplete="off" name="txtEmployeeName" maxlength="20" class="inpText " id="txtEmployeeName" readonly value="@(!IsNew || !IsEdit ? (CBRF.EmployeeName ?? "") : "")">
                                                        <span class="placeholder firstLastName">Employee Name</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" autocomplete="off" name="txtEmpId" class="inpDisable inpText" id="txtEmpId" value="@(!IsNew || !IsEdit ? (CBRF.SelfEmployeeIDNo ?? "") : "")" onkeypress="allowNumbersOnly(event)" readonly>
                                                        <span class="placeholder ">Employee Code</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" name="txtDepartment" autocomplete="off" class="w-100 inpDisable" id="txtDepartment" value="@(!IsNew ? (CBRF.Department ?? " ") : " ")" readonly>
                                                        <span class="placeholder ">Department</span>
                                                    </div>

                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" name="txtCostCenterNumber" autocomplete="off" class="w-100 inpDisable" id="txtCostCenterNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew ? (CBRF.CostCenterNumber ?? "") : "")" readonly>
                                                        <span class=" placeholder">Cost Center No.</span>
                                                    </div>

                                                    <div class="col-12 col-md-3 form-group inputSelect">

                                                        <select name="ddEmpDesignation" class="w-100 inpDisable spanUpperSide" id="ddEmpDesignation" onchange="checkSelect('ddEmpDesignation')"></select>
                                                        <span class=" placeholder">Designation<span class="astColor">*</span></span>
                                                    </div>

                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" autocomplete="off" maxlength="10" name="txtMobile" id="txtMobile" class="inpText" value="@(!IsNew ? (CBRF.SelfMobile ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                        <span class=" placeholder">Mobile(+91)</span>
                                                    </div>
                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtTelephone" id="txtTelephone" autocomplete="off" class="inpText"
                                                               maxlength="10"
                                                               value="@((!IsNew && CBRF.SelfTelephone != 0) || (!IsEdit && CBRF.SelfTelephone != 0) ? (CBRF.SelfTelephone ?? "") : "")" onkeypress="allowNumbersOnly(event)" required>
                                                        <span class=" placeholder">Telephone (office)</span>
                                                    </div>

                                                    <div class="form-group col-md-5 col-lg-5 col-12 input-block">

                                                        <input type="text" autocomplete="off" name="txtEmail" id="txtEmail" class="inpDisable" onkeypress="allowNumbersOnly(event)" value="@(!IsNew || !IsEdit ? (CBRF.EmployeeEmailId ?? "") : "")" readonly>
                                                        <span class=" placeholder">Email ID</span>
                                                    </div>
                                                    <div class="form-group col-md-4 col-lg-4 col-12 inputSelect">

                                                        <select name="ddEmpLocation" class="" id="ddEmpLocation" onchange="checkSelect('ddEmpLocation')" required></select>
                                                        <span class=" placeholder">Location<span class="astColor">*</span></span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-12 inputSelect">

                                                        <select name="drpRequestSubType" id="drpRequestSubType" class="" onchange="RequestSubmission(); checkSelect('drpRequestSubType');" required>
                                                            <option value="null" selected style="display:none;"></option>
                                                            <option value="Self">Self</option>
                                                            <option value="OnBehalf">On Behalf</option>
                                                        </select>
                                                        <span class=" placeholder">Request Submission Type<span class="astColor">*</span></span>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card d-none" id="divOnBehalf">
                            <div class="card-header collapsed" id="headingOnBehalf" data-toggle="collapse" data-target="#collapseOnBehalf" aria-expanded="true" aria-controls="collapseOnBehalf">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseOnBehalf" aria-expanded="true" aria-controls="collapseOnBehalf">
                                        <img src="~/assets/img/empIcon.svg" width="24" height="24" class="mr-2" />Applicant Details
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseOnBehalf" class="collapse show" aria-labelledby="headingOnBehalf">
                                <div class="card-body empDetailsBg">
                                    <div class="row">


                                        <div class="col-md-12 col-lg-12 col-12">
                                            <div class="empDetailsFields">
                                                <div class="row">
                                                    <div id="autocomplete-div" class="form-group col-md-3 col-lg-3 col-12 input-block autocomplete-div">

                                                        <input class="inpText" type="hidden" name="txtOtherEmployeeName" autocomplete="off" id="txtOtherEmployeeName">
                                                        <input type="text" name="txtOtherEmpname" id="txtOtherEmpname" class="form-control ui-autocomplete-input" autocomplete="off" required />
                                                        <span class="placeholder">Name (Type 4 letters)<span class="astColor">*</span></span>
                                                        <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="" />
                                                    </div>

                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfEmpId" autocomplete="off" class="inpText" id="txtOnBehalfEmpId" value="@(!IsNew || !IsEdit ? (CBRF.OnBehalfEmployeeIDNo ?? "") : "")" onkeypress="allowNumbersOnly(event)" required>
                                                        <span class="placeholder">Employee Code</span>
                                                    </div>


                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfCostCenterNumber" autocomplete="off" class="inpText" id="txtOnBehalfCostCenterNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew ? (CBRF.OnBehalfCostCenterNumber ?? "") : "")" required>
                                                        <span class="placeholder">Cost Center No.</span>
                                                    </div>

                                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfTelephone" id="txtOnBehalfTelephone" autocomplete="off" class="inpDisable" value="@((!IsNew && CBRF.OnBehalfTelephone != 0) || (!IsEdit && CBRF.OnBehalfTelephone != 0) ? (CBRF.OnBehalfTelephone ?? "") : "")" onkeypress="allowNumbersOnly(event)" required>
                                                        <span class="placeholder">Telephone (office)</span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" maxlength="10" name="txtOnBehalfMobile" autocomplete="off" id="txtOnBehalfMobile" class="inpText" value="@((!IsNew && CBRF.OnBehalfMobile != 0) || (!IsEdit && CBRF.OnBehalfMobile != 0) ? (CBRF.OnBehalfMobile ?? "") : "")" onkeypress="allowNumbersOnly(event)" required>
                                                        <span class="placeholder">Mobile(+91)<span class="astColor">*</span></span>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <div class="form-group col-md-5 col-lg-5 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfEmail" autocomplete="off" id="txtOnBehalfEmail" class="inpText" value="@(!IsNew || !IsEdit ? (CBRF.OtherEmployeeEmailId ?? "") : "")" required>
                                                        <span class="placeholder">Email ID<span class="astColor">*</span></span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                        <input type="text" name="txtOnBehalfDepartment" autocomplete="off" class="inpText" id="txtOnBehalfDepartment" value="@(!IsNew || !IsEdit ? (CBRF.OnBehlafDepartment ?? "") : "")" required>
                                                        <span class="placeholder">Department</span>
                                                    </div>
                                                    <div class="col-12 col-md-4 form-group inputSelect">

                                                        <select name="txtOnBehalfdesignation" class="w-100 inpDisable spanUpperSide" id="txtOnBehalfdesignation" onchange="checkSelect('txtOnBehalfdesignation')" required></select>
                                                        <span class="placeholder">Designation<span class="astColor">*</span></span>
                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="form-group col-md-3 col-lg-3 col-12 inputSelect">

                                                        <select name="ddOnBehalfLocation" class="" id="ddOnBehalfLocation" onchange="checkSelect('ddOnBehalfLocation')" required></select>
                                                        <span class="placeholder">Location<span class="astColor">*</span></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="card">
                            <div class="card-header collapsed" id="headingTwo" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                        <img src="~/assets/img/transactionIcon.svg" width="24" height="24" class="mr-2" />  Transaction Fields
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo">
                                <div class="card-body">
                                    <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="" />

                                    <div class="form-row">
                                        <div class="col-4 col-md-4 form-group">
                                            <div class="d-flex input-block">
                                                <input type="text" value="SC-" readonly class="inpSC col-2" style="max-width:50px;" />
                                                <input type="text" name="txtShoppingCartNo" maxlength="10" autocomplete="off" class="w-100 inpDisable TransView" id="txtShoppingCartNo" onkeypress="allowNumbersOnly(event)" style="margin-left:5px;" value="@(!IsNew ? (CBRF.ShoppingCartNo ?? "") : "")" required>
                                                <span class="placeholder TransView forShoppingCart">Shopping Cart Number</span>
                                            </div>

                                        </div>
                                        <div class="col-4 col-md-4 form-group input-block">

                                            <input type="text" name="txtName" maxlength="50" autocomplete="off" class="d-block inpDisable TransView" id="txtName" onkeypress="alphaOnly(event)" value="@(!IsNew ? (CBRF.Name ?? " ") : "")">
                                            <span class="placeholder TransView"> Name (Booked By)<span class="astColor">*</span></span>
                                        </div>

                                        <div class="col-4 col-md-4 form-group input-block">

                                            <input type="text" name="txtContactNumber" maxlength="10" autocomplete="off" class="w-100 inpDisable d-block TransView" id="txtContactNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew ? (CBRF.ContactNumber ?? "") : "")" required>
                                            <span class="placeholder TransView"> Contact Number (Booked By)<span class="astColor">*</span></span>
                                        </div>
                                    </div>


                                    <label class="f-600">Car Required</label>
                                    <div class="form-row">
                                        <div class="col-12 col-md-6 form-group">
                                            <div class="d-flex dflexMargin input-block">
                                                <input type="date" name="txtCarRequiredFromDate" autocomplete="off" class="w-95 inpDisable TransView" style="width:250px !important;" id="txtCarRequiredFromDate" onclick="setStartDate()" value="@(!IsNew ? (CBRF.CarRequiredFromDate ?? "") : "")">
                                                <span class="placeholder TransView">From  (MM-DD-YY)<span class="astColor">*</span></span>
                                                <div class="form-group timepicker input-block" twelvehour="true">
                                                    <input id="txtCarRequiredFromTime" name="txtCarRequiredFromTime" type="time" class="wField form-control" style=" background-color: white !important;" />
                                                    <span class="placeholder TransView"> Time<span class="astColor">*</span></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-12 col-md-6 form-group">

                                            <div class="d-flex dflexMargin input-block">
                                                <input type="date" name="txtCarRequiredToDate" autocomplete="off" class="w-95 inpDisable TransView" style="width:250px !important;" id="txtCarRequiredToDate" onclick="date_val_end()" value="@(!IsNew ? (CBRF.CarRequiredToDate ?? "") : "")">
                                                <span class="placeholder TransView">To (MM-DD-YY)<span class="astColor">*</span> </span>
                                                <div class="form-group timepicker input-block" twelvehour="true">
                                                    <input id="txtCarRequiredToTime" name="txtCarRequiredToTime" type="time" class="wField form-control" style=" background-color: white !important;" />
                                                    <span class="placeholder  TransView"> Time<span class="astColor">*</span></span>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <label class="f-600" id="lblBookedFor">Booked For</label>

                                    <div>
                                        <input type="file" id="UserDetailscsvfile" />
                                        <input type="button" id="viewfile" value="Export To Table" onclick="ExportToTable()" />
                                        &nbsp;<label><b>Note</b>: Only Excel format will be allowed.</label>
                                    </div>
                                    <div>
                                        <a download href="~/Doc/DownloadSampleFile.xlsx" target="_blank"> <i class="fa-solid fa-file-csv"></i> Download Sample File </a>
                                    </div>

                                    <table class="mainTbl table table-border form-table-container-2">
                                        <tr>
                                            <td class="bt-0 bb-0 pl-0 pr-0" colspan="6">
                                                <table class="w-100 mx-auto table table-border form-border text-center">

                                                    <thead class="form-head-1" style="margin-left:inherit !important;">
                                                        <tr>
                                                            <th>Sr. No.</th>
                                                            <th>User Name</th>
                                                            <th>User Contact Number</th>
                                                            <th>Destination</th>
                                                            <th>Reporting Time</th>
                                                            <th>Reporting Place with address</th>
                                                            <th></th>

                                                        </tr>
                                                    </thead>
                                                    <tbody class="form-border tableUser" id="usersBody"></tbody>
                                                    @*<tbody class="form-border tableUser" id="usersBody">
                                                            @for (var i = 1; i < 2; i++)
                                                            {
                                                                <tr id='@("row" + i)' class="tr_input">
                                                                    <td class="sNo text-center">@i</td>
                                                                    <td class="text-center"><input autocomplete="off" type="text" class="sftDetClass form-control inpValidateUserName" name="txtUserName_1" id="txtUserName_1" maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" /></td>
                                                                    <td class="text-center"><input autocomplete="off" type="text" class="form-control inpValidateUserContNum" name="txtUserContactNumber_1" id="txtUserContactNumber_1" maxlength="10" onkeypress="allowNumbersOnly(event)" onPaste="return false" /></td>
                                                                    <td class="text-center"><input autocomplete="off" type="text" class="form-control inpValidateDesg" name="txtDestination_1" id="txtDestination_1" maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" /></td>
                                                                    <td class="text-center">
                                                                        <input class="wField form-control widthForTime inpValidateRtime" autocomplete="off" type="time" name="txtReportingTime_1" id="txtReportingTime_1" maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" />
                                                                    </td>
                                                                    <td class="text-center">
                                                                        <textarea autocomplete="off" class=" form-control input-width-1 select-border emp-name-input inpValidateReportingAddress" cols="60" rows="2" maxlength="500" id="txtReportingPlaceWithAddress_1" name="txtReportingPlaceWithAddress_1" onPaste="return false"></textarea>
                                                                    </td>
                                                                    <td class="text-center" style="background-color:white; max-width:123px; vertical-align:central;">
                                                                        <input class="remove-btn  remove align-center" type="image" src="~/assets/img/remove.png"
                                                                               alt="Remove" style="max-width: 85%; background-color: white; border:none;">
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>*@
                                                </table>
                                            </td>
                                        </tr>
                                        @if (IsNew || !IsEdit)
                                        {

                                            <tr align="right" id="addSoftwarebtn">
                                                <td colspan="6" class="pl-0">

                                                    <div class="input-group justify-content-end tblRowBtn mb-3 input-block">

                                                        <div class="input-group-append">
                                                            <button type="button" class="btn btn-sm submit-btn d-flex float-right mb-2 bl-1 " onclick="AddUsersRows()">
                                                                + Add
                                                            </button>
                                                            <input type="hidden" name="totalrows" id="totalrows" />
                                                        </div>
                                                    </div>



                                                </td>

                                            </tr>

                                        }
                                    </table>

                                    <div class="form-row">
                                        <div class="form-group col-md-4 col-12 input-block">
                                            <input readonly type="text" name="txtNumberofUsers" autocomplete="off" class="inpDisable TransView" id="txtNumberofUsers" onkeypress="allowNumbersOnly(event)" value="@(!IsNew ? (CBRF.NumberofUsers ?? "") : "")" onPaste="return false" required>
                                            <span class="placeholder TransView">Number of Travellers</span>
                                        </div>
                                    </div>

                                    <label class="f-600">Flight No &amp; Time (Incase it is Airport Pickup or Drop)</label>
                                    <div class="form-row">
                                        <div class="form-group col-md-4 col-12 inputSelect">
                                            <select name="drpAirportPickUpDrop" class="w-95 TransView" id="drpAirportPickUpDrop" onchange="FlightEnableDisable(); checkSelect('drpAirportPickUpDrop');" required>
                                                <option value="" selected style="display:none;"></option>
                                                <option value="No">No</option>
                                                <option value="Yes">Yes</option>
                                            </select>
                                            <span class="placeholder TransView" style="background-color:white !important;">Airport Pick Up Drop</span>
                                        </div>

                                        <div class="form-group col-md-4 col-12 input-block  d-none" id="divFlightNo">

                                            <input type="text" name="txtFlightNo" autocomplete="off" style="background-color: white !important;" class="inpDisable TransView" id="txtFlightNo" maxlength="10" value="@(!IsNew ? (CBRF.FlightNo ?? "") : "")" required>
                                            <span class="placeholder TransView">Flight No<span class="astColor">*</span></span>
                                        </div>

                                        <div class="form-group col-md-4 col-12  d-none" id="divFlightTime">
                                            <div class="d-flex dflexMargin">
                                                <div class="form-group timepicker input-block" twelvehour="true">
                                                    <input id="txtFlightTime" name="txtFlightTime" type="time" class="form-control" style=" background-color: white !important;" />
                                                    <span class="placeholder TransView">Flight Time<span class="astColor">*</span></span>
                                                </div>
                                            </div>
                                        </div>
                                        <span id="hiddenApproverInformation"></span>
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-12 col-12 input-block">
                                            <textarea class="form-control input-width-1 mx-auto TransView" cols="60" rows="2" maxlength="500" name="txtReasonforBooking" id="txtReasonforBooking" required>@(!IsNew || !IsEdit ? (CBRF.ReasonforBooking ?? ""): "")</textarea>
                                            <span class="placeholder TransView">Reason for Booking</span>
                                        </div>
                                    </div>
                                    @*<div class="form-row">
                                            <div class="form-group col-12">
                                                <label class="f-600">File Upload:  <span><i class="fa fa-upload" aria-hidden="true"></i></span></label>

                                                <input type="file" id="fileToUpload" name="fileToUpload" style="background-color:white !important;" />
                                            </div>
                                        </div>*@

                                    <div class="form-row">
                                        <div class="form-group col-12">
                                            <span class="f-600">Note:- If the above details are  not filled properly or are left incomplete the booking will be not be considered</span>

                                        </div>
                                    </div>

                                    <div class="form-row">
                                        <div class="col-12 form-group">
                                            <div>
                                                <p class="text-left f-600">SF_S_034</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                        @*<div class="card">
                                <div class="card-header collapsed" id="headingFive" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                    <h5 class="mb-0">
                                        <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                            <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" /> Action
                                        </button>
                                    </h5>
                                </div>

                                <div id="collapseFive" class="collapse" aria-labelledby="headingFive">
                                    <div class="card-body actionTab">
                                        <label class="f-600">Note:To be filled by the Admin</label>
                                        <div class="form-row">
                                            <div class="form-group col-md-4 col-12">
                                                <label class="f-600">Type of Car</label>
                                                <select name="ddTypeofCar" class="drpSize mb-2" style="background-color:white !important;" id="ddTypeofCar" disabled></select>
                                                <input type="text" name="txtTypeofCarOther" style="background-color:white !important;" autocomplete="off" class="inpDisable" id="txtTypeofCarOther" value="@(!IsNew ? (CBRF.TypeofCarOther ?? "") : "")" disabled>
                                            </div>
                                            <div class="form-group col-md-4 col-12">
                                                <label class="f-600">Vehicle number</label>
                                                <select name="ddVehicleNumber" class="drpSize mb-2" style="background-color:white !important;" id="ddVehicleNumber" disabled></select>
                                                <input type="text" name="txtVehicleNumberOther" style="background-color:white !important;" autocomplete="off" class="inpDisable" id="txtVehicleNumberOther" value="@(!IsNew ? (CBRF.VehicleNumberOther ?? "") : "")" disabled>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>*@
                    </div>

                }
            }
            @*VIEW SECTION*@
            else if (!IsNew)
            {
                <div class="">
                    <div>
                        <ol class="breadcrumb pl-0">
                            <li>
                                <a href="/Dashboard?formName=CBRF">
                                    Dashboard
                                </a>
                            </li>
                            <li class="active"><a href="/Dashboard/GetDepartmentWiseForms?department=HR">HR Department</a></li>
                            <li class="active">Cab Booking Request Form</li>
                        </ol>
                    </div>
                    <div class="row breadcrumb-container table-bordered  mr-1 ml-1" style="background-color: rgb(219,238,213) !important; ">
                        <div class="col-md-2 col-lg-2">
                            <span class="placeholder">Date : @(!IsNew ||!IsEdit ? (Convert.ToDateTime(CBRF.FormID.CreatedDate).ToShortDateString()) : DateTime.Now.ToShortDateString())</span>
                        </div>
                        <div class="col-md-8 col-lg-8 mt-2 mb-1 form-heading" style="text-align:center; margin-top:5px">
                            <span> Cab Booking Request Form</span>
                        </div>
                        <div class="col-md-2 col-lg-2">
                            @if (!IsNew || !IsEdit)
                            {
                                <span class="placeholder"> Form Id : @(!IsNew || !IsEdit ? ("CBRF" + CBRF.FormID.Id ?? "") : "" )</span>
                            }
                        </div>
                    </div>
                </div>
                <div id="accordion">
                    <div class="card">
                        <div class="card-header collapsed" id="headingSelf" data-toggle="collapse" data-target="#collapseSelf" aria-expanded="true" aria-controls="collapseSelf">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseSelf" aria-expanded="true" aria-controls="collapseSelf">
                                    <img src="~/assets/img/empIcon.svg" width="24" height="24" class="mr-2" /> Employee Details
                                </button>
                            </h5>
                        </div>

                        <div id="collapseSelf" class="collapse show" aria-labelledby="headingSelf">
                            <div class="card-body empDetailsBg">
                                <div class="row">

                                    <div class="col-md-12 col-lg-12 col-12">
                                        <div class="empDetailsFields">

                                            <div class="row">
                                                <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                    <input type="text" onkeypress="alphaOnly(event)" autocomplete="off" name="txtEmployeeName" maxlength="20" class="inpText" id="txtEmployeeName" readonly value="@(!IsNew || !IsEdit ? (CBRF.EmployeeName ?? "") : "")">
                                                    <span class="firstLastName placeholder">Employee Name</span>
                                                </div>
                                                <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                    <input type="text" name="txtEmpId" class="inpDisable inpText" id="txtEmpId" value="@(!IsNew || !IsEdit ? (CBRF.SelfEmployeeIDNo ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                    <span class="placeholder">Employee Code</span>
                                                </div>

                                                <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                    <input type="text" name="txtDepartment" autocomplete="off" class="w-100 inpDisable" id="txtDepartment" value="@(!IsNew ? (CBRF.Department ?? " ") : " ")">
                                                    <span class="placeholder">Department</span>
                                                </div>

                                                <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                    <input type="text" name="txtCostCenterNumber" autocomplete="off" class="w-100 inpDisable" id="txtCostCenterNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew ? (CBRF.CostCenterNumber ?? "") : "")">
                                                    <span class="placeholder">Cost Center No.</span>
                                                </div>

                                                <div class="form-group col-md-3 col-12 input-block">

                                                    <input type="text" class="inpDisable inpText spanUpperSide" name="txtdesignation" id="txtdesignation" onchange="checkSelect('txtdesignation')" value="@(!IsNew ? (CBRF.Designation ?? "") : "")" readonly />
                                                    <span class="placeholder">Designation</span>
                                                </div>

                                                <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                    <input type="text" name="txtMobile" id="txtMobile" class="inpDisable" value="@((!IsNew && CBRF.SelfMobile != 0) || (!IsEdit && CBRF.SelfMobile != 0) ? (CBRF.SelfMobile ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                    <span class="placeholder">Mobile(+91)</span>
                                                </div>
                                                <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                    <input type="text" name="txtTelephone" id="txtTelephone" autocomplete="off" class="inpDisable"
                                                           maxlength="10" value="@((!IsNew && CBRF.SelfTelephone != 0) || (!IsEdit && CBRF.SelfTelephone != 0) ? (CBRF.SelfTelephone ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                    <span class="placeholder">Telephone (office)</span>
                                                </div>


                                                <div class="form-group col-md-5 col-lg-5 col-12 input-block">

                                                    <input type="text" name="txtEmail" id="txtEmail" class="inpDisable" onkeypress="allowNumbersOnly(event)" value="@(!IsNew || !IsEdit ? (CBRF.EmployeeEmailId ?? "") : "")">
                                                    <span class="placeholder">Email ID</span>
                                                </div>
                                                <div class="form-group col-md-4 col-lg-4 col-12 input-block">

                                                    <input type="text" name="ddEmpLocation" id="ddEmpLocation" onchange="checkSelect('ddEmpLocation');" class="inpText" value="@(!IsNew || !IsEdit ? (CBRF.Location ?? "") : "")" readonly>
                                                    <span class="placeholder">Location</span>
                                                </div>

                                                @*<div class="form-group col-md-2 col-lg-2 col-12">
                                                        <label class="f-600">Form ID:</label>
                                                        <input type="text" name="txtFormId" class="inpDisable" value="@(!IsNew || !IsEdit ? ("CBRF" + CBRF.three[0].FormId.Id ?? "") : "" )" readonly>

                                                    </div>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card" id="divOnBehalf">
                        <div class="card-header collapsed" id="headingOnBehalf" data-toggle="collapse" data-target="#collapseOnBehalf" aria-expanded="true" aria-controls="collapseOnBehalf">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseOnBehalf" aria-expanded="true" aria-controls="collapseOnBehalf">
                                    <img src="~/assets/img/empIcon.svg" width="24" height="24" class="mr-2" />Applicant Details
                                </button>
                            </h5>
                        </div>

                        <div id="collapseOnBehalf" class="collapse show" aria-labelledby="headingOnBehalf">
                            <div class="card-body empDetailsBg">
                                <div class="row">

                                    <div class="col-md-12 col-lg-12 col-12">
                                        <div class="empDetailsFields">
                                            <div class="row">
                                                <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                                    <input type="hidden" id="txtOtherEmployeeName" name="txtOtherEmployeeName" value="@(CBRF.OtherEmployeeName ?? "")" />
                                                    <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="@(CBRF.OtherEmployeeEmailId ?? "")" />
                                                    <input type="text" readonly class="w-100 txtDisable" name="txtOtherEmpname" id="txtOtherEmpname" value="@(CBRF.OtherEmployeeName ?? "")" onkeypress="alphaOnly(event)" required />
                                                    <span class="placeholder">Name (Type 4 letters)<span class="astColor">*</span></span>
                                                </div>
                                                <div class="form-group col-md-22 col-lg-2 col-12 input-block">

                                                    <input type="text" name="txtOnBehalfEmpId" class="inpDisable inpText" id="txtOnBehalfEmpId" value="@(!IsNew || !IsEdit ? (CBRF.OnBehalfEmployeeIDNo ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                    <span class="placeholder">Employee ID No</span>
                                                </div>
                                                <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                    <input type="text" name="txtOnBehalfCostCenterNumber" autocomplete="off" class="w-100 inpDisable" id="txtOnBehalfCostCenterNumber" onkeypress="allowNumbersOnly(event)" value="@(!IsNew ? (CBRF.OnBehalfCostCenterNumber ?? "") : "")">
                                                    <span class="placeholder">Cost Center Number</span>
                                                </div>

                                                <div class="form-group col-md-2 col-lg-2 col-12 input-block">

                                                    <input type="text" name="txtOnBehalfTelephone" id="txtOnBehalfTelephone" autocomplete="off" class="inpDisable" value="@((!IsNew && CBRF.OnBehalfTelephone != 0) || (!IsEdit && CBRF.OnBehalfTelephone != 0) ? (CBRF.OnBehalfTelephone ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                    <span class="placeholder">Telephone (office)</span>
                                                </div>

                                                <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                    <input type="text" maxlength="10" name="txtOnBehalfMobile" id="txtOnBehalfMobile" class="inpDisable" value="@((!IsNew && CBRF.OnBehalfMobile != 0) || (!IsEdit && CBRF.OnBehalfMobile != 0) ? (CBRF.OnBehalfMobile ?? "") : "")" onkeypress="allowNumbersOnly(event)">
                                                    <span class="placeholder">Mobile(+91)</span>
                                                </div>
                                                <div class="form-group col-md-5 col-lg-5 col-12 input-block">

                                                    <input type="text" name="txtOnBehalfEmail" id="txtOnBehalfEmail" class="inpDisable" value="@(!IsNew || !IsEdit ? (CBRF.OtherEmployeeEmailId ?? "") : "")">
                                                    <span class="placeholder">Email ID</span>
                                                </div>
                                                <div class="form-group col-md-3 col-lg-3 col-12 input-block">

                                                    <input type="text" name="txtOnBehalfDepartment" class="inpDisable inpText" id="txtOnBehalfDepartment" value="@(!IsNew || !IsEdit ? (CBRF.OnBehlafDepartment ?? "") : "")">
                                                    <span class="placeholder">Department</span>
                                                </div>



                                                <div class="col-12 col-md-3 form-group input-block">

                                                    <input type="text" class="w-100 txtDisable" name="txtOnBehalfdesignation" id="txtOnBehalfdesignation" value="@(!IsNew ? (CBRF.OnBehalfDesignation ?? "") : "")" disabled />
                                                    <span class="placeholder">Designation</span>
                                                </div>




                                            </div>

                                            <div class="row">
                                                <div class="form-group col-md-4 col-lg-4 col-12 input-block">
                                                    <input type="text" name="ddOnBehalfLocation" id="ddOnBehalfLocation" class="inpText" value="@(!IsNew || !IsEdit ? (CBRF.OnBehalfLocation ?? "") : "")" readonly>
                                                    <span class="placeholder">Location</span>
                                                </div>
                                            </div>


                                            @*<div class="form-group col-md-4 col-lg-4 col-12">
                                                    <label class="f-600">Date</label>
                                                    <input type="text" name="txtDate" placeholder="/ /" class="inpDisable" value="@(!IsNew ||!IsEdit ? (Convert.ToDateTime(CBRF.FormId.Created).ToString("dd-MM-yy")  ?? "" ) : DateTime.Now.ToShortDateString())" readonly>
                                                </div>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="card">
                        <div class="card-header collapsed" id="headingTwo" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                    <img src="~/assets/img/transactionIcon.svg" width="24" height="24" class="mr-2" />  Transaction Fields
                                </button>
                            </h5>
                        </div>
                        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo">
                            <div class="card-body">
                                <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" value="" />
                                <input type="hidden" id="FormSrId" name="FormSrId" value="@(CBRF.Id)" />
                                <input type="hidden" id="FormId" name="FormId" value="@(FormId)" />
                                <input type="hidden" id="AppRowId" name="AppRowId" value="@(AppRowId)" />

                                <div class="form-row">

                                    <div class="form-group col-md-4 col-4">
                                        <div class="d-flex input-block">
                                            <input type="text" value="SC-" readonly class="inpSC col-2" style="max-width:50px;" />
                                            <input type="text" name="txtShoppingCartNo" maxlength="10" autocomplete="off" class="w-100 inpDisable TransView" id="txtShoppingCartNo" onkeypress="allowNumbersOnly(event)" style="margin-left:5px;" value="@(!IsNew ? (CBRF.ShoppingCartNo ?? "") : "")">
                                            <span class="placeholder TransView pl-2 forShoppingCart">Shopping Cart Number</span>
                                        </div>

                                    </div>
                                    <div class="form-group col-md-4 col-4 input-block">

                                        <input type="text" name="txtName" autocomplete="off" class="w-100 d-block inpDisable TransView" id="txtName" value="@(!IsNew ? (CBRF.Name ?? " ") : "")">
                                        <span class="placeholder TransView">Name (Booked By)</span>
                                    </div>
                                    <div class="form-group col-md-4 col-4 input-block">

                                        <input type="text" name="txtContactNumber" maxlength="10" autocomplete="off" class="w-100 d-block inpDisable" id="txtContactNumber" value="@(!IsNew ? (CBRF.ContactNumber ?? "") : "")">
                                        <span class="placeholder TransView pl-2">Contact Number (Booked By)</span>
                                    </div>
                                </div>


                                <div class="form-row">

                                </div>

                                <label class="f-600">Car Required</label>
                                <div class="form-row">

                                    <div class="form-group col-md-6 col-12">
                                        <div class="d-flex dflexMargin input-block">

                                            <input type="date" name="txtCarRequiredFromDate" autocomplete="off" style="width:250px !important;" class="inpDisable" id="txtCarRequiredFromDate" value="@(!IsNew ? (CBRF.CarRequiredFromDate.ToString("yyyy-MM-dd") ?? "") : "")">
                                            <span class="placeholder TransView">From  (MM-DD-YY) </span>
                                            <div class="form-group timepicker input-block" twelvehour="true">
                                                <input id="txtCarRequiredFromTime" name="txtCarRequiredFromTime" type="time" class="form-control wField" disabled value="@(!IsNew  || !IsEdit ? (CBRF.CarRequiredFromDate.ToString("HH:mm") ?? "") : "")" />
                                                <span class="placeholder TransView"> Time</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6 col-12">


                                        <div class="d-flex dflexMargin input-block">
                                            <input type="date" name="txtCarRequiredToDate" autocomplete="off" style="width:250px !important;" class="inpDisable" id="txtCarRequiredToDate" value="@(!IsNew ? (CBRF.CarRequiredToDate.ToString("yyyy-MM-dd") ?? "") : "")">
                                            <span class="placeholder TransView">To (MM-DD-YY) </span>
                                            <div class="form-group timepicker input-block" twelvehour="true">
                                                <input id="txtCarRequiredToTime" name="txtCarRequiredToTime" type="time" class="form-control wField" disabled value="@(!IsNew || !IsEdit ? (CBRF.CarRequiredToDate.ToString("HH:mm") ?? "") : "")" />
                                                <span class="placeholder TransView"> Time</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <label class="f-600" id="lblBookedFor">Booked For</label>
                                <table class="mainTbl table table-border form-table-container-2">
                                    <tr>
                                        <td class="bt-0 bb-0 pl-0 pr-0">
                                            <table class="w-100 mx-auto table table-border form-border text-center">

                                                <thead class="form-head-1" style="margin-left:inherit !important;">
                                                    <tr>
                                                        <th>Sr. No.</th>
                                                        <th>User Name</th>
                                                        <th>User Contact Number</th>
                                                        <th>Destination</th>
                                                        <th>Reporting Time</th>
                                                        <th>Reporting Place with address</th>


                                                    </tr>
                                                </thead>
                                                @if (!IsNew)
                                                {
                                                    var count = 1;
                                                    <tbody class="form-border tableUser" id="usersBody">
                                                        @foreach (var item in CabUsersList)
                                                        {

                                                            <tr id='' class="tr_input">
                                                                <td class="text-center">@count</td>
                                                                <td class="text-center"><input readonly type="text" class="sftDetClass form-control txtDisable inpValidateName" name="txtUserName_1" id="txtUserName_1" maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" value="@item.UserName" /><input type="hidden" id="txtCBUId_1" name="txtCBUId_1" value="@item.CBUId" /></td>
                                                                <td class="text-center"><input readonly type="text" class="form-control txtDisable inpValidateName" name="txtUserContactNumber_1" id="txtUserContactNumber_1" maxlength="10" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" value="@item.UserContactNumber" /></td>
                                                                <td class="text-center"><input readonly type="text" class="form-control txtDisable inpValidateName" name="txtDestination_1" id="txtDestination_1" maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" value="@item.Destination" /></td>
                                                                <td class="text-center">
                                                                    <input readonly class="wField txtDisable form-control" type="time" name="txtReportingTime_1" id="txtReportingTime_1" maxlength="100" onkeypress="avoidSpecialSymbols(event)" onPaste="return false" value="@item.ReportingTime.ToString("HH:mm")" />
                                                                </td>
                                                                <td class="text-center">
                                                                    <textarea readonly class=" form-control txtDisable input-width-1 select-border emp-name-input" cols="60" rows="2" maxlength="500" id="txtReportingPlaceWithAddress_1" name="txtReportingPlaceWithAddress_1" onPaste="return false">@item.ReportingPlaceWithAddress</textarea>
                                                                </td>

                                                            </tr>
                                                            count++;
                                                        }
                                                    </tbody>
                                                }

                                            </table>
                                        </td>
                                    </tr>
                                </table>

                                <div class="form-row">
                                    <div class="form-group col-md-4 col-12 input-block">
                                        <input type="text" name="txtNumberofUsers" autocomplete="off" class="inpDisable" id="txtNumberofUsers" value="@(!IsNew ? (CBRF.NumberofUsers ?? "") : "")">
                                        <span class="placeholder TransView">Number of Travellers</span>
                                    </div>
                                </div>

                                <label class="f-600">Flight No & Time (Incase it is Airport Pickup or Drop)</label>
                                <div class="form-row">

                                    <div class="form-group col-md-4 col-12 input-block">

                                        <select name="drpAirportPickUpDrop" id="drpAirportPickUpDrop" class="w-95 drpDisable select-border spanUpperSide">
                                            <option @(CBRF.AirportPickUpDrop == "No" ? "selected" : "" ) value="No">No</option>
                                            <option @(CBRF.AirportPickUpDrop == "Yes" ? "selected" : "" ) value="Yes">Yes</option>
                                        </select>
                                        <span class="placeholder TransView" style="background-color:white !important;">Airport Pick Up Drop</span>
                                    </div>

                                    <div class="form-group col-md-4 col-12 input-block" id="divFlightNo">

                                        <input type="text" name="txtFlightNo" autocomplete="off" class="inpDisable" id="txtFlightNo" maxlength="10" value="@(!IsNew ? (CBRF.FlightNo ?? "") : "")">
                                        <span class="placeholder TransView">Flight No</span>
                                    </div>

                                    <div class="form-group col-md-4 col-12" id="divFlightTime">
                                        <div class="d-flex dflexMargin input-block">
                                            <input id="txtFlightTime" name="txtFlightTime" type="time" class="form-control inpDisable" value="@(!IsNew || !IsEdit ? (CBRF.FlightTime.ToString("HH:mm") ?? "") : "")" />
                                            <span class="placeholder TransView">Flight Time</span>
                                        </div>
                                    </div>

                                    <span id="hiddenApproverInformation"></span>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-12 col-12 input-block">
                                        <textarea class="form-control textareawidth photogrphy-textarea spanUpperSide select-border" cols="60" rows="2" maxlength="500" id="txtReasonforBooking" disabled>@(!IsNew || !IsEdit ? (CBRF.ReasonforBooking ?? "") : "")</textarea>
                                        <span class="placeholder">Reason for booking</span>
                                    </div>
                                </div>
                                @*<div class="form-row">

                                        @if (CBRF.attachmentlist.attachmentData.Count != 0)
                                        {
                                            foreach (var attachment in CBRF.attachmentlist.attachmentData)
                                            {
                                                <div class="form-group col-md-12 col-12">
                                                    <label class="f-600">File Upload:  <span><i class="fa fa-upload" aria-hidden="true"></i></span></label>
                                                    <a href=@System.Configuration.ConfigurationManager.AppSettings["SharepointSiteURL"]@attachment.ServerRelativeUrl download=@attachment.FileName target="_blank">@attachment.FileName </a>

                                                </div>
                                            }
                                        }

                                    </div>*@

                                <div class="form-row">
                                    <div class="form-group col-12">
                                        <label class="f-600">Note :- If the above details are  not filled properly or are left incomplete the booking will be not be considered</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header collapsed" id="headingThree" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                    <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" />Approval Tracking
                                </button>
                            </h5>
                        </div>
                        <div id="collapseThree" class="collapse" aria-labelledby="headingOne">
                            <div class="card-body approvalTracking">
                                <table class="table w-100 td-border showBorder">
                                    <thead>
                                        <tr>
                                            @*<th>Sr. No.</th>*@
                                            <th>Name</th>
                                            <th>Role</th>
                                            <th>Processed on</th>
                                            <th>Status</th>
                                            <th class="text-center">Comments</th>
                                            <th class="text-center">Approval Level</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (!IsNew || !IsEdit)
                                        {
                                            //Dynamic Code
                                            var appList = ViewBag.Model.three as List<Skoda_DCMS.Models.ApprovalDataModel>;

                                            {
                                                Html.RenderPartial("_ApprovalTracking", appList);
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header collapsed" id="headingFive" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                    <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" /> Action
                                </button>
                            </h5>
                        </div>

                        <div id="collapseFive" class="collapse" aria-labelledby="headingFive">
                            <div class="card-body actionTab">
                                <label class="f-600">Note:To be filled by the Admin</label>
                                <div class="form-row">
                                    @if (!IsNew)
                                    {
                                        var appList = ViewBag.Model.three as List<Skoda_DCMS.Models.ApprovalDataModel>;
                                        //var admin = appList.Where(x => x.ApproverId == currentUser.UserId).Select(x => x.Designation).FirstOrDefault();
                                        var AdminDesgnString = "Admin";
                                        var admin = "";
                                        var Ap = appList?.Where(x => x.ApproverUserName == currentUser.UserName && x.ApproverStatus.ToLower() == "pending")
                                                                            .Where(x => x.Logic.ToLower() == "or"
                                                                                ? !appList.Any(y => y.Level == x.Level && y.ApproverStatus.ToLower() == "approved")
                                                                                : true)
                                                                            .OrderBy(x => x.Level).Select(x => new { Designation = x.Designation, Level = x.Level }).FirstOrDefault();
                                        admin = Ap?.Designation;
                                        var CurrentUserLevel = Ap?.Level;
                                        //Logic to change assistant to doctor(if he/she has) for editing the fields doctor fields
                                        admin = appList.Where(x => x.Level == CurrentUserLevel).Any(x => x.Designation == AdminDesgnString)
                                                                ? AdminDesgnString : admin;
                                        if (admin == "Admin")
                                        {
                                            <div class="form-group col-md-4 col-12">
                                                <label class="f-600">Type of Car</label>
                                                <select name="ddTypeofCar" class="drpSize mb-2" style="background-color:white !important;" id="ddTypeofCar" onchange="TypeOfCarEnableDisable()"></select>
                                                <input type="text" name="txtTypeofCarOther" style="background-color:white !important;" autocomplete="off" class="inpDisable" id="txtTypeofCarOther" value="@(!IsNew ? (CBRF.TypeofCarOther ?? "") : "")">

                                            </div>

                                            <div class="form-group col-md-4 col-12">
                                                <label class="f-600">Vehicle Number</label>
                                                <select name="ddVehicleNumber" class="drpSize mb-2" style="background-color:white !important;" id="ddVehicleNumber" onchange="VehicleNumberEnableDisable()"></select>
                                                <input type="text" name="txtVehicleNumberOther" style="background-color:white !important;" autocomplete="off" class="inpDisable" id="txtVehicleNumberOther" value="@(!IsNew ? (CBRF.VehicleNumberOther ?? "") : "")">

                                            </div>
                                        }
                                        else
                                        {

                                            <div class="form-group col-md-4 col-12">
                                                <label class="f-600">Type of Car</label>
                                                <input type="text" name="ddTypeofCar" autocomplete="off" style="background-color:white !important;" class="inpDisable" id="ddTypeofCar" value="@(!IsNew ? (CBRF.TypeofCar ?? "") : "")" readonly>
                                                <input type="text" name="txtTypeofCarOther" autocomplete="off" class="inpDisable" style="background-color:white !important;" id="txtTypeofCarOther" value="@(!IsNew ? (CBRF.TypeofCarOther ?? "") : "")" readonly>

                                            </div>

                                            <div class="form-group col-md-4 col-12">
                                                <label class="f-600">Vehicle Number</label>
                                                <input type="text" name="ddVehicleNumber" autocomplete="off" style="background-color:white !important;" class="inpDisable" id="ddVehicleNumber" value="@(!IsNew ? (CBRF.VehicleNumber ?? "") : "")" readonly>
                                                <input type="text" name="txtVehicleNumberOther" autocomplete="off" style="background-color:white !important;" class="inpDisable" id="txtVehicleNumberOther" value="@(!IsNew ? (CBRF.VehicleNumberOther ?? "") : "")" readonly>

                                            </div>

                                        }


                                    }
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            }
            @if (IsNew)
            {
                if (!IsEdit)
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn" id="btnSubmit">
                            Re-Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }
                else
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn btn-lg" id="btnSubmit">
                            Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn btn-lg" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }
            }
            <!-- END HERE ACCORDIAN -->
        </div>
    </form>
</body>
<div class="loader"></div>
<div class="modal fade" id="successModel" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header modelHeader">
                <span class="modal-title modalMsgTitle" id="modalTitle"></span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label id="modalBody" class="lableMsg">  </label>
                <input type="hidden" id="tab" value="0" />
            </div>
            <div class="modal-footer">
                <button type="button" class="submitBomBtn publishBtn" id="modalOkButton" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
<script>
    var spinner = $('#loader');
    var IsNew = @Html.Raw(Json.Encode(IsNew));
    var CBRF = @Html.Raw(Json.Encode(CBRF));
    var appRowId = @Html.Raw(Json.Encode(AppRowId));
    var approvalType =@Html.Raw(Json.Encode(ApprovalType));
    var IsEdit = @Html.Raw(Json.Encode(IsEdit));
    var IsValidityCheck = @Html.Raw(Json.Encode(IsValidityCheck));
    var FlagRedirect = @Html.Raw(Json.Encode(FlagRedirect));
    var cuser = @Html.Raw(Json.Encode(currentUser));
    var appList = @Html.Raw(Json.Encode(ViewBag.Model?.three));
    pageLoad();

    function pageLoad() {
        ////
        spinner.hide();
        getDesignations();
        getLocation();
        getOnBehalfDesignations();
        $("#headingErr").addClass('d-none');
        getDomainIDs();
        GetData();
        getTypeOfCar();
        $("#txtTypeofCarOther").addClass('d-none');
        $("#txtVehicleNumberOther").addClass('d-none');
        getOnBehalfLocation();
        var data = "";
        if (!IsNew) {
            var value = JSON.stringify(CBRF);
            var value_1 = JSON.parse(value);
            var RequestSubmissionFor = value_1.RequestSubmissionFor;
            if (RequestSubmissionFor == "Self") {
                $("#divOnBehalf").addClass('d-none');
            }
            else if (RequestSubmissionFor == "OnBehalf") {
                $("#divOnBehalf").removeClass('d-none');
            }
            $("#OtherEmpName").hide();
            $(".inpDisable").attr("disabled", "disabled");
            $(".drpDisable").attr("disabled", "disabled");

            var airportPickUpDrop = value_1.AirportPickUpDrop;
            if (airportPickUpDrop == "Yes") {
                $("#divFlightNo").removeClass('d-none');
                $("#divFlightTime").removeClass('d-none');
            }
            else if (airportPickUpDrop == "No") {
                $("#divFlightNo").addClass('d-none');
                $("#divFlightTime").addClass('d-none');
            }

            var ddTypeofCar = value_1.TypeofCar;
            if (ddTypeofCar == "Other") {
                $("#txtTypeofCarOther").removeClass('d-none');
                $("#txtVehicleNumberOther").removeClass('d-none');

            }
            else {
                $('#txtTypeofCarOther').val('');
                $("#txtTypeofCarOther").addClass('d-none');
                $("#txtVehicleNumberOther").addClass('d-none');
            }
        }

        if (!IsEdit) {
            var value = JSON.stringify(CBRF);
            var value_1 = JSON.parse(value);
            var RequestSubmissionFor = value_1.RequestSubmissionFor;
            if (RequestSubmissionFor == "Self") {
                $("#divOnBehalf").addClass('d-none');
            }
            else if (RequestSubmissionFor == "OnBehalf") {
                $("#divOnBehalf").removeClass('d-none');
            }
            $("#OtherEmpName").hide();
            GetTime();
            //GetApprovers();
            var airportPickUpDrop = value_1.AirportPickUpDrop;
            if (airportPickUpDrop == "Yes") {
                $("#divFlightNo").removeClass('d-none');
                $("#divFlightTime").removeClass('d-none');
            }
            else if (airportPickUpDrop == "No") {
                $("#divFlightNo").addClass('d-none');
                $("#divFlightTime").addClass('d-none');
            }
            var ddTypeofCar = value_1.TypeofCar;
            if (ddTypeofCar == "Other") {
                $("#txtTypeofCarOther").removeClass('d-none');
                $("#txtVehicleNumberOther").removeClass('d-none');

            }
            else {
                $('#txtTypeofCarOther').val('');
                $("#txtTypeofCarOther").addClass('d-none');
                $("#txtVehicleNumberOther").addClass('d-none');
            }
        }
        if (IsNew) {
            if (!IsEdit) {
            }
            else {
                $("#OtherEmpName").hide();
                $("#divOnBehalf").addClass('d-none');
                FlightEnableDisable();
                $("#ServiceProvider").hide();
                GetTime();
                //GetApprovers();
                $(".inpIsNewDisable").attr("disabled", "disabled");
            }
        }
    };

    $(document).ready(function () {
        $('.loader').hide();
        if (IsNew) {
            if (!IsEdit) {
                var cabuserTotal = parseInt(document.getElementById("cabUsers").value);
                console.log(cabuserTotal);
                rowIdx = cabuserTotal;
                count = cabuserTotal;
                $("#txtNumberofUsers").val(count);
            }
            else {
                count = 0;
                rowIdx = 0;
                $("#txtNumberofUsers").val(rowIdx);
            }
        }
        if (!IsNew) {
            var cabuserTotal = parseInt(document.getElementById("cabUsers").value);
            console.log(cabuserTotal);
            rowIdx = cabuserTotal;
            count = cabuserTotal;
            $("#txtNumberofUsers").val(count);
        }

        $('#usersBody').on('click', '.remove', function () {
            //
            var delRow = $(this).closest('tr').attr('id');
            //console.log(delRow + " a");
            var delRowNo = parseInt(delRow.substring(3));
            //console.log(delRowNo + " b");

            var child = $(this).closest('tr').nextAll();
            //console.log(child);
            child.each(function () {
                ////
                // Getting <tr> id.
                var id = $(this).attr('id');
                //console.log("id="+id);

                //  Getting the <p> inside the .row-index class.
                var idx = $(this).children('.row-index').children('p');
                //console.log("idx="+idx);

                // Gets the row number from <tr> id.
                var dig = parseInt(id.substring(3));
                //console.log("dig="+dig);

                // Modifying row index.
                idx.html(`row${dig - 1}`);

                // Modifying row id.
                $(this).attr('id', `row${dig - 1}`);

                //assigning updated serial number
                //  ////
                updatedDig = dig - 1;
                //console.log("updatedDig="+updatedDig);
                $('#row' + updatedDig + ' .sNo').html(updatedDig);
                $(this).find('td:eq(1) input[type="hidden"]').attr("id", "txtCBUId_" + updatedDig);
                $(this).find('td:eq(1) input[type="text"]').attr("id", "txtUserName_" + updatedDig);
                $(this).find('td:eq(2) input[type="text"]').attr("id", "txtUserContactNumber_" + updatedDig);
                $(this).find('td:eq(3) input[type="text"]').attr("id", "txtDestination_" + updatedDig);
                $(this).find('td:eq(4) input[type="time"]').attr("id", "txtReportingTime_" + updatedDig);
                $(this).find('td:eq(5) textarea').attr("id", "txtReportingPlaceWithAddress_" + updatedDig);

                $(this).find('td:eq(1) input[type="hidden"]').attr("name", "txtCBUId_" + updatedDig);
                $(this).find('td:eq(1) input[type="text"]').attr("name", "txtUserName_" + updatedDig);
                $(this).find('td:eq(2) input[type="text"]').attr("name", "txtUserContactNumber_" + updatedDig);
                $(this).find('td:eq(3) input[type="text"]').attr("name", "txtDestination_" + updatedDig);
                $(this).find('td:eq(4) input[type="time"]').attr("name", "txtReportingTime_" + updatedDig);
                $(this).find('td:eq(5) textarea').attr("name", "txtReportingPlaceWithAddress_" + updatedDig);
            });

            // Removing the current row.
            $(this).closest('tr').remove();
            // Decreasing total number of rows by 1.
            rowIdx--;
            count = rowIdx;
            // console.log("count=" + count);
            // }
            $("#txtNumberofUsers").val(count);
        });

        $(document).on('keydown', '.sftDetClass', function () {
            //
            var id = this.id;
            //console.log("id=" + id);
            var splitid = id.split('_');
            // console.log("splitid=" + splitid);
            var index = splitid[1];
            // console.log("index=" + index);
            if (!IsEdit) {

            }
            else {
                count = index;
            }


        });
        if (IsNew) {
            if (!IsEdit) {
                //date_val();
            }
        }
    });

    var DomainID = [];
    function getDomainIDs() {
        $.ajax
            ({
                type: "POST",
                url: "/List/GetDomainIDs",
                contentType: "application/json; charset=utf-8",
                datatype: 'json',
                cache: false,
                async: true,
                success: function (data) {
                    DomainID = data;
                    //console.log("DomainIDs=" + DomainID);
                },
                error: function (data) {
                    //code
                }
            });
    }

    function setStartDate() {
        var today = new Date().toISOString().split('T')[0];

        document.getElementsByName("txtCarRequiredFromDate")[0].setAttribute("min", today);
    }

    function date_val_end() {
        ////
        var week_string = document.getElementsByName("txtCarRequiredFromDate")[0].value;
        console.log(week_string);
        var parts = week_string.split("-");
        var date = new Date(parts[0], parts[1] - 1, parts[2]);
        var min_date = date;
        min_date.setDate(min_date.getDate() + 1);
        var initial_date = min_date.toISOString().split('T')[0];
        document.getElementsByName("txtCarRequiredToDate")[0].setAttribute("min", initial_date);
    }

    function GetTime(){

    }

    function FlightEnableDisable() {
        ////
        var drpAirportPickUpDrop = $("#drpAirportPickUpDrop option:selected").val();

        if (drpAirportPickUpDrop == "Yes") {
            document.getElementById("txtFlightNo").disabled = false;
            document.getElementById("txtFlightTime").disabled = false;
            $("#divFlightNo").removeClass('d-none');
            $("#divFlightTime").removeClass('d-none');
        }
        else {

            $('#txtFlightNo').val('');
            document.getElementById("txtFlightNo").disabled = true;
            document.getElementById("txtFlightTime").disabled = true;
            RemoveError("txtFlightNo");
            RemoveError("txtFlightTime");
            $("#divFlightNo").addClass('d-none');
            $("#divFlightTime").addClass('d-none');
        }

    }

    function getDesignations() {

        if (IsNew) {
            if (!IsEdit) {
                var value = JSON.stringify(CBRF);
                var value_1 = JSON.parse(value);
                var selectDesignation = value_1.Designation;
                console.log(selectDesignation);

                $.ajax({
                    type: "POST",
                    url: "/List/GetDesignations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (response) {
                        console.log(response);
                        $("#ddEmpDesignation option").remove();
                        $("#ddEmpDesignation").append('<option value="' + response.Id + '">' + '' + '</option>');
                        $.each(response, function (i, response) {

                            if (response.JobTitle == selectDesignation) {
                                $("#ddEmpDesignation").append('<option value="' + response.JobTitle + '" selected>' + response.JobTitle + '</option>');
                            }
                            else {
                                $("#ddEmpDesignation").append('<option value="' + response.JobTitle + '">' + response.JobTitle + '</option>');
                            }
                        });

                    },          ////success
                    error: function () {
                        //alert('Failed to retrieve modules.');
                    }
                });
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/List/GetDesignations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (response) {
                        console.log(response);
                        $("#ddEmpDesignation option").remove();
                        $("#ddEmpDesignation").append('<option value="' + response.Id + '">' + '' + '</option>');
                        $.each(response, function (i, response) {
                            $("#ddEmpDesignation").append('<option value="' + response.JobTitle + '">' + response.JobTitle + '</option>');
                        });

                    },          ////success
                    error: function () {
                        //alert('Failed to retrieve modules.');
                    }
                });
            }
        }




    }

    function getOnBehalfDesignations() {

        if (IsNew) {
            if (!IsEdit) {
                var value = JSON.stringify(CBRF);
                var value_1 = JSON.parse(value);
                var selectDesignation = value_1.OnBehalfDesignation;
                console.log(selectDesignation);

                $.ajax({
                    type: "POST",
                    url: "/List/GetDesignations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (response) {
                        console.log(response);
                        $("#txtOnBehalfdesignation option").remove();
                        $("#txtOnBehalfdesignation").append('<option value="' + response.Id + '">' + '' + '</option>');
                        $.each(response, function (i, response) {

                            if (response.JobTitle == selectDesignation) {
                                $("#txtOnBehalfdesignation").append('<option value="' + response.JobTitle + '" selected>' + response.JobTitle + '</option>');
                            }
                            else {
                                $("#txtOnBehalfdesignation").append('<option value="' + response.JobTitle + '">' + response.JobTitle + '</option>');
                            }
                        });

                    },          ////success
                    error: function () {
                        //alert('Failed to retrieve modules.');
                    }
                });
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/List/GetDesignations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (response) {
                        console.log(response);
                        $("#txtOnBehalfdesignation option").remove();
                        $("#txtOnBehalfdesignation").append('<option value="' + response.Id + '">' + '' + '</option>');
                        $.each(response, function (i, response) {
                            $("#txtOnBehalfdesignation").append('<option value="' + response.JobTitle + '">' + response.JobTitle + '</option>');
                        });

                    },          ////success
                    error: function () {
                        //alert('Failed to retrieve modules.');
                    }
                });
            }
        }




    }

    function getTypeOfCar() {

        if (IsNew) {
            if (!IsEdit) {
                //
                      var value = JSON.stringify(CBRF);
                      var value_1 = JSON.parse(value);
                      var selectCarName = value_1.CarName;
                      console.log(selectCarName);

                $.ajax({
                      type: "GET",
                    url: "/CabBookingRequest/GetTypeofCar",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (response) {
                              console.log(response);
                        $("#ddTypeofCar option").remove();
                        $("#ddTypeofCar").append('<option  value="' + response.CarID + '">' + 'Select' + '</option>');
                        $.each(response, function (i, response) {

                                  if (response.CarName == selectCarName) {
                                      $("#ddTypeofCar").append('<option CarID="' + response.CarID + '" value="' + response.CarName + '" selected>' + response.CarName + '</option>');
                                  }
                                  else {
                                      $("#ddTypeofCar").append('<option CarID="' + response.CarID + '" value="' + response.CarName + '">' + response.CarName + '</option>');
                                  }
                              });

                          },          ////success
                    error: function () {
                              //alert('Failed to retrieve modules.');
                          }
                      });
                  }
                  else {
                    $.ajax({
                      type: "GET",
                    url: "/CabBookingRequest/GetTypeofCar",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (response) {
                              console.log(response);
                        $("#ddTypeofCar option").remove();
                        $("#ddTypeofCar").append('<option value="' + response.CarName + '">' + 'Select' + '</option>');
                        $.each(response, function (i, response) {
                            $("#ddTypeofCar").append('<option CarID="' + response.CarID + '"  value="' + response.CarName + '">' + response.CarName + '</option>');
                              });

                          },          ////success
                    error: function () {
                              //alert('Failed to retrieve modules.');
                          }
                      });
                  }
              }
        else {
            var value = JSON.stringify(CBRF);
            var value_1 = JSON.parse(value);
            var selectCarName = value_1.TypeofCar;
            console.log(selectCarName);

            $.ajax({
                type: "GET",
                url: "/CabBookingRequest/GetTypeofCar",
                contentType: "application/json; charset=utf-8",
                datatype: 'json',
                cache: false,
                async: false,
                success: function (response) {
                    console.log(response);
                    $("#ddTypeofCar option").remove();
                    $("#ddTypeofCar").append('<option value="' + response.CarID + '">' + 'Select' + '</option>');
                    $.each(response, function (i, response) {

                        if (response.CarName == selectCarName) {
                            $("#ddTypeofCar").append('<option CarID="' + response.CarID + '"  value="' + response.CarName + '" selected>' + response.CarName + '</option>');
                        }
                        else {
                            $("#ddTypeofCar").append('<option CarID="' + response.CarID + '"  value="' + response.CarName + '">' + response.CarName + '</option>');
                        }
                    });

                },          ////success
                error: function () {
                    //alert('Failed to retrieve modules.');
                }
            });
        }
    }

    function getVehicleNumber(e) {
        //
        var carId = e;
        if (IsNew) {
            if (!IsEdit) {
                //
                var value = JSON.stringify(CBRF);
                var value_1 = JSON.parse(value);
                var selectVehicleNumber = value_1.VehicleNumber;
                console.log(selectVehicleNumber);

                $.ajax({
                    type: "GET",
                    url: "/CabBookingRequest/GetVehicleNumber",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    data: { carId: carId },
                    cache: false,
                    async: false,
                    success: function (response) {
                        console.log(response);
                        $("#ddVehicleNumber option").remove();
                        $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '">' + 'Select' + '</option>');
                        $.each(response, function (i, response) {

                            if (response.VehicleNumber == selectVehicleNumber) {
                                $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '" selected>' + response.VehicleNumber + '</option>');
                            }
                            else {
                                $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '">' + response.VehicleNumber + '</option>');
                            }
                        });

                    },          ////success
                    error: function () {
                        //alert('Failed to retrieve modules.');
                    }
                });
            }
            else {
                $.ajax({
                    type: "GET",
                    url: "/CabBookingRequest/GetVehicleNumber",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    data: { carId: carId },
                    cache: false,
                    async: false,
                    data: { carId: carId},
                    success: function (response) {
                        console.log(response);
                        $("#ddVehicleNumber option").remove();
                        $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '">' + 'Select' + '</option>');
                        $.each(response, function (i, response) {
                            $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '">' + response.VehicleNumber + '</option>');
                        });

                    },          ////success
                    error: function () {
                        //alert('Failed to retrieve modules.');
                    }
                });
            }
        }
        else {
            var value = JSON.stringify(CBRF);
            var value_1 = JSON.parse(value);
            var selectVehicleNumber = value_1.VehicleNumber;
            console.log(selectVehicleNumber);

            $.ajax({
                type: "GET",
                url: "/CabBookingRequest/GetVehicleNumber",
                contentType: "application/json; charset=utf-8",
                datatype: 'json',
                data: { carId: carId },
                cache: false,
                async: false,
                success: function (response) {
                    console.log(response);
                    $("#ddVehicleNumber option").remove();
                    $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '">' + 'Select' + '</option>');
                    $.each(response, function (i, response) {

                        if (response.VehicleNumber == selectVehicleNumber) {
                            $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '" selected>' + response.VehicleNumber + '</option>');
                        }
                        else {
                            $("#ddVehicleNumber").append('<option value="' + response.VehicleNumber + '">' + response.VehicleNumber + '</option>');
                        }
                    });

                },          ////success
                error: function () {
                    //alert('Failed to retrieve modules.');
                }
            });
        }
    }

    $("#ddTypeofCar").change(function () {
        ////
        document.getElementById("txtVehicleNumberOther").disabled = true;
        TypeOfCarEnableDisable();
       // var cardID = $("#ddTypeofCar option:selected").val();
        var cardID = $("#ddTypeofCar").find('option:selected').attr("carid");
        getVehicleNumber(cardID);
    });

    function TypeOfCarEnableDisable() {
        //
        var ddTypeofCar = $("#ddTypeofCar option:selected").val();
        if (ddTypeofCar == "Other") {
            $("#txtTypeofCarOther").removeClass('d-none');
            document.getElementById("txtTypeofCarOther").disabled = false;

        }
        else {
            $('#txtTypeofCarOther').val('');
            document.getElementById("txtTypeofCarOther").disabled = true;
            $("#txtTypeofCarOther").addClass('d-none');
        }
    }

    function VehicleNumberEnableDisable() {
        ////
        var ddVehicleNumber = $("#ddVehicleNumber option:selected").val();
        if (ddVehicleNumber == "Other") {
            $("#txtVehicleNumberOther").removeClass('d-none');
            document.getElementById("txtVehicleNumberOther").disabled = false;
        }
        else {
            $('#txtVehicleNumberOther').val('');
            document.getElementById("txtVehicleNumberOther").disabled = true;
            $("#txtVehicleNumberOther").addClass('d-none');
        }
    }

    function allowNumbersOnly(e) {
        var code = (e.which) ? e.which : e.keyCode;
        if (code > 31 && (code < 48 || code > 57)) {
            e.preventDefault();
        }
    }

    function alphaOnly(e) {
        var key = e.keyCode;
        if (key > 32 && (key < 65 || key > 122 || key == 91 || key == 92 || key == 93 || key == 94 || key == 95 || key == 96)) {
            e.preventDefault();
        }
    }

    function GetApprovers() {
        $.ajax({
            url: '/CabBookingRequest/GetCBRFApprovalList',
            type: 'GET',
            data: {},
            dataType: 'JSON',
            success: (function (data) {
                ////
                approverData = data;
                console.log(data);
                var row = "";
                for (var i = 0; i < data.length; i++) {
                    row += '<input type="hidden" id="hidden' + data[i].Department + 'Approver" name="hidden' + data[i].Department + 'Approver" value="' + data[i].ApproverEmailId + '">';
                    }
                    $("#hiddenApproverInformation").html(row);

                    }),
                    error: (function (data) {
                    //code
                    })
                    })

                }

    function successCBRFModal(txt) {
                                                            ////
                                                            $('#modalTitle').html('Success');
                                                            if (txt == "approve") {
                                                            $('#modalBody').html('Form has been approved!');
                                                            }
                                                            else if (txt == "reject") {
                                                            $('#modalBody').html('Form has been rejected!');
                                                            }
                                                            else if (txt == "enquire") {
                                                            $('#modalBody').html('Form has been enquired!');
                                                            }
                                                            else if (txt == "cancelled") {
                                                            $('#modalBody').html('Form has been cancelled!');
                                                            }
                                                            else {
                                                            $('#modalBody').html('Your form with ID: CBRF' + txt + ' has been submitted! Kindly use this for future reference');

                                                            }
        FlagRedirect = txt;
                                                            //$("#modalOkButton").attr('data-dismiss', 'modal');
                                                            $("#successModel").modal('show');
                                                            }

    function failureModal(txt) {
        if (txt == null) {
            $('#modalBody').html('Some error occurred!');
        }
                                                            $('#modalTitle').html('Failure');
                                                            $('#modalBody').html(txt);
                                                            $("#modalOkButton").attr('data-dismiss', 'modal');
                                                            $("#successModel").modal('show');
                                                            }

    function permissionModal() {
    $('#modalTitle').html('Failure');
    $('#modalBody').html('No permssion granted since the device is not SAVWIPL owned!');
    $("#modalOkButton").attr('data-dismiss', 'modal');
    $("#successModel").modal('show');
    }

    function requiredModal(text) {
    $('#modalTitle').html('Required!');
    $('#modalBody').html(text);
    $("#modalOkButton").attr('data-dismiss', 'modal');
    $("#successModel").modal('show');
    }

    function validityModal(txt) {
    ////
    if (txt == 'approve') {
        DisplayAlert('error', 'Error', 'Please select the Type of Car');
    }
    else if (txt == 'reject') {
    DisplayAlert('error', 'Warning', 'Please type in the reason for rejecting the form');
    }
    else if (txt == 'enquire') {
    DisplayAlert('error', 'Warning', 'Please type in the reason for enquiring the form');
    }

    }

    function mobileLengthModal() {
    $('#modalTitle').html('Required');
    $('#modalBody').html('Please enter a 10-Digit Contact No.!');
    $("#modalOkButton").attr('data-dismiss', 'modal');
    $("#successModel").modal('show');
    }

    $("#btnSubmit").on('click', function (e) {
        console.log("btnSubmit");
        $(".full-screen-container").removeClass('invisible');
        $(".full-screen-container").show();
        //
        let errorCount = 1;
        var errors = "";

        var errors = "";
        var drpRequestSubType = $("#drpRequestSubType option:selected").val();
        if (drpRequestSubType == "null") {
            errors += "<li id='error" + errorCount + "'>" + "Request Submission Type" + "</li>";
            AddError("drpRequestSubType", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("drpRequestSubType");
        }

        if (drpRequestSubType == "OnBehalf") {
            var txtOtherEmpname = document.getElementById("txtOtherEmpname").value;
            if (txtOtherEmpname == "") {
                errors += "<li id='error" + errorCount + "'>" + "Applicant Employee Name" + "</li>";
                    AddError("txtOtherEmpname", '', errorCount);
                    errorCount++;
                }
                else {
                    RemoveError("txtOtherEmpname");
                }
        }

        var ddEmpDesignation = $("#ddEmpDesignation option:selected").val();
        if (ddEmpDesignation == "undefined") {
            errors += "<li id='error" + errorCount + "'>" + "Designation" + "</li>";
            AddError("ddEmpDesignation", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("ddEmpDesignation");
        }

        var ddEmpLocation = $("#ddEmpLocation option:selected").val();
        if (ddEmpLocation == "") {
            errors += "<li id='error" + errorCount + "'>" + "Location" + "</li>";
            AddError("ddEmpLocation", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("ddEmpLocation");
        }

        var txtMobile = document.getElementById("txtMobile").value;
        if (txtMobile == "") {
            errors += "<li id='error" + errorCount + "'>" + "Mobile Number" + "</li>";
            AddError("txtMobile", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("txtMobile");
        }

        var mobileLen = $("#txtMobile").val().length;
        if (mobileLen < 10 || mobileLen > 10) {
            errors += "<li id='error" + errorCount + "'>" + "Enter a 10-Digit Mobile Number" + "</li>";
            AddError("txtMobile", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("txtMobile");
        }

        if (drpRequestSubType == "OnBehalf") {
            var txtOnBehalfdesignation = $("#txtOnBehalfdesignation option:selected").val();
            if (txtOnBehalfdesignation == "undefined") {
                errors += "<li id='error" + errorCount + "'>" + "Applicant Designation" + "</li>";
                AddError("txtOnBehalfdesignation", '', errorCount);
                errorCount++;
            }
            else {
                RemoveError("txtOnBehalfdesignation");
            }

            var ddOnBehalfLocation = $("#ddOnBehalfLocation option:selected").val();
            if (ddOnBehalfLocation == "") {
                errors += "<li id='error" + errorCount + "'>" + "Applicant Location" + "</li>";
                AddError("ddOnBehalfLocation", '', errorCount);
                errorCount++;
            }
            else {
                RemoveError("ddOnBehalfLocation");
            }

            var txtOnBehalfEmail = document.getElementById("txtOnBehalfEmail").value;
            if (txtOnBehalfEmail != "") {
                RemoveError("txtOnBehalfEmail");
                var IsValidEmail = validateEmail(txtOnBehalfEmail, DomainID);
                if (IsValidEmail == false) {
                    errors += "<li id='error" + errorCount + "'>" + "Invalid Email-Id in Applicant Details" + "</li>";
                    AddError("txtOnBehalfEmail", '', errorCount);
                    errorCount++;
                }
                else {
                    RemoveError("txtOnBehalfEmail");
                }
            }
            else {
                errors += "<li id='error" + errorCount + "'>" + "Applicant Email-Id" + "</li>";
                AddError("txtOnBehalfEmail", '', errorCount);
                errorCount++;
            }

            var txtMobile = document.getElementById("txtOnBehalfMobile").value;
            if (txtMobile == "") {
                errors += "<li id='error" + errorCount + "'>" + "Applicant Mobile Number" + "</li>";
                AddError("txtOnBehalfMobile", '', errorCount);
                errorCount++;
            }
            else {
                RemoveError("txtOnBehalfMobile");
            }

            var mobileLen = $("#txtOnBehalfMobile").val().length;
            if (mobileLen < 10 || mobileLen > 10) {
                errors += "<li id='error" + errorCount + "'>" + "Enter a 10-Digit Applicant Mobile Number" + "</li>";
                AddError("txtOnBehalfMobile", '', errorCount);
                errorCount++;
            }
            else {
                RemoveError("txtOnBehalfMobile");
            }
        }

        var txtDepartment = document.getElementById("txtDepartment").value;
        if (txtDepartment == "") {
            errors += "<li id='error" + errorCount + "'>" + "Self Department" + "</li>";
            AddError("txtDepartment", '', errorCount);
        }
        else {
            RemoveError("txtDepartment");
        }

        var txtCostCenterNumber = document.getElementById("txtCostCenterNumber").value;
        if (txtCostCenterNumber == "") {
            errors += "<li id='error" + errorCount + "'>" + "Cost Center Number" + "</li>";
            AddError("txtCostCenterNumber", '', errorCount);
        }
        else {
            RemoveError("txtCostCenterNumber");
        }

        var txtName = document.getElementById("txtName").value;
        if (txtName == "") {
            errors += "<li id='error" + errorCount + "'>" + "Name" + "</li>";
            AddError("txtName", '', errorCount);
        }
        else {
            RemoveError("txtName");
        }

        var txtContactNumber = document.getElementById("txtContactNumber").value;
        if (txtContactNumber == "") {
            errors += "<li id='error" + errorCount + "'>" + "Booked By Contact Number" + "</li>";
            AddError("txtContactNumber", '', errorCount);
        }
        else {
            RemoveError("txtContactNumber");
        }

        var mobileLen = $("#txtContactNumber").val().length;
        if (mobileLen < 10 || mobileLen > 10) {
            errors += "<li id='error" + errorCount + "'>" + "Enter a 10-Digit in Booked By Contact Number" + "</li>";
            AddError("txtContactNumber", '', errorCount);
        }
        else {
            RemoveError("txtContactNumber");
        }

        var txtCarRequiredFromDate = document.getElementById("txtCarRequiredFromDate").value;
        if (txtCarRequiredFromDate == "") {
            errors += "<li id='error" + errorCount + "'>" + "Car Required From Date" + "</li>";
            AddError("txtCarRequiredFromDate", '', errorCount);
        }
        else {
            RemoveError("txtCarRequiredFromDate");
        }

        var drpCarRequiredFromTimeHours = $("#txtCarRequiredFromTime").val();
        if (drpCarRequiredFromTimeHours == "") {
            errors += "<li id='error" + errorCount + "'>" + "Car Required From Time" + "</li>";
            AddError("txtCarRequiredFromTime", '', errorCount);
        }
        else {
            RemoveError("txtCarRequiredFromTime");
        }

        var txtCarRequiredToDate = document.getElementById("txtCarRequiredToDate").value;
        if (txtCarRequiredToDate == "") {
            errors += "<li id='error" + errorCount + "'>" + "Car Required To Date" + "</li>";
            AddError("txtCarRequiredToDate", '', errorCount);
        }
        else {
            RemoveError("txtCarRequiredToDate");
        }

        var drpCarRequiredToTimeHours = $("#txtCarRequiredToTime").val();
        if (drpCarRequiredToTimeHours == "") {
            errors += "<li id='error" + errorCount + "'>" + "Car Required To Time" + "</li>";
            AddError("txtCarRequiredToTime", '', errorCount);
        }
        else {
            RemoveError("txtCarRequiredToTime");
        }

        if (txtCarRequiredFromDate > txtCarRequiredToDate) {
            errors += "<li id='error" + errorCount + "'>" + "Car Required From Date Can not Be Greater Than Car Required To Date" + "</li>";
            AddError("txtCarRequiredFromDate", '', errorCount);
            AddError("txtCarRequiredToDate", '', errorCount);
        }
        else {
            RemoveError("txtCarRequiredFromDate")
            RemoveError("txtCarRequiredToDate");
        }

        //
        let firstUserNameCount = $(".inpValidateUserName").length;
        let validUserCount = 0;
        let invalidCount = 0;

        if (firstUserNameCount > 0) {

            let rowCount = 1;

            $(".tableUser").find('tr').each(function () {
                let currentTr = $(this);

                let currUserName = $(currentTr).find(".inpValidateUserName").val();
                let currUserContactNumber = $(currentTr).find(".inpValidateUserContNum").val();
                let currDesignation = $(currentTr).find(".inpValidateDesg").val();
                let currReportingTime = $(currentTr).find(".inpValidateRtime").val();
                let currReportingPlacewithAddress = $(currentTr).find(".inpValidateReportingAddress").val();

                if (currUserName.trim() == '' && currUserContactNumber.trim() == '' && currDesignation.trim() == '' && currReportingTime.trim() == '' && currReportingPlacewithAddress.trim() == '' ) {

                    errors += "<li id='error" + errorCount + "'>" + "Enter data in row " + rowCount + " in Booked for Details." + "</li>";
                    $("#lblSoftDet").addClass('removeBookedFor');
                    AddError("lblBookedFor", 'removeBookedFor', errorCount);
                    errorCount++;

                    invalidCount++;
                }
                else if (currUserName.trim() != '' && currUserContactNumber.trim() != '' && currDesignation.trim() != '' && currReportingTime.trim() != '' && currReportingPlacewithAddress.trim() != '') {
                    RemoveError("lblBookedFor");
                    validUserCount++;
                }
                else if (currUserName.trim() != '' || currUserContactNumber.trim() != '') {
                    if (currUserName.trim() == '') {

                        errors += "<li id='error" + errorCount + "'>" + "User Name in Row " + rowCount + "</li>";
                        $("#lblSoftDet").addClass('removeBookedFor');
                        AddError("lblBookedFor", 'removeBookedFor', errorCount);
                        errorCount++;

                        invalidCount++;
                    }

                    if (currUserContactNumber.trim() == '' || currUserContactNumber.trim() === null) {

                        errors += "<li id='error" + errorCount + "'>" + "User Contact Number in Row " + rowCount + "</li>";
                        $("#lblSoftDet").addClass('removeBookedFor');
                        AddError("lblBookedFor", 'removeBookedFor', errorCount);
                        errorCount++;
                        invalidCount++;
                    }

                    if (currDesignation.trim() == '' || currDesignation.trim() === null) {

                        errors += "<li id='error" + errorCount + "'>" + "Designation in Row " + rowCount + "</li>";
                        $("#lblSoftDet").addClass('removeBookedFor');
                        AddError("lblBookedFor", 'removeBookedFor', errorCount);
                        errorCount++;
                        invalidCount++;
                    }

                    if (currReportingTime.trim() == '' || currReportingTime.trim() === null) {

                        errors += "<li id='error" + errorCount + "'>" + "Reporting Time in Row " + rowCount + "</li>";
                        $("#lblSoftDet").addClass('removeBookedFor');
                        AddError("lblBookedFor", 'removeBookedFor', errorCount);
                        errorCount++;
                        invalidCount++;
                    }

                    if (currReportingPlacewithAddress.trim() == '' || currReportingPlacewithAddress.trim() === null) {

                        errors += "<li id='error" + errorCount + "'>" + "Reporting Place with address in Row " + rowCount + "</li>";
                        $("#lblSoftDet").addClass('removeBookedFor');
                        AddError("lblBookedFor", 'removeBookedFor', errorCount);
                        errorCount++;
                        invalidCount++;
                    }


                    else {
                        RemoveError("lblBookedFor");
                    }

                }


                rowCount++;

            });


        }
        else {
            RemoveError("lblBookedFor");
        }

        if (validUserCount == 0 && invalidCount == 0) {
            errors += "<li id='error" + errorCount + "'>" + "Fill atleast 1 booked for user details" + "</li>";
            $("#lblBookedFor").addClass('removeBookedForReq');
            AddError("lblBookedFor", 'removeBookedForReq', errorCount);
            errorCount++;
        }


        var txtReasonforBooking = document.getElementById("txtReasonforBooking").value;
        if (txtReasonforBooking == "") {
            errors += "<li id='error" + errorCount + "'>" + "Reason for Booking" + "</li>";
            AddError("txtReasonforBooking", '', errorCount);
        }
        else {
            RemoveError("txtReasonforBooking");
        }

        //var txtDestination = document.getElementById("txtDestination").value;
        //if (txtDestination == "") {
        //    errors += "<li id='error" + errorCount + "'>" + "Destination" + "</li>";
        //    AddError("txtDestination", '', errorCount);
        //}
        //else {
        //    RemoveError("txtDestination");
        //}

        //var txtNumberofUsers = document.getElementById("txtNumberofUsers").value;
        //if (txtNumberofUsers == "") {
        //    errors += "<li id='error" + errorCount + "'>" + "Number of Travellers" + "</li>";
        //    AddError("txtNumberofUsers", '', errorCount);
        //}
        //else {
        //    RemoveError("txtNumberofUsers");
        //}

        var drpAirportPickUpDrop = $("#drpAirportPickUpDrop option:selected").val();
        if (drpAirportPickUpDrop === "Yes") {
            var txtFlightNo = document.getElementById("txtFlightNo").value;
            if (txtFlightNo === "") {
                errors += "<li id='error" + errorCount + "'>" + "Flight Number" + "</li>";
                AddError("txtFlightNo", '', errorCount);
            }
            else {
                RemoveError("txtFlightNo");
            }

            var txtFlightTime = document.getElementById("txtFlightTime").value;
            if (txtFlightTime === "") {
                errors += "<li id='error" + errorCount + "'>" + "Flight Time" + "</li>";
                AddError("txtFlightTime", '', errorCount);
            }
            else {
                RemoveError("txtFlightTime");
            }
        }

        if (errors.length) {
            $(".full-screen-container").hide();
            errors = "<ol id='errorList'>" + errors + "</ol>";
            $("#headingErr").removeClass('d-none');
            document.getElementById("add_to_me").innerHTML = errors;
            if (!IsEdit) {
                $("#myModalEdit").scrollTop(0);
            }
            else {
                $(window).scrollTop(0);
            }
            return false;
        }

        $("#headingErr").addClass('d-none');
        document.getElementById("add_to_me").innerHTML = '';


        $("#totalrows").val(count);

        $("#pageLoader").removeClass('invisible');
        $("#btnSubmit").text('Saving');
        $("#btnSubmit").prop("disabled", true);
        $("#btnCancel").prop("disabled", true);
        $('#ddEmpDesignation').prop("disabled", false);
        $('#txtOnBehalfdesignation').prop("disabled", false);
         var form = $("#CBRFForm");
         var formData = new FormData(form[0]);

        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0');
        var yyyy = today.getFullYear();

        today = mm + '-' + dd + '-' + yyyy;

        formData["txtReportingTime"] = today + " " + formData["txtReportingTime"];
        formData["txtFlightTime"] = today + " " + formData["txtFlightTime"];
        console.log(form);
         $.ajax({
             url: '/CabBookingRequest/SaveCBRF',
             processData: false,
             contentType: false,
             type: 'POST',
             data: formData,
             enctype: 'multipart/form-data',
             //dataType: 'JSON',
             success: (function (data) {
                 /* if (data[0].Value == 1) {*/
                 if (data.Status == 200) {
                     $("#pageLoader").addClass('invisible');
                     if (IsNew && IsEdit) {
                         $("#btnSubmit").text('Submit');
                     }
                     else {
                         $("#btnSubmit").text('Re-Submit');
                     }
                     $("#btnSubmit").prop("disabled", false);
                     $("#btnCancel").prop("disabled", false);
                     /*successCBRFModal(data[1].Value);*/
                     successCBRFModal(data.Message);
                 }
                 else {
                     /*failureModal();*/
                     failureModal(data.Message);
                     if (IsNew && IsEdit) {
                         $("#btnSubmit").text('Submit');
                     }
                     else {
                         $("#btnSubmit").text('Re-Submit');
                     }
                     $("#pageLoader").addClass('invisible');
                     $("#btnSubmit").prop("disabled", false);
                     $("#btnCancel").prop("disabled", false);
                     console.log("failure");

                 }
                 $(".full-screen-container").hide();
             }),
             error: (function (data) {
                 /*failureModal();*/
                 failureModal(data.Message);
                 console.log("error");
                 if (IsNew && IsEdit) {
                     $("#btnSubmit").text('Submit');
                 }
                 else {
                     $("#btnSubmit").text('Re-Submit');
                 }
                 $("#pageLoader").addClass('invisible');
                 $("#btnSubmit").prop("disabled", false);
                 $("#btnCancel").prop("disabled", false);
                 $(".full-screen-container").hide();
             })
         })
        $("#tab").val(2);
     });

    function saveResponse(text) {
        $(".full-screen-container").removeClass('invisible');
        $(".full-screen-container").show();
        let list = appList;//CBRF[3].Value;
        let admin = list.find(x => x.ApproverUserName == cuser.UserName).Designation;

        if (admin=="Admin") {
             //To check Type of Car
             var ddTypeofCar = $("#ddTypeofCar option:selected").val();
             if (ddTypeofCar == "undefined") {
                 if (text == 'approve') {
                     DisplayAlert('error', 'Error', 'Please select the Type of Car in the Action Tab');
                     return;
                 }
             }
            if (ddTypeofCar == "Other") {
                 var txtTypeofCarOther = document.getElementById("txtTypeofCarOther").value;
                 if (txtTypeofCarOther == "") {
                     if (text == 'approve') {
                         DisplayAlert('error', 'Error', 'Please enter the Type of Car');
                         return;
                     }
                 }
             }
            //To check Vehicle Number
            var ddVehicleNumber = $("#ddVehicleNumber option:selected").val();
            if (ddVehicleNumber == "undefined") {
                if (text == 'approve') {
                    DisplayAlert('error', 'Error', 'Please select the Vehicle Number');
                    return;
                }
            }
            if (ddVehicleNumber == "Other") {
                var txtVehicleNumberOther = document.getElementById("txtVehicleNumberOther").value;
                if (txtVehicleNumberOther == "") {
                    if (text == 'approve') {
                        DisplayAlert('error', 'Error', 'Please enter the Vehicle Number');
                        return;
                    }
                }
            }
        }



                                                            var status = '', comment = '';
                                                            if (window.matchMedia('(max-width: 425px)').matches) {
                                                                comment = $("#commentMobile-" + text).val();
                                                            } else
                                                                comment = $("#comment-" + text).val();
                                                            switch (text) {
                                                            case 'approve': {
                                                            status = 'Approved';
                                                            if (comment != '') {
                                                            //validityModal(text);
                                                            //return;
                                                            }
                                                            break;
                                                            }
                                                            case 'reject': {
                                                            status = 'Rejected';
                                                            if (comment == '') {
                                                            validityModal(text);
                                                            return;
                                                            }
                                                            break;
                                                            }
                                                            case 'enquire': {
                                                            status = 'Enquired';
                                                            if (comment == '') {
                                                            validityModal(text);
                                                            return;
                                                            }
                                                            break;
                                                            }
        }


        $(".full-screen-container").hide();
        if (admin == "Admin") {
            TypeOfCarUpdate(status,appRowId,comment, approvalType, text);
        }
        else {
            FormApproval(status,appRowId,comment, approvalType, text);
        }

        $("#tab").val(1);
    }

    function FormApproval(status,appRowId,comment, approvalType, text) {

        $.ajax({
            url: '/List/SaveResponse',
            type: 'POST',
            data: { response: status, appRowId: appRowId, comment: comment, approvalType: approvalType },
            dataType: 'JSON',
            success: (function (data) {
                   if (data.Result == 1) {
                       successCBRFModal(text);
                 spinner.hide();
                    $("#CBRFForm").trigger("reset");
                    setTimeout(FilterMyTasks, 5000);
                    spinner.hide();
                }
                else {
                   failureModal();
                    $("#CBRFForm").trigger("reset");
                    spinner.hide();
                }
                $(".full-screen-container").hide();
            }),
            error: (function (data) {
                  failureModal();
                $("#CBRFForm").trigger("reset");
                spinner.hide();
                $(".full-screen-container").hide();
            })
        })
    }

    function TypeOfCarUpdate(status,appRowId,comment, approvalType, text) {
        ////
        var form = $("#CBRFForm").serialize();
        $.ajax({
        url: '/CabBookingRequest/TypeOfCarUpdate',
        type: 'POST',
        data: form,
        dataType: 'JSON',
        success: (function (data) {
            if (data == 1) {
                FormApproval(status,appRowId,comment, approvalType, text);
        //$("#CBRFForm").trigger("reset");
        }
        else {
        failureModal();
        //$("#CBRFForm").trigger("reset");
            }
            $(".full-screen-container").hide();
        }),
        error: (function (data) {
            failureModal();
            $(".full-screen-container").hide();
        //$("#CBRFForm").trigger("reset");
        })
        })

        }

    $('#successModel').on('hidden.bs.modal', function () {
        ////
        var tab = $("#tab").val();
        console.log(tab);
        if (tab == 1) {
            GetMyTaskTab();
        }
        else if (tab == 2) {
            window.location = "../Dashboard?tab=" + tab;
        }
    })

    $("#btnCancel").on('click', function (e) {
        ////
        $("#headingErr").addClass('d-none');
        document.getElementById("add_to_me").innerHTML = '';
        window.location = "../Dashboard";
    });

    function GetData() {
        ////
        if (IsNew && IsEdit) {

            var extdesignation = "Team Member";
            var result = getTypeOfEmployeeByEmail("@currentUser.Email");
            if (result == true) {
                $("#ddEmpDesignation option[value='" + extdesignation + "']").prop('selected', 'selected');
                $('#ddEmpDesignation').prop("disabled", true);
            }
        var name = document.getElementById("txtName");
        var ename = document.getElementById("txtEmployeeName");
        var department = document.getElementById("txtDepartment");
        var txtCostCenterNumber = document.getElementById("txtCostCenterNumber");
        var txtContactNumber = document.getElementById("txtContactNumber");
        var empId = document.getElementById("txtEmpId");
        var txtEmail = document.getElementById("txtEmail");
        var txtMobile = document.getElementById("txtMobile");


        ename.value = "@currentUser.FirstName" + " " + "@currentUser.LastName";
        @*department.value = "@currentUser.Department";*@
        department.value = "@Html.Raw(currentUser.Department)";
        txtCostCenterNumber.value = "@currentUser.CostCenter";
        txtContactNumber.value = "@currentUser.PhoneNumber";
        empId.value = "@currentUser.EmpNumber";
        txtEmail.value = "@currentUser.Email";
        txtMobile.value = "@currentUser.PhoneNumber";
        name.value = "@currentUser.FirstName" + " " + "@currentUser.LastName";

        document.getElementById("txtEmployeeName").readOnly = true;
        document.getElementById("txtEmpId").readOnly = true;
        document.getElementById("txtEmail").readOnly = true;
        }
    }

    function avoidSpecialSymbols(e) {
        var keyCode = e.keyCode;
        //console.log("keyCode=" + keyCode);
        if ((keyCode >= 33 && keyCode <= 44) || (keyCode >= 58 && keyCode <= 64) || (keyCode >= 91 && keyCode <= 96) || (keyCode >= 123 && keyCode <= 126)) { e.preventDefault(); }

    }

    function getTypeOfEmployeeByEmail(txt) {
        console.log("email-validation");
        var result = txt.includes("extern");
        console.log(result);
        return result;
    }

    function RequestSubmission() {
        ////
        var drpRequestSubType = $("#drpRequestSubType option:selected").val();
        if (drpRequestSubType == "OnBehalf") {
            $("#OtherEmpName").show();
            $("#divOnBehalf").removeClass('d-none');
            $("#txtOtherEmpname").val('');
        }
        else if (drpRequestSubType == "Self") {
            $('#txtOtherEmpname').val('');
            $("#OtherEmpName").hide();
            $("#divOnBehalf").addClass('d-none');
        }
        else {
            $("#OtherEmpName").hide();
            $("#divOnBehalf").addClass('d-none');
            $('#txtEmpId').val('');
            $('#txtDepartment').val('');
            $('#txtEmail').val('');
            $('#txtMobile').val('');
            $('#ddEmpDesignation').val('undefined')
        }
    }

    $("#txtOtherEmpname").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "/List/GetEmployeeDetails",
                dataType: "json",
                cache: false,
                async: false,
                data: {
                    searchText: $("#txtOtherEmpname").val()
                },
                success: function (data) {
                    ////
                    console.log(data, 'success');
                    data = data.filter(function (e) {
                        return e.Email !== "@currentUser.Email";
                    });
                    response($.map(data, function (item) {
                        console.log(data, 'data');
                        return { label: item.FirstName, value: item.FullName, raw: item };
                    }));
                }
            });
        },
        search: function (event, ui) {
            var value = $("#txtOtherEmpname").val();
            // If less than three chars, cancel the search event
            if (value.length < 4) {
                event.preventDefault();
            }
        },
        min_length: 4,
        delay: 0,
        select: function (event, ui) {
            var empOtherDetails = ui.item['raw'];

            //Get the other details like Cost Center Code, Employee Number from DB.
            if (!empOtherDetails.Email) {
                document.getElementById('txtOtherEmployeeName').value = '';
                DisplayAlert('success', 'Info', 'Please select a user with valid Email', 4000);
                event.preventDefault();
                return;
            }
            $.ajax({
                url: "/List/GetExistingEmployeeDetails",
                dataType: "json",
                cache: false,
                async: false,
                data: {
                    otherEmpUserId: empOtherDetails.Email,

                },
                success: function (data) {
                    console.log(data, 'data');
                      var extdesignation = "Team Member";
                      var result = getTypeOfEmployeeByEmail(data.Email);
                        if (result == true) {
                            $("#txtOnBehalfdesignation option[value='" + extdesignation + "']").prop('selected', 'selected');
                            $('#txtOnBehalfdesignation').prop("disabled", true);
                        }

                    $('#txtOtherEmployeeName').val(data.FullName);
                    data.EmpNumber == 0 || data.EmpNumber == null ? $('#txtOnBehalfEmpId').val('').prop("readOnly", false) : $('#txtOnBehalfEmpId').val(data.EmpNumber).prop("readOnly", true);

                    data.CostCenter == 0 || data.CostCenter == null ? $('#txtOnBehalfCostCenterNumber').val('').prop("readOnly", false) : $('#txtOnBehalfCostCenterNumber').val(data.CostCenter).prop("readOnly", true);

                    data.PhoneNumber == 0 ? $('#txtOnBehalfMobile').val('').prop("readOnly", false) : $('#txtOnBehalfMobile').val(data.PhoneNumber).prop("readOnly", true);

                    data.Email == " " || data.Email == null ? $('#txtOnBehalfEmail').val('').prop("readOnly", false) : $('#txtOnBehalfEmail').val(data.Email).prop("readOnly", true);

                    data.Department == " " || data.Department == null ? $('#txtOnBehalfDepartment').val('').prop("readOnly", false) : $('#txtOnBehalfDepartment').val(data.Department).prop("readOnly", true);



                    $('#hiddentxtEmail').val(data.Email);
                    $('#txtName').val(data.FirstName + " " + data.LastName);
                    $('#txtContactNumber').val(data.PhoneNumber);
                    //$('#txtUserName').val(data.FirstName + " " + data.LastName);
                    //$('#txtUserContactNumber').val(data.PhoneNumber);

                }
            });
        }
    });

    $("#txtOtherEmpname").autocomplete("option", "appendTo", ".autocomplete-div");

    $('#myModal').modal({ backdrop: 'static', keyboard: false })

    function getLocation() {
        //
        if (IsNew) {
            if (!IsEdit) {
                var value = JSON.stringify(CBRF);
                var value_1 = JSON.parse(value);
                var selectLocation = value_1.Location;
                console.log(selectLocation);
                $.ajax({
                    type: "GET",
                    url: "/List/GetServiceDeskLocations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (data) {
                        console.log("Hi=" + data);
                        var s = '<option value=""></option>';

                        for (var i = 0; i < data.length; i++) {
                            if (data[i].LocationName == selectLocation) {
                                s += '<option selected value="' + data[i].LocationName + '">' + data[i].LocationName + '</option>';
                            }
                            else {
                                s += '<option value="' + data[i].LocationName + '">' + data[i].LocationName + '</option>';
                            }
                        }
                        $("#ddEmpLocation").html(s);

                    },
                    error: function () {

                    }
                });
            }
            else {
                $.ajax({
                    type: "GET",
                    url: "/List/GetServiceDeskLocations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (data) {
                        console.log("Hi=" + data);
                        var s = '<option value=""></option>';

                        for (var i = 0; i < data.length; i++) {
                            s += '<option value="' + data[i].LocationName + '">' + data[i].LocationName + '</option>';
                        }
                        $("#ddEmpLocation").html(s);

                    },
                    error: function () {

                    }
                });
            }
        }
    }

    function getOnBehalfLocation() {
        ////
        if (IsNew) {
            if (!IsEdit) {
                var value = JSON.stringify(CBRF);
                var value_1 = JSON.parse(value);
                var selectOnBehalfLocation = value_1.OnBehalfLocation;
                console.log(selectOnBehalfLocation);
                $.ajax({
                    type: "GET",
                    url: "/List/GetServiceDeskLocations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (data) {
                        console.log("Hi=" + data);
                        var s = '<option value=""></option>';

                        for (var i = 0; i < data.length; i++) {
                            if (data[i].LocationName == selectOnBehalfLocation) {
                                s += '<option selected value="' + data[i].LocationName + '">' + data[i].LocationName + '</option>';
                            }
                            else {
                                s += '<option value="' + data[i].LocationName + '">' + data[i].LocationName + '</option>';
                            }
                        }
                        $("#ddOnBehalfLocation").html(s);

                    },
                    error: function () {

                    }
                });
            }
            else {
                $.ajax({
                    type: "GET",
                    url: "/List/GetServiceDeskLocations",
                    contentType: "application/json; charset=utf-8",
                    datatype: 'json',
                    cache: false,
                    async: false,
                    success: function (data) {
                        console.log("Hi=" + data);
                        var s = '<option value=""></option>';

                        for (var i = 0; i < data.length; i++) {
                            s += '<option value="' + data[i].LocationName + '">' + data[i].LocationName + '</option>';
                        }
                        $("#ddOnBehalfLocation").html(s);

                    },
                    error: function () {

                    }
                });
            }
        }

    }

    function AddUsersRows() {

        var newCount = rowIdx + 1;

        var row = '<tr id="row' + newCount + '" class="tr_input text-center">   <td class="sNo text-center" >' + newCount + '</td> '
            + '<td><input autocomplete="off" type="text"  name="txtUserName_' + newCount + '" id="txtUserName_' + newCount + '" class="sftDetClass form-control inpValidateUserName" onkeypress="avoidSpecialSymbols(event)" onPaste="return false"/><input type="hidden" id="txtCBUId_' + newCount + '" name="txtCBUId_' + newCount +' "value="0"/></td>'
            + '<td><input autocomplete="off" type="text" maxlength="10" name="txtUserContactNumber_' + newCount + '"" id="txtUserContactNumber_' + newCount + '"" class="form-control inpValidateUserContNum" onkeypress="allowNumbersOnly(event)" onPaste="return false"/></td>'
            + '<td><input autocomplete="off" type="text"  name="txtDestination_' + newCount + '"" id="txtDestination_' + newCount + '"" class="form-control inpValidateDesg" onkeypress="avoidSpecialSymbols(event)" onPaste="return false"/></td>'
            + '<td><input type="time"  name="txtReportingTime_' + newCount + '"" id="txtReportingTime_' + newCount + '"" class="form-control widthForTime inpValidateRtime" onkeypress="avoidSpecialSymbols(event)" onPaste="return false"/></td>'
            + '<td><textarea autocomplete="off" name="txtReportingPlaceWithAddress_' + newCount + '"" id="txtReportingPlaceWithAddress_' + newCount + '"" class="form-control input-width-1 select-border emp-name-input inpValidateReportingAddress" cols="60" rows="2" maxlength="500"  onkeypress="avoidSpecialSymbols(event)" onPaste="return false"></textarea></td>'
            + '<td style="background-color:white; max-width:70px; vertical-align:central;">'
            + '<input class="remove-btn remove" type="image" src="/assets/img/remove.png" alt="Remove" style="max-width: 85%; background-color: white;">'
            + '</td></tr>';

            if (newCount == 1) {
                $('.tableUser').prepend(row);
            }
            else {
                $(".tableUser tr:last").after(row);
            }
            count = newCount;

        rowIdx++;

        $("#txtNumberofUsers").val(count);

    }

    function ExportToTable() {

        var ext = $('#UserDetailscsvfile').val().split('.').pop().toLowerCase();
        if (($.inArray(ext, ['xlsx']) == -1) && ($.inArray(ext, ['xls']) == -1)) {
          alert('Please upload a valid excel file!');
        }
        else {
             if (typeof (FileReader) != "undefined") {
                 var reader = new FileReader();
                 reader.onload = function (e) {
                     var data = e.target.result;
                     var workbook = XLSX.read(data, {
                         type: 'binary'
                     });
                     workbook.SheetNames.forEach(function (sheetName) {
                         // Here is your object
                         var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                         var json_object = JSON.stringify(XL_row_object);
                         console.log(JSON.parse(json_object));
                         console.log(json_object);

                         var csvrows = JSON.parse(json_object);
                         console.log(csvrows.length);

                         for (var i = 0; i < csvrows.length; i++) {
                             if (csvrows[i] != "") {
                                 var newCount = rowIdx + 1;
                                 var row = '<tr id="row' + newCount + '" class="tr_input text-center">   <td class="sNo text-center" >' + newCount + '</td> '
                                     + '<td><input value="' + csvrows[i].Username + '" autocomplete="off" type="text"  name="txtUserName_' + newCount + '" id="txtUserName_' + newCount + '" class="sftDetClass form-control inpValidateUserName" onkeypress="avoidSpecialSymbols(event)" onPaste="return false"/><input type="hidden" id="txtCBUId_' + newCount + '" name="txtCBUId_' + newCount +' "value="0"/></td>'
                                     + '<td><input value="' + csvrows[i].UserContactNumber + '" autocomplete="off" type="text" maxlength="10" name="txtUserContactNumber_' + newCount + '"" id="txtUserContactNumber_' + newCount + '"" class="form-control inpValidateUserContNum" onkeypress="allowNumbersOnly(event)" onPaste="return false"/></td>'
                                     + '<td><input value="' + csvrows[i].Destination + '" autocomplete="off" type="text"  name="txtDestination_' + newCount + '"" id="txtDestination_' + newCount + '"" class="form-control inpValidateDesg" onkeypress="avoidSpecialSymbols(event)" onPaste="return false"/></td>'
                                     + '<td><input value="' + ConvertStringToTime(csvrows[i].ReportingTime) + '" type="time"  name="txtReportingTime_' + newCount + '"" id="txtReportingTime_' + newCount + '"" class="form-control widthForTime inpValidateRtime" onkeypress="avoidSpecialSymbols(event)" onPaste="return false"/></td>'
                                     + '<td><textarea autocomplete="off" name="txtReportingPlaceWithAddress_' + newCount + '"" id="txtReportingPlaceWithAddress_' + newCount + '"" class="form-control input-width-1 select-border emp-name-input inpValidateReportingAddress" cols="60" rows="2" maxlength="500"  onkeypress="avoidSpecialSymbols(event)" onPaste="return false">' + csvrows[i].ReportingPlaceWithAddress + '</textarea></td>'
                                     + '<td style="background-color:white; max-width:70px; vertical-align:central;">'
                                     + '<input class="remove-btn remove" type="image" src="/assets/img/remove.png" alt="Remove" style="max-width: 85%; background-color: white;">'
                                     + '</td></tr>';
                                 console.log('Data');
                                 console.log(row);
                                 if (newCount == 1) {
                                     $('.tableUser').prepend(row);
                                 }
                                 else {
                                     $(".tableUser tr:last").after(row);
                                 }
                                 count = newCount;

                                 rowIdx++;
                             }
                         }
                         $("#txtNumberofUsers").val(count);
                         $("#UserDetailscsvfile").val('');
                     })
                 };
                 reader.readAsBinaryString($("#UserDetailscsvfile")[0].files[0])
             }
             else {
                 alert("Sorry! Your browser does not support HTML5!");
             }
         }
    }

    function ConvertStringToTime(timeString) {
        //
        var date = timeString.split(':');
        var hours = date[0] < 10 ? "0" + date[0] : date[0];
        var minutes = date[1];
        var output = hours + ':' + minutes;
        console.log(output);

        return output;
    }

</script>
