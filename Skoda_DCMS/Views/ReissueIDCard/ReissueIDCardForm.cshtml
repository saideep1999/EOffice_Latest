@model Skoda_DCMS.Models.RIDCFResults
@{
    var currentUser = (Skoda_DCMS.Models.UserData)HttpContext.Current.Session["UserData"];
    ViewBag.Title = "Reissue ID Card Form";
    // bool IsNew = true;
    // bool IsEdit = true;
    bool IsNewMode = true, IsEditMode = false, IsViewMode = false;
    bool IsValidityCheck = true;
    Skoda_DCMS.Models.ReissueIDCardData RIDCF = null;
    dynamic FlagRedirect = null;
    int FormId = 0, AppRowId = 0, ApprovalType = 0;
    string AREAID = "";
    Layout = ViewBag.Layout;
    var CurrentUserDesgn = "";
    List<Skoda_DCMS.Models.ApprovalDataModel> appList = new List<Skoda_DCMS.Models.ApprovalDataModel>();
    var IDCardOffcDegnStr = "ID Card Office";
    if (ViewBag != null && ViewBag.IsNew != null)
    {
        //IsNew = ViewBag.IsNew;
        //IsEdit = ViewBag.IsEdit;
        IsNewMode = ViewBag.IsNewMode;
        IsEditMode = ViewBag.IsEditMode;
        IsViewMode = ViewBag.IsViewMode;
        RIDCF = ViewBag.Model.one[0] as Skoda_DCMS.Models.ReissueIDCardData;
        FormId = ViewBag.FormId;
        AppRowId = ViewBag.AppRowId;
        IsValidityCheck = ViewBag.IsValidityCheck != null ? (bool)ViewBag.IsValidityCheck : false;
        ApprovalType = ViewBag.ApprovalType != null ? (int)ViewBag.ApprovalType : 0;
        appList = ViewBag.Model?.three as List<Skoda_DCMS.Models.ApprovalDataModel>;
        //CurrentUserDesgn = appList?.Where(x => x.ApproverId == currentUser.UserId).Select(x => x.Designation).FirstOrDefault();
        var Ap = appList?.Where(x => x.ApproverUserName.ToLower() == currentUser.UserName.ToLower() && x.ApproverStatus.ToLower() == "pending")
                        .Where(x => x.Logic.ToLower() == "or"
                            ? !appList.Any(y => y.Level == x.Level && y.ApproverStatus.ToLower() == "approved")
                            : true)
                        .OrderBy(x => x.Level).Select(x => new { Designation = x.Designation, Level = x.Level }).FirstOrDefault();
        CurrentUserDesgn = Ap?.Designation;
        var CurrentUserLevel = Ap?.Level;
        //Logic to change assistant to doctor(if he/she has) for editing the fields doctor fields
        CurrentUserDesgn = appList.Where(x => x.Level == CurrentUserLevel).Any(x => x.Designation == IDCardOffcDegnStr)
            ? IDCardOffcDegnStr : CurrentUserDesgn;
    }

    int count = 0;
}
<style>
    .astColor {
        color: red;
    }
    /*New design css start here*/

    .textTrans {
        width: 100%;
        max-width: 99%;
        border-radius: 5px;
        margin-right: 0px;
        border: 1px solid #BFBFBF !important;
    }

    .empDetailsBg {
        background-color: #fffbef;
    }

    #accordion select {
        color: #000;
        width: 100% !important;
        max-width: 100%;
        height: 45px;
        background-color: #fff;
        border: 1px solid #BFBFBF;
        box-sizing: border-box;
        border-radius: 5px;
        background-image: url(data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>);
        background-repeat: no-repeat;
        background-position: right .75rem center;
        background-size: 16px 12px;
    }

    #accordion input[type='text'] {
        width: 100% !important;
        max-width: 100%;
        height: 45px;
        background-color: #fff;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px !important;
    }

    #accordion input[type='date'] {
        width: 100% !important;
        max-width: 100%;
        height: 45px;
        background-color: #fff;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
    }

    #accordion input[type='time'] {
        height: 45px;
    }

    #accordion label {
        font-size: 16px;
        line-height: 22px;
        font-weight: 600;
        color: #201F1F;
    }

    #accordion table tr td {
        border: none !important;
        font-size: 16px;
        line-height: 19px;
        color: #201F1F;
        background-color: white;
    }

    #accordion label {
        display: block;
    }

    #accordion .card-header {
        background: rgb(4 59 100) !important;
        border-radius: 5px 5px 0px 0px;
        position: relative;
        margin-top: 15px;
    }

        #accordion .card-header.collapsed h5:after {
            content: '+';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

        #accordion .card-header h5:after {
            content: '-';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

    #accordion h5 button {
        font-size: 18px;
        line-height: 22px;
        /* identical to box height */
        padding-left: 0px;
        display: flex;
        align-items: center;
        text-transform: uppercase;
        /* Text_white */

        color: #FFFFFF;
    }

        #accordion h5 button:focus {
            box-shadow: none;
        }

    .empDetailsFields label {
        display: block !important;
        margin-bottom: 0px;
    }

    .empDetailsFields .row label {
        display: block;
        margin-bottom: 0px;
    }

        .empDetailsFields .row label:nth-child(1) {
            font-style: normal;
            font-weight: normal !important;
            font-size: 12px;
            line-height: 18px;
            color: #A9A9A9 !important;
        }

        .empDetailsFields .row label:nth-child(2) {
            font-style: normal;
            font-weight: normal;
            font-size: 18px;
            line-height: 22px;
            color: #201F1F;
        }

    .firstLastName {
        font-style: normal;
        font-weight: normal;
        font-size: 20px;
        line-height: 24px;
        /* identical to box height */

        display: flex;
        align-items: center;
        color: #201F1F;
    }

    .submit-btn {
        background: #3D3D3D;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #FFFFFF;
        border-color: transparent !important;
    }

    .cancl-btn {
        background: #FAE99B;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        border-color: transparent !important;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #212221;
        margin-left: 10px;
    }




    .card-footer {
        display: flex;
        background-color: transparent !important;
    }

    .photo-form {
        width: 100%;
    }

    .ui-front {
        z-index: 9999999 !important;
    }
    /*Animation CSS Starts*/

    div.input-block {
        position: relative;
    }

        div.input-block input {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 188px;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 5px !important;
            border-top-right-radius: 5px !important;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block textarea {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 100%;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            background-color: #fff;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block span.placeholder {
            position: absolute;
            margin: 17px 0;
            padding: 0 4px;
            font-family: Roboto, sans-serif;
            color: #6c757d;
            display: flex;
            align-items: center;
            font-size: 1rem;
            top: -6px;
            left: 15px;
            transition: all 0.2s;
            transform-origin: 0% 0%;
            background: none;
            pointer-events: none;
            z-index: 1;
        }

        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: #fff !important;
        }

        div.input-block textarea:valid + span.placeholder,
        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px) !important;
            background: #fff !important;
        }

        div.input-block input:valid + span.placeholder,
        div.input-block input:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: #fff;
        }

    .empDetailsFields div.input-block input:valid + span.placeholder,
    .empDetailsFields div.input-block input:focus + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: rgb(219,238,213);
    }

    div.input-block input.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: rgb(219,238,213);
    }

    .empDetailsFields div.input-block input:read-only + span.placeholder,
    .empDetailsFields div.input-block input:read-only + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: rgb(219,238,213);
    }

    div.input-block input:read-only + span.placeholder,
    div.input-block input:read-only + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: #fff;
    }


    div.inputSelect span.placeholder {
        position: absolute;
        margin: 17px 0;
        padding: 0 4px;
        font-family: Roboto, sans-serif;
        color: #000;
        display: flex;
        align-items: center;
        font-size: 1rem;
        top: -6px;
        left: 15px;
        transition: all 0.2s;
        transform-origin: 0% 0%;
        background: none;
        pointer-events: none;
        z-index: 1;
    }

    div.inputSelect select:focus + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background: #fff;
        z-index: 9;
    }

    .empDetailsFields div.inputSelect select:focus + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: rgb(219,238,213);
        z-index: 9;
    }

    div.inputSelect select:not([value=""]):valid + span.placeholder {
        transition: all 0.2s;
        transform-origin: 0% 0%;
    }



    div.input-block input:focus + span.placeholder {
        color: #284B63;
    }

    .breadcrumb {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding: 1rem 1rem 0;
        margin-bottom: 0;
        list-style: none;
        background-color: #FFFFFF;
        border-radius: .25rem;
        padding-bottom: 0.75rem !important;
        padding-left: 0px !important;
    }

    body.nav-sm .container.body .left_col {
        width: 63px;
        padding: 0;
        position: fixed;
        height: 100%;
        z-index: 8;
    }

    .card {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0px;
        border-radius: .25rem;
    }

    .dropdown-toggle::after {
        display: none;
        width: 0;
        height: 0;
        margin-left: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
    }

    input.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213);
    }

    inputSelect.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213) !important;
    }

    select.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background-color: #fff !important;
        z-index: 9;
    }

    .empDetailsFields select.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background-color: rgb(219,238,213) !important;
        ;
        z-index: 9;
    }

    textarea.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }

    .TransView {
        background-color: white !important;
    }

    @@media only screen and (min-width: 992px) {
        div .input-block span.placeholder {
            font-size: 15px;
        }

        div.inputSelect span.placeholder {
            font-size: 14px;
        }
    }

    input[type='date'].spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }

    .showBorder {
        border: 1px solid #dee2e6;
    }

    .forSameHt {
        padding-bottom: 40px;
        height: 78px !important;
    }

    .forPoints input[type='checkbox'] {
        margin-right: 2px;
        position: relative;
        top: 2px;
    }

    #lblReason {
        font-size: 16px !important;
    }

    #loader {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        
        z-index: 10000;
    }
</style>
<script type="text/javascript">
    function checkSelect(id) {

        if ($('#' + id).val() != '') {
            $('#' + id).addClass('spanUpperSide');
        }
    }
    /*$('#timedemo').pickatime({ twelvehour: true });*/
</script>
@*Loader*@


<body>

    <div class="right_col bg-color">

        <div>
            <ol class="breadcrumb pl-0">
                <li>
                    <a href="/Dashboard?formName=RIDCF">
                        Dashboard
                    </a>
                </li>
                <li>
                    SAVWIPL - Reissue ID Card
                </li>
            </ol>
        </div>
        <div class="container">
            <div class="">
                <div class="breadcrumb-container table-bordered" style="background-color: rgb(219,238,213) !important; ">
                    <div class="col-md-4 col-lg-4">
                        <span class="placeholder">Date : @(IsViewMode || IsEditMode ? (Convert.ToDateTime(RIDCF.Created).ToShortDateString()) : DateTime.Now.ToShortDateString())</span>
                    </div>
                    <div class="col-md-4 col-lg-4 mb-1 form-heading" style="text-align:center; margin-top:5px">
                        <span>
                            SAVWIPL - Reissue ID Card
                        </span>
                    </div>
                    <div class="col-md-4 col-lg-4 text-right">
                        @if (IsViewMode || IsEditMode)
                        {
                            <span class="placeholder"> Form Id : @(IsViewMode || IsEditMode ? ("RIDCF" + RIDCF.FormId ?? "") : "" )</span>
                        }
                    </div>
                </div>
            </div>
            <form action="/ReissueIDCard/SaveIDCard" id="RIDCForm" method="post">
                <div class="heading d-none" id="headingErr">
                    <h1 id="" class="info-header">Following fields are mandatory. Please fill in information for<br /></h1>
                    <div id="add_to_me" class="header-list" style="color:red;">

                    </div>
                </div>
                @if (IsEditMode || IsViewMode)
                {
                    <div>
                        <input type="hidden" id="FormSrId" name="FormSrId" value="@(ViewBag.Model.one[0].Id)" />
                        <input type="hidden" id="FormId" name="FormId" value="@(FormId)" />
                        <input type="hidden" id="AppRowId" name="AppRowId" value="@(AppRowId)" />
                    </div>
                }


                @{
                    Html.RenderPartial("_SubmitterDetailsWithModel", (ViewBag as object));
                }
                @{
                    Html.RenderPartial("_ApplicantDetailsWithModel", (ViewBag as object));
                }

                <div id="accordion">

                    <div class="card">
                        <div class="card-header collapsed" id="headingOne" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                    <img src="~/assets/img/transactionIcon.svg" width="24" height="24" class="mr-2" />Transaction Fields
                                </button>
                            </h5>
                        </div>
                        <div id="collapseThree" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                            <div class="card-body">

                                <div class="form-row">

                                    <div class="form-group d-flex align-items-center col-12 col-md-4">
                                        <label id="lblTypeOfCard" class="mr-4 mb-0">Type of Card<span class="astColor">*</span> </label>
                                        <div class="mr-3 mt-2">
                                            <label class="checkbox-container mb-0 mt-1">
                                                @if (IsViewMode || IsEditMode)
                                                {
                                                    <input type="checkbox" name="chkPKI" id="chkPKI" value="PKI" class="inpDisable" onclick="getTypeOfCard()" @(RIDCF.TypeOfCard == "PKI" ? "checked" : "") />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="chkPKI" id="chkPKI" value="PKI" onclick="getTypeOfCard()" />
                                                }
                                                <label> PKI</label>
                                                <span class="checkmark"></span>
                                            </label>
                                        </div>
                                        <div class="mt-2">
                                            <label class="checkbox-container mb-0 mt-1">
                                                @if (IsEditMode || IsViewMode)
                                                {
                                                    <input type="checkbox" class="txtDisable" name="chkNonPKI" id="chkNonPKI" value="chkNonPKI" onclick="getTypeOfCard()" @(RIDCF.TypeOfCard == "NonPKI" ? "checked" : "") />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="chkNonPKI" id="chkNonPKI" value="chkNonPKI" onclick="getTypeOfCard()" />
                                                }
                                                <label>Non PKI</label>
                                                <span class="checkmark"></span>
                                            </label>
                                        </div>
                                        <input type="hidden" name="chkTypeOfCard" id="chkTypeOfCard" value="@(IsEditMode ?RIDCF.TypeOfCard :"")" />

                                    </div>


                                    <div class="form-group col-md-2 col-lg-2 col-12 input-block">
                                        @if (IsNewMode)
                                        {
                                            <input type="date" name="txtDateofJoining" class="w-40 spanUpperSide" id="txtDateofJoining" value="" required>
                                        }
                                        else if (IsEditMode)
                                        {
                                            <input type="date" name="txtDateofJoining" class="w-40 spanUpperSide" id="txtDateofJoining" value="@(RIDCF.DateofJoining.ToString("yyyy-MM-dd"))" required>
                                        }
                                        else if (IsViewMode)
                                        {
                                            <input type="text" name="txtDateofJoining" class="w-40 spanUpperSide txtDisable" id="txtDateofJoining" value="@(RIDCF.DateofJoining.ToString("MM-dd-yyyy"))" required>
                                        }
                                        <span class="placeholder TransView">Date of Joining<span class="astColor">*</span></span>
                                    </div>

                                    @if (IsNewMode || IsEditMode)
                                    {
                                        <div class="form-group col-md-3 col-lg-3 col-12 inputSelect">
                                            <select name="drpReasonforReissue" class="" id="drpReasonforReissue" onchange="checkSelect('drpReasonforReissue'),getOtherReason()" required>
                                                @*<option style="display: none;"></option>*@
                                                @*<option value="Stolen">Stolen</option>
                                                    <option value="Lost">Lost</option>*@
                                                @*<option value="Misplaced">Misplaced</option>
                                                <option value="Damage">Damage</option>
                                                <option value="TechnicalFault">Technical Fault</option>
                                                <option value="Others">Others</option>*@
                                            </select>
                                            <span class="placeholder TransView">Reason for Reissue<span class="astColor">*</span></span>
                                        </div>
                                    }
                                    else if (IsViewMode)
                                    {
                                        <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                            <input type="text" name="txtReasonforReissue" class="w-40 txtDisable" id="txtReasonforReissue" value="@(RIDCF.ReasonforReissue??"")" required />
                                            <span class="placeholder TransView">Reason for Reissue<span class="astColor">*</span></span>
                                        </div>
                                    }

                                    @if (IsViewMode)
                                    {
                                        if (RIDCF.ReasonforReissue == "Others")
                                        {
                                            <div class="form-group col-md-3 col-lg-3 col-12 input-block" id="otherReason">
                                                <input type="text" name="txtReasonforReissueOther" class="txtDisable" id="txtReasonforReissueOther" maxlength="50" value="@(RIDCF.OtherReason ?? "")" required />
                                                <span class="placeholder TransView">Other Reason<span class="astColor">*</span></span>
                                            </div>
                                        }
                                    }
                                    else if (IsNewMode)
                                    {
                                        <div class="form-group col-md-3 col-lg-3 col-12 input-block d-none" id="otherReason">
                                            <input type="text" name="txtReasonforReissueOther" class="txtDisable" id="txtReasonforReissueOther" maxlength="50" value="" required />
                                            <span class="placeholder TransView">Other Reason<span class="astColor">*</span></span>
                                        </div>
                                    }
                                    else if (IsEditMode)
                                    {
                                        if (RIDCF.ReasonforReissue == "Others")
                                        {
                                            <div class="form-group col-md-3 col-lg-3 col-12 input-block" id="otherReason">
                                                <input type="text" name="txtReasonforReissueOther" class="txtDisable" id="txtReasonforReissueOther" maxlength="50" value="@(RIDCF.OtherReason ?? "")" required />
                                                <span class="placeholder TransView">Other Reason<span class="astColor">*</span></span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-group col-md-3 col-lg-3 col-12 input-block d-none" id="otherReason">
                                                <input type="text" name="txtReasonforReissueOther" class="txtDisable" id="txtReasonforReissueOther" maxlength="50" value="" required />
                                                <span class="placeholder TransView">Other Reason<span class="astColor">*</span></span>
                                            </div>
                                        }
                                    }
                                </div>

                                <div class="form-row mt-3">
                                    <div class="form-group col-12" id="uploadFileDiv">
                                        @if (IsNewMode)
                                        {
                                            <div class="form-group col-md-6 col-lg-6 col-12" id="dnfFileUpload">
                                                <label class="">
                                                    Upload Photo
                                                    @*Upload Image for ID Card*@
                                                </label>
                                                <input type="file" id="fileToUpload" name="fileToUpload" style="background-color: white !important; width: 215px" />
                                                <div><small><b>Note: Passport size photo in office uniform</b></small></div>
                                            </div>
                                        }
                                        else if (IsEditMode)
                                        {


                                    <div class="form-group col-md-6 col-lg-6 col-12" id="dnfFileUpload">
                                        <label class="">Upload Image for ID Card</label>
                                        <input type="file" id="fileToUpload" value="@RIDCF.UploadPhoto" name="fileToUpload" style="background-color: white !important; width: 215px" />
                                        <a href="@RIDCF.UploadPhoto" target="_blank">
                                            @RIDCF.UploadPhoto
                                        </a>

                                        @*<input type="hidden" id="attachedfile" name="attachedfile" value="@System.Configuration.ConfigurationManager.AppSettings["SharepointSiteURL"]@attachment.ServerRelativeUrl" />
        <input type="hidden" id="attachedfileName" name="attachedfileName" value="@attachment.FileName" />
        <a href=@System.Configuration.ConfigurationManager.AppSettings["SharepointSiteURL"]@attachment.ServerRelativeUrl download=@attachment.FileName target="_blank">@attachment.FileName</a>*@
                                    </div>


                                        }
                                        else if (IsViewMode)
                                        {
                                            <div class="form-group col-md-6 col-lg-6 col-12" id="dnfFileUpload">
                                                <label class="">Upload Image for ID Card</label>
                                                <input type="file" id="fileToUpload" value="@RIDCF.UploadPhoto" name="fileToUpload" style="background-color: white !important; width: 215px"  / disabled>
                                               
                                            </div>


                                        }

                                    </div>
                                </div>

                                <div class="form-row input-block">
                                    <div class="form-group col-12">
                                        @if (IsViewMode || IsEditMode)
                                        {
                                            <textarea class="textTrans txtDisable spanUpperSide" cols="90" rows="3" name="txtBusinessNeed" id="txtBusinessNeed" maxlength="500" required>@(RIDCF.BusinessNeed??"")</textarea>
                                        }
                                        else
                                        {
                                            <textarea class="textTrans" cols="90" rows="3" name="txtBusinessNeed" id="txtBusinessNeed" maxlength="500" required></textarea>
                                        }
                                        <span class="placeholder TransView">Business Function & Responsibility (Max. 500)<span class="astColor">*</span></span>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                @if (IsViewMode)
                {
                    <div id="accordion">
                        <div class="card" id="actionTab">
                            <div class="card-header collapsed" id="headingFive" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                        <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" /> Action
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseFive" class="collapse" aria-labelledby="headingFive" >
                                <div class="card-body actionTab">

                                    <div class="form-row">
                                        <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                            @if (RIDCF.FormID.FormStatus == "Approved")
                                            {
                                                <input type="date" name="txtDateOfIssue" id="txtDateOfIssue" value="@(RIDCF.DateOfIssue.ToString("yyyy-MM-dd") ?? "")" required>
                                            }
                                            else
                                            {
                                                <input type="date" name="txtDateOfIssue" id="txtDateOfIssue" onchange="" value="">

                                            }

                                            <span class="placeholder TransView">Date Of Issue</span>
                                        </div>
                                        <div class="form-group col-md-3 col-lg-3 col-12 inputSelect">
                                            <select name="drpChargeable" id="drpChargeable" onchange="checkSelect('drpChargeable')">
                                                <option value="" style="display:none;"></option>
                                                <option value="Yes">Yes</option>
                                                <option value="No">No</option>
                                            </select>
                                            <span class="placeholder TransView">Chargeable<span class="astColor">*</span></span>
                                        </div>
                                        <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                            <input type="text" name="txtIDCardNumber" autocomplete="off" class="" id="txtIDCardNumber" onkeypress="avoidSpecialSymbols(event)" value="@(RIDCF.IDCardNumber??"")" required>
                                            <span class="placeholder TransView">ID Card Number<span class="astColor">*</span></span>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                }

                @if (IsViewMode || IsEditMode)
                {
                    <div id="accordion">
                        <div class="card">
                            <div class="card-header collapsed" id="headingThree" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour">
                                        <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" />Approval Tracking
                                    </button>
                                </h5>
                            </div>
                            <div id="collapseFour" class="collapse" aria-labelledby="headingThree">
                                <div class="card-body">
                                    <div class="form-row">
                                        <div class="col-md-12">
                                            <table class="table w-100 td-border showBorder">
                                                <thead>
                                                    <tr>
                                                        <th>Name</th>
                                                        <th>Role</th>
                                                        <th>Processed on</th>
                                                        <th>Status</th>
                                                        <th class="text-center">Comments</th>
                                                        <th class="text-center">Approval Level</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (IsViewMode || IsEditMode)
                                                    {
                                                        //Dynamic Code
                                                        appList = ViewBag.Model?.three as List<Skoda_DCMS.Models.ApprovalDataModel>;
                                                        {
                                                            Html.RenderPartial("_ApprovalTracking", appList);
                                                        }

                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="pt-3">
                    <p class="text-left f-600">SF_SO/1_018.00</p>
                </div>


                @if (IsEditMode)
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn" id="btnSubmit">
                            Re-Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }
                else if (IsNewMode)
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn" id="btnSubmit">
                            Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }

            </form>
        </div>

    </div>

</body>

<div class="modal fade" id="successModel" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header modelHeader">
                <span class="modal-title modalMsgTitle" id="modalTitle"></span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label id="modalBody" class="lableMsg">  </label>
                <input type="hidden" id="tab" value="0" />
            </div>
            <div class="modal-footer">
                <button type="button" class="submitBomBtn publishBtn" data-dismiss="modal" id="modalOkButton">OK</button>
            </div>
        </div>
    </div>
</div>

<script>
    var spinner = $('#loader');
    var isNewMode = @Html.Raw(Json.Encode(IsNewMode));
     var isViewMode = @Html.Raw(Json.Encode(IsViewMode));
    var isEditMode = @Html.Raw(Json.Encode(IsEditMode));
    var ridcf = @Html.Raw(Json.Encode(RIDCF));
    var appRowId = @Html.Raw(Json.Encode(AppRowId));
    var approvalType =@Html.Raw(Json.Encode(ApprovalType));
    var FlagRedirect = @Html.Raw(Json.Encode(FlagRedirect));
    var currentUserDesgn = @Html.Raw(Json.Encode(CurrentUserDesgn));
    var errorCount = 0;
    var errors = "";

    //console.log(ridcf);
    $(document).ready(function () {
        pageLoad();
    });

    function pageLoad() {
        //
        getReasonReissue();
        $("#headingErr").addClass('d-none');
        spinner.hide();
        getTypeOfCard();
        $("#rdOnBehalfOptionOthersLabel").text('Blue Collar Employee');
        //txtDateofJoining.max = new Date().toISOString().split("T")[0];

        if (isEditMode) {
            var value = JSON.stringify(ridcf);
           // console.log("RIDCF DATA : " + value);
            var value_1 = JSON.parse(value);
            //console.log("Parsed data : " + value_1);
            var ReasonforReissue = value_1.ReasonforReissue;
           // console.log("ReasonforReissue" + ReasonforReissue);
            $("#drpReasonforReissue option[value='" + ReasonforReissue + "']").prop('selected', 'selected');
            $('#drpReasonforReissue').addClass("spanUpperSide");
        }

        if (isViewMode) {

            $(".inpDisable").attr("disabled", "disabled");
            $(".txtDisable").attr("disabled", "disabled");

            if (currentUserDesgn == "ID Card Office") {
                $("#txtDateOfIssue").attr("disabled", false);
                $("#drpChargeable").attr("disabled", false);
                $("#txtIDCardNumber").prop("readOnly", false);          
                $('#actionTab > .collapse').collapse('show');
              //  $("#txtValidityStartDate").prop("readOnly", false);
              //  $("#txtValidityEndDate").prop("readOnly", false);
                     setValidityDate();
            }
            else {
                $("#txtDateOfIssue").attr("disabled", "disabled");
                $("#drpChargeable").attr("disabled", "disabled");
                $("#txtIDCardNumber").prop("readOnly", true);
             //   $("#txtValidityStartDate").prop("readOnly", true);
              //  $("#txtValidityEndDate").prop("readOnly", true);
           
            }

            var value = JSON.stringify(ridcf);
            var value_1 = JSON.parse(value);
            var chargeable = value_1.Chargeable;
            console.log("charge=" + chargeable);
            $("#drpChargeable option[value='" + chargeable + "']").prop('selected', 'selected');
            if (chargeable != null) {
                $("#drpChargeable").addClass("spanUpperSide");
            }
        }
    };


    function ASSIGNddlVALUES() {
        
        if (IsEditMode || IsViewMode) {


            $('#drpReasonforReissue option[value="' + RIDCF.ReasonforReissue + '"]').attr("selected", "selected").change();
           

        }
    }

    function getOtherReason() {
        var selectedOption = document.getElementById("drpReasonforReissue").value;
       // console.log("selectedOption=" + selectedOption);
        if (selectedOption == "Others") {
            $("#otherReason").removeClass('d-none');
        }
        else {
            $("#otherReason").addClass('d-none');
        }
    }

    function getTypeOfCard() {

        $('input:checkbox[id="chkPKI"]').click(function () {
            if ($(this).prop("checked") == true) {
                $("#chkTypeOfCard").val('PKI');
                $('input[id="chkNonPKI"]').prop("checked", false).change();
            }
            else {
                $('input[id="chkPKI"]').attr('disabled', false);
            }
        });

        $('input:checkbox[id="chkNonPKI"]').click(function () {
            if ($(this).prop("checked") == true) {
                $("#chkTypeOfCard").val('NonPKI');
                $('input[id="chkPKI"]').prop("checked", false).change();
            }
            else {
                $('input[id="chkNonPKI"]').attr('disabled', false);
            }
        });


    }

    function getReasonReissue() {
        
        $.ajax({
            url: '/ReissueIDCard/ReasonforReissue',
            data: {},
            type: "GET",
            dataType: 'JSON',
            async: false,
            success: function (data) {
                var s = '<option value="" selected disabled>Select</option>';

                for (var i = 0; i < data.Result.length; i++) {
                    s += '<option value="' + data.Result[i].ReasonforReissue + '">' + data.Result[i].ReasonforReissue + '</option>';
                }

                $("#drpReasonforReissue").html(s);

            },
            error: function ()
            {

            }
        });

        
    }

    //function date_val1() {

    //    var week_string = document.getElementsByName("txtDateOfIssue")[0].value;
    //    var parts = week_string.split("-");
    //    var date = new Date(parts[0], parts[1] - 1, parts[2]);

    //    //if (isValidDate(date)) {
    //    //    var min_date = date;
    //    //    min_date.setDate(min_date.getDate() + 1);
    //    //    var initial_date = min_date.toISOString().split('T')[0];
    //    //    //console.log(initial_date);
    //    //    document.getElementsByName("txtValidityStartDate")[0].setAttribute("min", initial_date);
    //    //}
    //}

    //function date_val() {


    //    var week_string = document.getElementsByName("txtValidityStartDate")[0].value;
    //    var parts = week_string.split("-");
    //    var date = new Date(parts[0], parts[1] - 1, parts[2]);

    //    if (isValidDate(date)) {
    //        var min_date = date;
    //        min_date.setDate(min_date.getDate() + 1);
    //        var initial_date = min_date.toISOString().split('T')[0];
    //        //console.log(initial_date);
    //        document.getElementsByName("txtValidityEndDate")[0].setAttribute("min", initial_date);
    //    }
    //}

    function isValidDate(d) {
        return d instanceof Date && !isNaN(d);
    }

    function setValidityDate() {
        //txtValidityStartDate.min = new Date().toISOString().split("T")[0];
        //txtValidityEndDate.min = new Date().toISOString().split("T")[0];
        txtDateOfIssue.min = new Date().toISOString().split("T")[0];
    }

    $("input[type='date']").keydown(function (event) {
        event.preventDefault();
    });

    function successModal(txt) {
        ////
        $('#modalTitle').html('Success');
        if (txt == "approve") {
            $('#modalBody').html('Form has been approved!');
        }
        else if (txt == "reject") {
            $('#modalBody').html('Form has been rejected!');
        }
        else if (txt == "enquire") {
            $('#modalBody').html('Form has been enquired!');
        }
        else if (txt == "cancelled") {
            $('#modalBody').html('Form has been cancelled!');
        }
        else {
            if (isEditMode) {
                $('#modalBody').html('Your form with ID: RIDCF' + txt + ' has been re-submitted! Kindly use this for future reference');
            }
            else {
                $('#modalBody').html('Your form with ID: RIDCF' + txt + ' has been submitted! Kindly use this for future reference');
            }
            FlagRedirect = txt;
        }
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
    }

    function failureModal(txt) {
        if (txt == null) {
            $('#modalBody').html('Some error occurred!');
        }
        $('#modalTitle').html('Failure');
        $('#modalBody').html(txt);
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
    }

  

    $("#btnSubmit").on('click', function (e) {

        validateSubmitter();
        validateApplicant();

       
        if (($("#chkPKI").prop("checked") == false) && ($("#chkNonPKI").prop("checked") == false)) {
            errors += "<li id='error" + errorCount + "'>" + "Type Of Card" + "</li>";
            $("#chkPKI").addClass('removeTypeOfCard');
            $("#chkNonPKI").addClass('removeTypeOfCard');
            AddError("lblTypeOfCard", 'removeTypeOfCard', errorCount);
            errorCount++;
        }
        else {
            RemoveError("lblTypeOfCard");
        }

        var dateofJoining = document.forms["RIDCForm"]["txtDateofJoining"].value;
        if (dateofJoining == "") {
            errors += "<li id='error" + errorCount + "'>" + "Date of Joining" + "</li>";
            AddError("txtDateofJoining", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("txtDateofJoining");
        }

        var reasonforReissue = $("#drpReasonforReissue option:selected").val();
        if (reasonforReissue == "") {
            errors += "<li id='error" + errorCount + "'>" + "Reason for Reissue" + "</li>";
            AddError("drpReasonforReissue", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("drpReasonforReissue");
        }

            reason = document.getElementById("txtReasonforReissueOther").value;
       if (reason == "" && reasonforReissue == "Others") {
                errors += "<li id='error" + errorCount + "'>" + "Other Reason" + "</li>";
                AddError("txtReasonforReissueOther", '', errorCount);
                errorCount++;
       }
        else {
            RemoveError("txtReasonforReissueOther");
       }



        var fileToUpload = $("#fileToUpload").val();
        console.log("file : " + fileToUpload);
                    if (fileToUpload != "") {
                        var result = fileValidation();
                        if (result == false) {
                            errors += "<li id='error" + errorCount + "'>" + "Upload file having extensions .jpeg/.jpg/.png only." + "</li>";
                            AddError("fileToUpload", '', errorCount);
                            errorCount++;
                        }
                        else {
                            RemoveError("fileToUpload");
                        }
                    }

        var businessNeed = document.getElementById("txtBusinessNeed").value;
        if (businessNeed == "") {
            errors += "<li id='error" + errorCount + "'>" + "Business Function & Responsibility" + "</li>";
            AddError("txtBusinessNeed", '', errorCount);
            errorCount++;
        }
        else {
            RemoveError("txtBusinessNeed");
        }


        if (errors.length) {
            errors = "<ol id='errorList'>" + errors + "</ol>";
            $("#headingErr").removeClass('d-none');
            document.getElementById("add_to_me").innerHTML = errors;
            errors = "";
            errorCount = 0;
            if (isEditMode) {
                $("#myModalRequest").scrollTop(0);
            }
            else {
                $(window).scrollTop(0);
            }
            $('#myModal5').animate({ scrollTop: 0 }, 'slow');
            return false;
        }
        $("#headingErr").addClass('d-none');
        document.getElementById("add_to_me").innerHTML = '';
        errors = "";
        errorCount = 0;

        $("#pageLoader").removeClass('invisible');
        $("#btnSubmit").text('Saving');
        $("#btnSubmit").prop("disabled", true);
        $("#btnCancel").prop("disabled", true);

        var form = $("#RIDCForm");
        var formData = new FormData(form[0]);
        $.ajax({
            url: '/ReissueIDCard/CreateReissueIDCardRequest',
            processData: false,
            contentType: false,
            type: 'POST',
            data: formData,
            enctype: 'multipart/form-data',
            success: (function (data) {
                console.log(data);
                if (data.Status == 200) {
                    $("#pageLoader").addClass('invisible');
                    if (isNewMode && isEditMode) {
                        $("#btnSubmit").text('Submit');
                    }
                    else {
                        $("#btnSubmit").text('Re-Submit');
                    }
                    successModal(data.Message);
                    $("#btnSubmit").prop("disabled", false);
                    $("#btnCancel").prop("disabled", false);
                }
                else {
                    failureModal(data.Message);
                    console.log("failure");
                    if (isNewMode && isEditMode) {
                        $("#btnSubmit").text('Submit');
                    }
                    else {
                        $("#btnSubmit").text('Re-Submit');
                    }
                    $("#pageLoader").addClass('invisible');
                    $("#btnSubmit").prop("disabled", false);
                    $("#btnCancel").prop("disabled", false);
                }
            }),
            error: (function (data) {
                failureModal(data.Message);
                console.log("error");
                if (isNewMode && isEditMode) {
                    $("#btnSubmit").text('Submit');
                }
                else {
                    $("#btnSubmit").text('Re-Submit');
                }
                $("#btnSubmit").prop("disabled", false);
                $("#btnCancel").prop("disabled", false);
                $("#pageLoader").addClass('invisible');
            })
        })
        $("#tab").val(2);
    });

    $("#btnCancel").on('click', function (e) {
        ////
        $("#headingErr").addClass('d-none');
        document.getElementById("add_to_me").innerHTML = '';
        if ($('#myModalRequest').hasClass('show'))
            $('#myModalRequest').modal('hide');
        else
            $('#myModalEdit').modal('hide');
        if (isNewMode || isEditMode) {
            window.location = "../Dashboard";
        }
    });

    function validityModal(txt) {
        ////
        if (txt == 'approve') {
        }
        else if (txt == 'reject') {
            DisplayAlert('error', 'Warning', 'Please type in the reason for rejecting the form');
        }
        else if (txt == 'enquire') {
            DisplayAlert('error', 'Warning', 'Please type in the reason for enquiring the form');
        }
    }

    function saveResponse(text) {
        
        let errorCount = 1;
        var errors = "";
        var status = '', comment = '';
        comment = $("#comment-" + text).val();
        switch (text) {
            case 'approve': {
                status = 'Approved';
                if (currentUserDesgn == "ID Card Office") {
                    var dateOfIssue = document.forms["RIDCForm"]["txtDateOfIssue"].value;
                    if (dateOfIssue == "") {
                        errors += "<li id='error" + errorCount + "'>" + "Date Of Issue" + "</li>";
                        AddError("txtDateOfIssue", '', errorCount);
                        errorCount++;
                    }
                    else {
                        RemoveError("txtDateOfIssue");
                    }


      
                    var drpChargeable = $("#drpChargeable option:selected").val();
                    if (drpChargeable == "") {
                        errors += "<li id='error" + errorCount + "'>" + "Chargeable" + "</li>";
                        AddError("drpChargeable", '', errorCount);
                        errorCount++;
                    }
                    else {
                        RemoveError("drpChargeable");
                    }
                    var IDCardNumber = document.getElementById("txtIDCardNumber").value;
                    if (IDCardNumber == "") {
                        errors += "<li id='error" + errorCount + "'>" + "ID Card Number" + "</li>";
                        AddError("txtIDCardNumber", '', errorCount);
                        errorCount++;
                    }
                    else {
                        RemoveError("txtIDCardNumber");
                    }

                    if (errors.length) {
                        DisplayAlert('error', 'Error', 'Please enter the details in Action Section');
                        errors = "<ol id='errorList'>" + errors + "</ol>";
                        $("#headingErr").removeClass('d-none');
                        document.getElementById("add_to_me").innerHTML = errors;
                        errors = "";
                        errorCount = 0;
                        if (isEditMode) {
                            $("#myModalRequest").scrollTop(0);
                        }
                        else {
                            $(window).scrollTop(0);
                        }
                        $('#myModal5').animate({ scrollTop: 0 }, 'slow');
                        return false;
                    }
                    $("#headingErr").addClass('d-none');
                    document.getElementById("add_to_me").innerHTML = '';
                    errors = "";
                    errorCount = 0;
                    ValidityUpdate(status, appRowId, comment, approvalType, text);
                }
                else {
                    FormApproval(status, appRowId, comment, approvalType, text);
                }

                break;
            }
            case 'reject': {
                status = 'Rejected';
                if (comment == '') {
                    validityModal(text);
                    return;
                }
                else {
                    FormApproval(status, appRowId, comment, approvalType, text);
                }
                break;
            }
            case 'enquire': {
                status = 'Enquired';
                if (comment == '') {
                    validityModal(text);
                    FormApproval(status, appRowId, comment, approvalType, text);
                    return;
                }
                else {
                    FormApproval(status, appRowId, comment, approvalType, text);
                }
                break;
            }
        }
        $("#tab").val(1);
    }

    function ValidityUpdate(status, appRowId, comment, approvalType, text) {
        ////
        var form = $("#RIDCForm").serialize();
        $.ajax({
            url: '/ReissueIDCard/RIDCFValidityUpdate',
            type: 'POST',
            data: form,
            dataType: 'JSON',
            success: (function (data) {
                if (data == 1) {
                    FormApproval(status, appRowId, comment, approvalType, text);
                }
                else {
                    failureModal();
                }
            }),
            error: (function (data) {
                failureModal();
            })
        })

    }

    function FormApproval(status, appRowId, comment, approvalType, text) {
        
        spinner.show();
        $.ajax({
            url: '/List/SaveResponse',
            type: 'POST',
            data: { response: status, appRowId: appRowId, comment: comment, approvalType: approvalType },
            dataType: 'JSON',
            success: (function (data) {
                if (data.Result == 1) {
                    successModal(text);
                    spinner.hide();
                    setTimeout(FilterMyTasks, 5000);
                    spinner.hide();
                }
                else {
                    failureModal();
                    spinner.hide();
                }
            }),
            error: (function (data) {
                failureModal();
                spinner.hide();
            })
        })

    }

    function requiredModal(text) {
        $('#modalTitle').html('Required!');
        $('#modalBody').html(text);
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
    }

    $(document).ready(function () {

    })

    function allowNumbersOnly(e) {
        var code = (e.which) ? e.which : e.keyCode;
        if (code > 31 && (code < 48 || code > 57)) {
            e.preventDefault();
        }
    }

    function avoidSpecialSymbols(e) {
        var keyCode = e.keyCode;
        //console.log("keyCode=" + keyCode);
        if ((keyCode >= 33 && keyCode <= 44) || (keyCode >= 58 && keyCode <= 64) || (keyCode >= 91 && keyCode <= 96) || (keyCode >= 123 && keyCode <= 126)) { e.preventDefault(); }

    }

    function alphaOnly(e) {
        var key = e.keyCode;
        if (key > 32 && (key < 65 || key > 122 || key == 91 || key == 92 || key == 93 || key == 94 || key == 95 || key == 96)) {
            e.preventDefault();
        }
    }

    $('#successModel').on('hide.bs.modal', function () {
        
        var tab = $("#tab").val();
        console.log("tab = "+tab);
        if (tab == 1) {
            GetMyTaskTab();
        }
        else if (tab == 2) {
            window.location = "../Dashboard?tab=" + tab;
        }
    })

  /*  $('#myModal').modal({ backdrop: 'static', keyboard: false })*/

    function fileValidation() {
        var fileInput = document.getElementById('fileToUpload');
        //console.log("fileInput "+fileInput);
        if (!(fileInput == null)) {
            var filePath = fileInput.value;
            var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
            if (!allowedExtensions.exec(filePath)) {
                // alert('Please upload file having extensions .jpeg/.jpg/.png/.gif only.');
                fileInput.value = '';
                return false;
            }
        }
        //else {
        //    //Image preview
        //    if (fileInput.files && fileInput.files[0]) {
        //        var reader = new FileReader();
        //        reader.onload = function (e) {
        //            document.getElementById('imagePreview').innerHTML = '<img src="' + e.target.result + '"/>';
        //        };
        //        reader.readAsDataURL(fileInput.files[0]);
        //    }
        //}
    }

</script>

