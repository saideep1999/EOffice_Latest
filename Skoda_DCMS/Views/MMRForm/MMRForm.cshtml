@{
    ViewBag.Title = "MMR Form";
    int FormId = 0, AppRowId = 0, ApprovalType = 0; bool IsEdit = true; bool IsNew = true;
    bool IsNewMode = true, IsEditMode = false, IsViewMode = false;
    var user = (Skoda_DCMS.Models.UserData)HttpContext.Current.Session["UserData"];
    var SecurityDesgnString = "Security";
    Skoda_DCMS.Models.MMRData MMRF = null;
    dynamic FlagRedirect = null;
    var currentUser = (Skoda_DCMS.Models.UserData)HttpContext.Current.Session["UserData"];
    List<Skoda_DCMS.Models.ApprovalDataModel>
    appList = new List<Skoda_DCMS.Models.ApprovalDataModel>
        ();
    int? tableCount = 0;
    string disabled = "", slctDisabled = "";
    var CurrentUserDesgn = "";
    long? CurrentUserLevel = 0;
    if (ViewBag != null && !ViewBag.IsNewMode)
    {
        IsNew = ViewBag.IsNew;
        IsEdit = ViewBag.IsEdit;
        IsNewMode = ViewBag.IsNewMode;
        IsEditMode = ViewBag.IsEditMode;
        IsViewMode = ViewBag.IsViewMode;
        disabled = IsViewMode ? "readonly" : "";
        slctDisabled = IsViewMode ? "disabled" : "";
        MMRF = ViewBag.Model.one[0] as Skoda_DCMS.Models.MMRData;
        FormId = ViewBag.FormId;
        AppRowId = ViewBag.AppRowId;
        appList = ViewBag.Model?.three as List<Skoda_DCMS.Models.ApprovalDataModel>
    ;
        CurrentUserDesgn = appList?.Where(x => x.ApproverUserName == currentUser.UserName).Select(x => x.Designation).FirstOrDefault();
        CurrentUserLevel = appList?.Where(x => x.ApproverUserName == currentUser.UserName && x.ApproverStatus == "Pending").Select(x => x.Level).FirstOrDefault();
        ApprovalType = ViewBag.ApprovalType != null ? (int)ViewBag.ApprovalType : 0;
        if (IsViewMode)
        {
            var Ap = appList?.Where(x =>
            x.ApproverUserName.ToLower() == currentUser.UserName.ToLower()
            && x.ApproverStatus.ToLower() == "pending"
            ).FirstOrDefault();
        }
    }
}
<!DOCTYPE html>
<style>

    .hide {
        display: none;
    }
    /*New design css start here*/
    .astColor {
        color: red;
    }

    .textTrans {
        width: 100%;
        max-width: 99%;
        border-radius: 5px;
        margin-right: 0px;
        border: 1px solid !important;
    }

    .empDetailsBg {
        background-color: #fffbef;
    }

    #accordion select {
        color: #000;
        width: 100% !important;
        height: 45px;
        background-color: #FFFFFF;
        border: 1px solid #BFBFBF;
        box-sizing: border-box;
        border-radius: 5px;
        background-image: url(data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>);
        background-repeat: no-repeat;
        background-position: right .75rem center;
        background-size: 16px 12px;
    }

    #accordion input[type='text'] {
        width: 100% !important;
        max-width: 100%;
        height: 45px;
        background-color: #FFFFFF;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px !important;
    }

    #accordion input[type='date'] {
        width: 100% !important;
        max-width: 100%;
        height: 45px;
        background-color: #FFFFFF;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
    }

    #accordion input[type='time'] {
        height: 45px;
    }

    #accordion label {
        font-size: 16px;
        line-height: 22px;
        font-weight: 600;
        color: #201F1F;
    }

    #accordion table tr td {
        font-size: 16px;
        line-height: 19px;
        color: #201F1F;
        background-color: white;
    }

    #accordion label {
        display: block;
    }

    #accordion .card-header {
        background: rgb(4 59 100) !important;
        border-radius: 5px 5px 0px 0px;
        position: relative;
        margin-top: 15px;
    }

        #accordion .card-header.collapsed h5:after {
            content: '+';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

        #accordion .card-header h5:after {
            content: '-';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

    #accordion h5 button {
        font-size: 18px;
        line-height: 22px;
        /* identical to box height */
        padding-left: 0px;
        display: flex;
        align-items: center;
        text-transform: uppercase;
        /* Text_white */

        color: #FFFFFF;
    }

        #accordion h5 button:focus {
            box-shadow: none;
        }

    .empDetailsFields label {
        display: block !important;
        margin-bottom: 0px;
    }

    .empDetailsFields .row label {
        display: block;
        margin-bottom: 0px;
    }

        .empDetailsFields .row label:nth-child(1) {
            font-style: normal;
            font-weight: normal !important;
            font-size: 12px;
            line-height: 18px;
            color: #A9A9A9 !important;
        }

        .empDetailsFields .row label:nth-child(2) {
            font-style: normal;
            font-weight: normal;
            font-size: 18px;
            line-height: 22px;
            color: #201F1F;
        }

    .firstLastName {
        font-style: normal;
        font-weight: normal;
        font-size: 20px;
        line-height: 24px;
        /* identical to box height */

        display: flex;
        align-items: center;
        color: #201F1F;
    }

    .submit-btn {
        background: #3D3D3D;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #FFFFFF;
        border-color: transparent !important;
    }

    .cancl-btn {
        background: #FAE99B;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        border-color: transparent !important;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #212221;
        margin-left: 10px;
    }




    .card-footer {
        display: flex;
        background-color: transparent !important;
    }

    .photo-form {
        width: 100%;
    }

    .ui-front {
        z-index: 9999999 !important;
    }

    /* NEW UI CSS END*/


    .showBorder {
        border: 1px solid #dee2e6;
    }

    .multiselect {
        height: 47px;
        margin-top: -1px;
    }
    /*Animation CSS Starts*/

    div.input-block {
        position: relative;
    }

        div.input-block input {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 188px;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block textarea {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 100%;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            background-color: #fff;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block span.placeholder {
            position: absolute;
            margin: 17px 0;
            padding: 0 4px;
            font-family: Roboto, sans-serif;
            color: #6c757d;
            display: flex;
            align-items: center;
            font-size: 1rem;
            top: -6px;
            left: 15px;
            transition: all 0.2s;
            transform-origin: 0% 0%;
            background: none;
            pointer-events: none;
            z-index: 1;
        }

    .question_span {
        width: 116% !important;
        font-size: 15px !important;
    }

    div.input-block textarea:focus + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: #fff !important;
    }

    div.input-block textarea:valid + span.placeholder,
    div.input-block textarea:focus + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
    }

    div.inputSelect select:focus + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
    }

    div.input-block input:valid + span.placeholder,
    div.input-block input:focus + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: #fff;
        /*background-color: rgb(219,238,213);*/
    }


    div.input-block input.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: rgb(219,238,213);
    }

    div.input-block input:read-only + span.placeholder,
    div.input-block input:read-only + span.placeholder {
        transform: scale(0.8) translateY(-25px);
        background-color: rgb(219,238,213);
    }


    div.inputSelect span.placeholder {
        position: absolute;
        margin: 17px 0;
        padding: 0 4px;
        font-family: Roboto, sans-serif;
        color: #000;
        display: flex;
        align-items: center;
        font-size: 1rem;
        top: -6px;
        left: 15px;
        transition: all 0.2s;
        transform-origin: 0% 0%;
        background: none;
        pointer-events: none;
        z-index: 1;
    }

    div.inputSelect select:focus + span.placeholder {
        transform: scale(0.8) translateY(-30px);
        background: rgb(219,238,213);
        z-index: 9;
    }

    div.inputSelect select:not([value=""]):valid + span.placeholder {
        transition: all 0.2s;
        transform-origin: 0% 0%;
    }



    div.input-block input:focus + span.placeholder {
        color: #284B63;
    }

    .breadcrumb {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding: 1rem 1rem 0;
        margin-bottom: 0;
        list-style: none;
        background-color: #FFFFFF;
        border-radius: .25rem;
    }

    body.nav-sm .container.body .left_col {
        width: 63px;
        padding: 0;
        position: fixed;
        height: 100%;
        z-index: 8;
    }

    .card {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0px;
        border-radius: .25rem;
    }

    .dropdown-toggle::after {
        display: none;
        width: 0;
        height: 0;
        margin-left: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
    }

    input.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213);
    }

    inputSelect.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213) !important;
    }

    select.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background-color: rgb(219,238,213) !important;
        z-index: 9;
    }

    select.spanUpperSideWhite + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background-color: rgb(255,255,255) !important;
        z-index: 9;
    }

    textarea.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }

    .TransView {
        background-color: white !important;
    }

    @@media only screen and (min-width: 992px) {
        div .input-block span.placeholder {
            font-size: 15px;
        }

        div.inputSelect span.placeholder {
            font-size: 1rem;
        }
    }

    input[type='date'].spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }

    .showBorder {
        border: 1px solid #dee2e6;
    }

    .wField {
        width: 233px !important;
        margin-left: 10px;
    }

    @@-moz-document url-prefix() {
        input[type=time]::-ms-clear {
            display: none;
        }
    }

    .datetime-reset-button {
        display: none !important;
    }

    .forShoppingCart {
        margin-left: 14% !important;
    }

    .btn-group {
        display: block !important;
    }

    #accordion label {
        display: inline-block !important;
    }


    .custom-select:focus {
        box-shadow: none !important;
        border-color: none !important;
    }

    #addSoftwarebtn td {
        border-top: none !important;
    }

    #ApplicationCategoryBody select {
        background-color: #fff !important;
    }

    #loader {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        z-index: 10000;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        margin: 0;
    }
</style>
<style>
    /*New design css start here*/
    .astColor {
        color: red;
    }

    .astColor1 {
        color: red;
    }

    .textTrans {
        width: 100%;
        max-width: 99%;
        border-radius: 5px;
        margin-right: 0px;
        border: 1px solid !important;
    }

    .empDetailsBg {
        background-color: #fffbef;
    }

    #accordion select {
        color: #000;
        width: 100% !important;
        max-width: 97%;
        height: 45px;
        background-color: #FFFFFF;
        border: 1px solid #BFBFBF;
        box-sizing: border-box;
        border-radius: 5px;
        background-image: url(data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>);
        background-repeat: no-repeat;
        background-position: right .75rem center;
        background-size: 16px 12px;
    }

    #accordion input[type='text'] {
        width: 100% !important;
        max-width: 97%;
        height: 45px;
        /*background-color: #F8F8F8;*/
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
    }

    #accordion input[type='number'] {
        width: 100% !important;
        max-width: 97%;
        height: 45px;
        /*background-color: #F8F8F8;*/
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
    }

    #accordion input[type='date'] {
        width: 100% !important;
        max-width: 97%;
        height: 45px;
        background-color: #FFFFFF;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
    }

    #accordion label {
        font-size: 16px;
        line-height: 22px;
        font-weight: 600;
        color: #201F1F;
    }

    #accordion table tr td {
        border: none !important;
        font-size: 16px;
        line-height: 19px;
        color: #201F1F;
        background-color: white;
        padding: 10px 0;
    }

    #accordion label {
        display: block;
    }

    #accordion .card-header {
        background: rgb(4 59 100) !important;
        border-radius: 5px 5px 0px 0px;
        position: relative;
        margin-top: 15px;
    }

        #accordion .card-header.collapsed h5:after {
            content: '+';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

        #accordion .card-header h5:after {
            content: '-';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }

    #accordion h5 button {
        font-size: 18px;
        line-height: 22px;
        /* identical to box height */
        padding-left: 0px;
        display: flex;
        align-items: center;
        text-transform: uppercase;
        /* Text_white */

        color: #FFFFFF;
    }

        #accordion h5 button:focus {
            box-shadow: none;
        }

    .empDetailsFields label {
        display: block !important;
        margin-bottom: 0px;
    }

    .empDetailsFields .row label {
        display: block;
        margin-bottom: 0px;
    }

        .empDetailsFields .row label:nth-child(1) {
            font-style: normal;
            font-weight: normal !important;
            font-size: 12px;
            line-height: 18px;
            color: #A9A9A9 !important;
        }

        .empDetailsFields .row label:nth-child(2) {
            font-style: normal;
            font-weight: normal;
            font-size: 18px;
            line-height: 22px;
            color: #201F1F;
        }

    .firstLastName {
        font-style: normal;
        font-weight: normal;
        font-size: 20px;
        line-height: 24px;
        /* identical to box height */

        display: flex;
        align-items: center;
        color: #201F1F;
    }

    .submit-btn {
        background: #3D3D3D;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #FFFFFF;
        border-color: transparent !important;
    }

    .cancl-btn {
        background: #FAE99B;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        border-color: transparent !important;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #212221;
        margin-left: 10px;
    }




    .card-footer {
        display: flex;
        background-color: transparent !important;
    }

    .photo-form {
        width: 100%;
    }

    .ui-front {
        z-index: 9999999 !important;
    }
    /*Animation CSS Starts*/

    div.input-block {
        position: relative;
    }

        div.input-block input {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 188px;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block textarea {
            font-weight: 500;
            font-size: 1rem;
            color: #495055;
            width: 100%;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            background-color: #fff;
            border: 1px solid #D9D9D9;
            outline: none;
        }

        div.input-block span.placeholder {
            position: absolute;
            margin: 17px 0;
            padding: 0 4px;
            font-family: Roboto, sans-serif;
            color: #6c757d;
            display: flex;
            align-items: center;
            font-size: 1rem;
            top: -6px;
            left: 15px;
            transition: all 0.2s;
            transform-origin: 0% 0%;
            background: none;
            pointer-events: none;
            z-index: 1;
        }

        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: #fff !important;
        }

        div.input-block textarea:valid + span.placeholder,
        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px) !important;
            background: #fff !important;
        }

        div.input-block input:valid + span.placeholder,
        div.input-block input:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }


        div.input-block input.spanUpperSide + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }

        div.input-block input:read-only + span.placeholder,
        div.input-block input:read-only + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background: rgb(219,238,213);
        }


    div.inputSelect span.placeholder {
        position: absolute;
        margin: 17px 0;
        padding: 0 4px;
        font-family: Roboto, sans-serif;
        color: #000;
        display: flex;
        align-items: center;
        font-size: 1rem;
        top: -6px;
        left: 15px;
        transition: all 0.2s;
        transform-origin: 0% 0%;
        background: none;
        pointer-events: none;
        z-index: 1;
    }

    div.inputSelect select:focus + span.placeholder {
        transform: scale(0.8) translateY(-30px);
        background: rgb(219,238,213);
        z-index: 9;
    }

    div.inputSelect select:not([value=""]):valid + span.placeholder {
        transition: all 0.2s;
        transform-origin: 0% 0%;
    }



    div.input-block input:focus + span.placeholder {
        color: #284B63;
    }

    .breadcrumb {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding: 1rem 1rem 0;
        margin-bottom: 0;
        list-style: none;
        background-color: #FFFFFF;
        border-radius: .25rem;
    }

    body.nav-sm .container.body .left_col {
        width: 63px;
        padding: 0;
        position: fixed;
        height: 100%;
        z-index: 8;
    }

    .card {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0px;
        border-radius: .25rem;
    }

    .dropdown-toggle::after {
        display: none;
        width: 0;
        height: 0;
        margin-left: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
    }

    input.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213);
    }

    inputSelect.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213) !important;
    }

    select.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background-color: rgb(219,238,213) !important;
        z-index: 9;
    }

    textarea.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }

    @@media only screen and (min-width: 992px) {
        div.input-block span.placeholder {
            font-size: 15px;
        }

        div.inputSelect span.placeholder {
            font-size: 14px;
        }
    }

    #add_to_me {
        text-align: left !important;
    }

    .TransView {
        background-color: white !important;
    }

    .mt06rem {
        margin-top: 0.6rem;
    }

    .chkPosition {
        position: relative;
        left: -11px;
    }

    .pl06rem {
        padding-left: 0.6rem;
    }

    .mlSpaceChk {
        margin-left: 2.1rem;
    }

    .leftSpace {
        left: 29px !important;
    }

    .showBorder {
        border: 1px solid #dee2e6;
    }

    .forLblWidth {
        width: 20.5%;
    }

    .forTdLbl {
        width: 14.5%;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        margin: 0;
    }
</style>
<div class="container">
    <div class="right_col bg-transparent" role="main">
        <div class="main_container">
            <form id="MMRForm" method="post">
                <div>
                    <div class="breadcrumb-container">
                        <div>
                            @if (IsEditMode || IsViewMode)
                            {
                                <div>
                                    <input type="hidden" id="FormId" name="FormId" value="@(FormId)" />
                                    <input type="hidden" id="FormSrId" name="FormSrId" value="@(MMRF.Id)" />
                                    <input type="hidden" id="AppRowId" name="AppRowId" value="@(AppRowId)" />
                                    @*<input type="hidden" name="ApplicationCategoryDataCurr" id="ApplicationCategoryDataCurr" value="@(URCF.ApplicationCategoryData.Count)" />*@
                                </div>
                            }
                            <ol class="breadcrumb">
                                <li>
                                    <a href="/Dashboard?formName=NGCF">
                                        Dashboard
                                    </a>
                                </li>
                                <li>
                                    MMR Transfer/Handover Form
                                </li>
                            </ol>
                        </div>
                    </div>

                    <div class="row breadcrumb-container table-bordered  mr-1 ml-1" style="background-color: rgb(219,238,213) !important; ">
                        <div class="col-md-2 col-lg-2">
                            <span class="placeholder">Date : @(IsViewMode || IsEditMode ? (Convert.ToDateTime(appList.FirstOrDefault().FormId.CreatedDate).ToShortDateString()) : DateTime.Now.ToShortDateString())</span>
                        </div>
                        <div class="col-md-8 col-lg-8 mt-2 mb-1 form-heading" style="text-align:center; margin-top:5px">
                            <span>MMR Transfer/Handover Form</span>
                        </div>
                        <div class="col-md-2 col-lg-2">
                            @if (IsViewMode || IsEditMode)
                            {
                                <span class="placeholder white_space_nowrap"> Form Id : @(IsViewMode || IsEditMode ? ("MMRF" + FormId ?? "") : "" )</span>
                            }
                        </div>
                    </div>

                </div>

                <div class="heading d-none" id="headingErr">
                    <h1 id="" class="info-header">Following fields are mandatory. Please fill in information for<br></h1>
                    <div id="add_to_me" class="header-list" style="color:red;"></div>
                </div>
                <!-- ACCORDIAN STRUCTURE START HERE-->
                @* Submitter Section *@
                @{
                    Html.RenderPartial("_NewSubmitterDetailsWithModel", (ViewBag as object));
                }

                @* Applicant Section *@
                @{
                    Html.RenderPartial("_NewApplicantDetailsWithModel", (ViewBag as object));
                }

                <div id="accordion">
                    <div class="card">
                        <div class="card-header collapsed" id="headingThree" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                    <img src="~/assets/img/transactionIcon.svg" width="24" height="24" class="mr-2" /><span class="d-inline-block mt-1">Transaction Fields</span>
                                </button>
                            </h5>
                        </div>
                        <div id="collapseThree" class="collapse show" aria-labelledby="headingThree" style="">
                            <div class="card-body">

                                <div class="row">
                                    <div class="row w-100">
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                MMR Transfer Department<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">
                                            <input type="text" class="w-100 txtDisable" name="ExistingDepartment" id="txtExisting" required value="@(MMRF?.ExistingDepartment)" @(disabled)>
                                            <span class="placeholder">Existing<span class="astColor">*</span></span>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block" style="margin-left:15px;">
                                            <input type="text" class="w-100 txtDisable" name="NewDepartment" id="txtNew" required value="@(MMRF?.NewDepartment)" @(disabled)>
                                            <span class="placeholder">New<span class="astColor">*</span></span>
                                        </div>
                                    </div>
                                </div><br>

                                <div class="row">
                                    <div class="row w-100">
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                Future Owner<span class="astColor">*</span>
                                            </label>
                                        </div>

                                        <div class="col-md-3 col-lg-3 col-12 input-block autocomplete-div">
                                            <input type="hidden" id="hiddentxtFutureOwner" name="hiddentxtFutureOwner" />
                                            <input type="hidden" id="hiddentxtEmail" name="hiddentxtEmail" />
                                            @*<input type="text" class="w-100 ui-autocomplete-input" name="FutureOwner" id="txtFutureOwner" onkeypress="alphaOnly(event)" value="@(MMRF?.FutureOwner)" @(disabled)>*@

                                            <input class="w-20 spanUpperSide ui-autocomplete-input" type="text" name="FutureOwner" id="txtFutureOwner" autocomplete="off" value="@(MMRF?.FutureOwner)" @(disabled)>
                                        </div>
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                MMR Identification<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">
                                            <input type="text" class="w-100 txtDisable" name="MMRIdentification" id="txtMMRId" required value="@(MMRF?.MMRIdentification)" @(disabled)>
                                            <input type="text" class="w-100 txtDisable" name="FutureOwnerEmail" id="FutureOwnerEmail" style="display:none" required value="@(MMRF?.FutureOwnerEmail)" @(disabled)>
                                        </div>
                                    </div>
                                </div><br>

                                <div class="row">
                                    <div class="row w-100">
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                MMR Description<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">
                                            <input type="text" class="w-100 txtDisable" name="MMRDescription" id="txtMMRDes" required value="@(MMRF?.MMRDescription)" @(disabled)>
                                        </div>
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                Handover Date<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">
                                            <input type="date" class="w-40 txtDisable" name="HandoverDate" id="txtHandoverDate" value="@(MMRF?.HandoverDate?.ToString("yyyy-MM-dd"))">
                                        </div>
                                    </div>
                                </div><br>

                                <div class="row">
                                    <div class="row w-100">
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                MMR Removed by existing user from ERUS<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">
                                            <input type="datetime-local" class="w-100 txtDisable" name="MMREpus" id="txtMMREpus" required value="@(MMRF?.MMREpus.ToString("yyyy-MM-ddThh:mm:ss"))" @(disabled)>
                                        </div>
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                Transfer Type<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">

                                            <table class="table mainTbl form-table-container-2">
                                                <tbody>
                                                    <tr>
                                                        <td class="w18">
                                                            <label class="checkbox-container f-600">
                                                                Permanent
                                                                <input type="radio" class="inpDisable" name="chkTransferType" id="chkPer" value="Permanent" onclick="getActionType()">
                                                                <span class="checkmark"></span>
                                                            </label>
                                                        </td>
                                                        <td class="align w-20">
                                                            <label class="checkbox-container f-600">
                                                                Temporary
                                                                <input type="radio" class="inpDisable" name="chkTransferType" id="chkTem" value="Temporary" onclick="getActionType()">
                                                                <span class="checkmark"></span>
                                                            </label>
                                                        </td>
                                                        <td>
                                                            <input type="hidden" name="TransferType" id="chkTYActionType" value="">
                                                        </td>
                                                    </tr>


                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div><br>

                                <div class="row temptransfer" style="display:none">
                                    <div class="row w-100">
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                Transfer From Date<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">
                                            <input type="date" class="w-40 txtDisable" name="TransferFromDate" id="txtTransferFromDate" onchange="DateValidation()" value="@(MMRF?.TransferFromDate?.ToString("yyyy-MM-dd"))">
                                        </div>
                                        <div class="form-group col-md-3 d-flex align-items-center col-lg-3 col-12">
                                            <label class="f-600" style="margin-left:15px; position: relative; top:10px;">
                                                Transfer To Date<span class="astColor">*</span>
                                            </label>
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-12 input-block">
                                            <input type="date" class="w-40 txtDisable" name="TransferToDate" id="txtTransferToDate" onchange="DateValidation()" value="@(MMRF?.TransferToDate?.ToString("yyyy-MM-dd"))">
                                        </div>
                                    </div>
                                </div>
                                <div class="row w-100">
                                    <div class="w-100">
                                        <div class="form-group col-md-12 input-block col-lg-12 col-12">
                                            @*<textarea class="w-100 txtDisable ui-autocomplete-input" name="other_details" id="" onchange="checkSelect(&#39;other_details&#39;)"></textarea>*@
                                            <textarea cols="90" rows="3" name="Details" id="txtDetails" maxlength="500" required></textarea>
                                            <span class="placeholder">Other details<span class="astColor">*</span></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>



                @* Approval Section And Action Section *@
                @if (IsViewMode || IsEditMode)
                {
                    //Approval Section
                    <div id="accordion">
                        <div class="card">
                            <div class="card-header collapsed" id="headingFour" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour">
                                        <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" />Approval Tracking
                                    </button>
                                </h5>
                            </div>
                            <div id="collapseFour" class="collapse" aria-labelledby="headingFour">
                                <div class="card-body">
                                    <div class="form-row">
                                        <div class="col-12">
                                            <table class="table w-100 td-border showBorder">
                                                <thead>
                                                    <tr>
                                                        <th>Name</th>
                                                        <th>Role</th>
                                                        <th style="display: @(appList.Any(x => !string.IsNullOrEmpty(x.ExtraDetails)) ? " " : " none")">Content</th>
                                                        <th>Processed on</th>
                                                        <th>Status</th>
                                                        <th class="text-center">Comments</th>
                                                        <th class="text-center">Approval Level</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (IsViewMode || IsEditMode)
                                                    {
                                                        Html.RenderPartial("_ApprovalTracking", appList);
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="accordion">
                        <div class="card">
                            <div class="card-header collapsed" id="headingFive" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive">
                                        <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" /> Action
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseFive" class="collapse show" aria-labelledby="headingFive">
                                <div class="card-body actionTab">
                                    @{
                                        <div class="form-row">
                                            <div class="form-group col-md-4 col-lg-4 col-12 input-block StartTime">
                                                <input type="datetime-local" class="w-40 txtDisable" name="NewOwnEPUS" id="txtNewOwnEPUS" @*value="@(MMRF?.NewOwnEPUS.ToString("yyyy-MM-ddThh:mm:ss"))"*@>
                                                <span class="placeholder" style="background-color: #fff !important;">New Owner EPUS<span class="astColor"></span></span>
                                            </div>
                                           
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }

                @* Buttons *@
                @if (IsNewMode)
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn" id="btnSubmit">
                            Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }
                else if (IsEditMode)
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn" id="btnSubmit">
                            Re-Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }

            </form>

            <div>
                <p class="text-left f-600">SF_II_024</p>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="successModel" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header modelHeader">
                <span class="modal-title modalMsgTitle" id="modalTitle"></span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label id="modalBody" class="lableMsg">  </label>
                <input type="hidden" id="tab" value="0" />
            </div>
            <div class="modal-footer">
                <button type="button" class="submitBomBtn publishBtn" id="modalOkButton" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<script>
        var spinner = $('#loader');
        var currentUserDesgn = @Html.Raw(Json.Encode(CurrentUserDesgn));
        var IsNew = @Html.Raw(Json.Encode(IsNew));
        var IsEdit = @Html.Raw(Json.Encode(IsEdit));
        var IsNewMode = @Html.Raw(Json.Encode(IsNewMode));
        var IsEditMode = @Html.Raw(Json.Encode(IsEditMode));
        var IsViewMode = @Html.Raw(Json.Encode(IsViewMode));
        var MMRF = @Html.Raw(Json.Encode(MMRF));
        var appRowId = @Html.Raw(Json.Encode(AppRowId));
        var approvalType =@Html.Raw(Json.Encode(ApprovalType));
        var SecurityDesgnString = @Html.Raw(Json.Encode(SecurityDesgnString));
        var FlagRedirect = @Html.Raw(Json.Encode(FlagRedirect));
        pageLoad();
        var errorCount = 0;
        var errors = "";
        pageLoad();
    var globalVariable;
    $(document).ready(function () {
        @*if (@CurrentUserLevel > 2) {

                 $("#txtNewOwnEPUS").val('@(MMRF?.NewOwnEPUS.ToString("yyyy-MM-ddThh:mm:ss"))');
             }*@
     
        if ("@(MMRF?.NewOwnEPUS.ToString("yyyy-MM-ddThh:mm:ss"))" != "0001-01-01T05:30:00") {
             $("#txtNewOwnEPUS").val('@(MMRF?.NewOwnEPUS.ToString("yyyy-MM-ddThh:mm:ss"))');
        }
       
        //document.getElementsByName("NewOwnEPUS")[0].min = today;
        $(function () {
            var dtToday = new Date();

            var month = dtToday.getMonth() + 1;
            var day = dtToday.getDate();
            var year = dtToday.getFullYear();
            if (month < 10)
                month = '0' + month.toString();
            if (day < 10)
                day = '0' + day.toString();

            var maxDate = year + '-' + month + '-' + day;
            //alert(maxDate);
            $('#txtTransferFromDate').attr('min', maxDate);
            $('#txtTransferToDate').attr('min', maxDate);
        });
        if (IsNewMode) {
            var d = new Date();

            var month = d.getMonth() + 1;
            var day = d.getDate();

            var output = d.getFullYear() + '-' + (('' + month).length < 2 ? '0' : '') + month + '-' + (('' + day).length < 2 ? '0' : '') + day;

            $("#txtHandoverDate").val(output);
            $("#txtHandoverDate").prop("disabled", "disabled");
            $('input[id="chkPer"]').prop('checked', true);
        }

        if (IsViewMode) {

            if (MMRF.TransferType == "Temporary") {
                $('input[id="chkTem"]').prop('checked', true);
                $('input[id="chkTem"]').prop("disabled", true);
                $('input[id="chkPer"]').prop("disabled", true);
                $("#chkTYActionType").val('Temporary');
                $(".temptransfer").show();
            } else {
                $('input[id="chkPer"]').prop('checked', true);
                $('input[id="chkPer"]').prop("disabled", true);
                $('input[id="chkTem"]').prop("disabled", true);
                $("#chkTYActionType").val('Permanent');
                $(".temptransfer").hide();
            }
             if (@CurrentUserLevel != 2) {
                 $("#txtNewOwnEPUS").prop("disabled", "disabled");
             }
            $("#txtDetails").val(MMRF.Details)
            $("#txtDetails").prop("disabled", "disabled");
            $("#txtHandoverDate").prop("disabled", "disabled");
            $("#txtTransferFromDate").prop("disabled", "disabled");
            $("#txtTransferToDate").prop("disabled", "disabled");
            $("#FutureOwnerEmail").val(MMRF.FutureOwnerEmail);
        }
        if (!IsViewMode) {

            if (IsEditMode) {

                getActionType();
                if (MMRF.TransferType == "Temporary") {
                    $('input[id="chkTem"]').prop('checked', true);
                    $("#chkTYActionType").val('Temporary');
                    $(".temptransfer").show();
                } else {
                    $('input[id="chkPer"]').prop('checked', true);
                    $("#chkTYActionType").val('Permanent');
                    $(".temptransfer").hide();
                }
                $("#txtDetails").val(MMRF.Details)
                $("#FutureOwnerEmail").val(MMRF.FutureOwnerEmail);
                $("#txtHandoverDate").prop("disabled", "disabled");
                if (@CurrentUserLevel != 2) {
                 $("#txtNewOwnEPUS").prop("disabled", "disabled");
             }
            }
            if (IsNewMode) {

                $("#externalCompany").hide();
                $(".inpIsNewDisable").attr("readonly", "readonly");
            }
        }
        var today = new Date().toISOString().slice(0, 16);

        document.getElementsByName("NewOwnEPUS")[0].min = today;
    });

    function getActionType() {

        var z = 0;
        if (!IsViewMode) {
            if ($("#chkTem").prop("checked") == true) {
                console.log("Internal");
                $('input[id="chkTem"]').prop('disabled', true);
                $('input[id="chkPer"]').prop('checked', false).change();
                $('input[id="chkPer"]').prop("disabled", false);
                $("#chkTYActionType").val('Temporary');
                $(".temptransfer").show();
            }

            if ($("#chkPer").prop("checked") == true) {
                z = 1;
                $("#chkTYActionType").val('Permanent');
                $('input[id="chkPer"]').prop('disabled', true);
                $('input[id="chkTem"]').prop("checked", false).change();
                $('input[id="chkTem"]').prop("disabled", false);
                $(".temptransfer").hide();
            }
        }

    }

        function pageLoad() {

        spinner.hide();
        $("#headingErr").addClass('d-none');
        $("#rdOnBehalfOptionOthersLabel").text('Blue Collar Employee');
        //if (IsViewMode || IsEditMode) {
        //    $("#txtAddressofConsignee").addClass('spanUpperSide');
        //    $("#txtAddressofReceiver").addClass('spanUpperSide');
        //    $("#txtBusinessNeed").addClass('spanUpperSide');

        //    GetWeightDimension();
        //}
        //else if (IsViewMode) {
        //    $("#divRequestSubmissionFor").addClass('d-none');
        //}
        }

        function allowNumbersOnly(e) {
        var code = (e.which) ? e.which : e.keyCode;
        if (code > 31 && (code < 48 || code > 57)) {
        e.preventDefault();
        }
        }

        function successQMCRModal(txt) {
        //
        $('#modalTitle').html('Success');
        if (txt == "approve") {
        $('#modalBody').html('Form has been approved!');
        }
        else if (txt == "reject") {
        $('#modalBody').html('Form has been rejected!');
        }
        else if (txt == "enquire") {
        $('#modalBody').html('Form has been enquired!');
        }
        else if (txt == "cancelled") {
        $('#modalBody').html('Form has been cancelled!');
        }
        else {
        if (IsEditMode) {
            $('#modalBody').html('Your form with ID: MMRF' + txt + ' has been re-submitted! Kindly use this for future reference');
        }
        else {
            $('#modalBody').html('Your form with ID: MMRF' + txt + ' has been submitted! Kindly use this for future reference');
        }

        }
        FlagRedirect = txt;
        //$("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
        }

        function failureModal(txt) {
        if (txt == null) {
        $('#modalBody').html('Some error occurred!');
        }
        $('#modalTitle').html('Failure');
        $('#modalBody').html(txt);
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
        }

        function permissionModal() {
        $('#modalTitle').html('Failure');
        $('#modalBody').html('No permssion granted since the device is not SAVWIPL owned!');
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
        }

        function requiredModal(text) {
        $('#modalTitle').html('Required!');
        $('#modalBody').html(text);
        $("#modalOkButton").attr('data-dismiss', 'modal');
        $("#successModel").modal('show');
        }

        function validityModal(txt) {
        ////
        if (txt == 'approve') {
        DisplayAlert('error', 'Error', 'Please select the Type of Car');
        }
        else if (txt == 'reject') {
        DisplayAlert('error', 'Warning', 'Please type in the reason for rejecting the form');
        }
        else if (txt == 'enquire') {
        DisplayAlert('error', 'Warning', 'Please type in the reason for enquiring the form');
        }

        }

    $("#btnSubmit").on('click', function (e) {
        $('#loader').show();

        validateSubmitter();
        validateApplicant();
        getActionType();

        var txtExisting = $("#txtExisting").val();
        if (txtExisting == "") {
            errors += "<li id='error" + errorCount + "'>" + "Existing" + "</li>";
           // AddError("txtExisting", '', errorCount);
            errorCount++;
        }

        var txtNew = $("#txtNew").val();
        if (txtNew == "") {
            errors += "<li id='error" + errorCount + "'>" + "New" + "</li>";
          //  AddError("txtNew", '', errorCount);
            errorCount++;
        }


        var FutureOwner = $("#txtFutureOwner").val();
        if (FutureOwner == "") {
            errors += "<li id='error" + errorCount + "'>" + "Future Owner" + "</li>";
           // AddError("FutureOwner", '', errorCount);
            errorCount++;
        }

        var FutureOwnerEmail = $("#FutureOwnerEmail").val();
        if (FutureOwnerEmail == "") {
            errors += "<li id='error" + errorCount + "'>" + "Future Owner" + "</li>";
          //  AddError("FutureOwnerEmail", '', errorCount);
            errorCount++;
        }

        var txtMMRId = $("#txtMMRId").val();
        if (txtMMRId == "") {
            errors += "<li id='error" + errorCount + "'>" + "MMR Identification" + "</li>";
         //   AddError("txtMMRId", '', errorCount);
            errorCount++;
        }

        var txtMMRDes = $("#txtMMRDes").val();
        if (txtMMRDes == "") {
            errors += "<li id='error" + errorCount + "'>" + "MMR Description" + "</li>";
           // AddError("txtMMRDes", '', errorCount);
            errorCount++;
        }

        var txtHandoverDate = $("#txtHandoverDate").val();
        if (txtHandoverDate == "") {
            errors += "<li id='error" + errorCount + "'>" + "Handover Date" + "</li>";
          //  AddError("txtHandoverDate", '', errorCount);
            errorCount++;
        }

        var lblTYActionType = $("#chkTYActionType").val();
        if (lblTYActionType == "") {
            errors += "<li id='error" + errorCount + "'>" + "Transfer Type" + "</li>";
           // AddError("lblTYActionType", '', errorCount);
            errorCount++;
        }

        if (lblTYActionType == "Temporary") {
            var txtTransferFromDate = $("#txtTransferFromDate").val();
            if (txtTransferFromDate == "") {
                errors += "<li id='error" + errorCount + "'>" + "Transfer From Date" + "</li>";
                //  AddError("txtHandoverDate", '', errorCount);
                errorCount++;
            }
            var txtTransferToDate = $("#txtTransferToDate").val();
            if (txtTransferToDate == "") {
                errors += "<li id='error" + errorCount + "'>" + "Transfer To Date" + "</li>";
                //  AddError("txtHandoverDate", '', errorCount);
                errorCount++;
            }
        }

        var txtMMREpus = $("#txtMMREpus").val();
        if (txtMMREpus == "") {
            errors += "<li id='error" + errorCount + "'>" + "MMR Removed by existing user from ERUS" + "</li>";
          //  AddError("txtMMREpus", '', errorCount);
            errorCount++;
        }
        $("#txtNewOwnEPUS").val('');
        
        var txtDetails = document.getElementById("txtDetails").value;
        if (txtDetails == "") {
            errors += "<li id='error" + errorCount + "'>" + "Details" + "</li>";
          //  AddError("txtDetails", '', errorCount);
            errorCount++;
        }


        if (errors.length) {
            $('#loader').hide();
            errors = "<ol id='errorList'>" + errors + "</ol>";
            $("#headingErr").removeClass('d-none');
            document.getElementById("add_to_me").innerHTML = errors;
            errors = "";
            errorCount = 0;
            if (IsEditMode) {
                $("#myModalEdit").scrollTop(0);
                $("#myModalRequest").scrollTop(0);
            }
            else {
                $(window).scrollTop(0);
            }
            return false;
        }
        $("#headingErr").addClass('d-none');
        document.getElementById("add_to_me").innerHTML = '';
        $('#ddEmpDesignation').prop("disabled", false);
        $('#txtOnBehalfdesignation').prop("disabled", false);
        $("#pageLoader").removeClass('invisible');
        $("#btnSubmit").text('Saving');
        $("#btnSubmit").prop("disabled", true);
        $("#btnCancel").prop("disabled", true);
        $("#ddOtherNewEmpDesignation").prop("disabled", false);
        $("input").prop('disabled', false);

        //var form = {

        //}
        var serializedArray = $("#MMRForm").serializeArray();
        //serializedArray.forEach((x, index) => {
        //       if (x.value != "") {
        //           form[x.name] = x.value;
        //       }
        //   });
        console.log(form);
        var form = $("#MMRForm");
        var formData = new FormData(form[0]);
        $.ajax({
            url: '/MMRForm/SaveMMRForm',
            processData: false,
            contentType: false,
            type: 'POST',
            dataType: 'JSON',
            data: formData,
            enctype: 'multipart/form-data',
            success: (function (data) {
                $('#loader').hide();
                if (data.Status == 200) {
                    $("#pageLoader").addClass('invisible');
                    if (IsNew && IsEdit) {
                        $("#btnSubmit").text('Submit');
                    }
                    else {
                        $("#btnSubmit").text('Re-Submit');
                    }
                    $("#btnSubmit").prop("disabled", false);
                    $("#btnCancel").prop("disabled", false);

                    successQMCRModal(data.Message);
                }
                else {
                    failureModal(data.Message);
                    if (IsNew && IsEdit) {
                        $("#btnSubmit").text('Submit');
                    }
                    else {
                        $("#btnSubmit").text('Re-Submit');
                    }
                    $("#pageLoader").addClass('invisible');
                    $("#btnSubmit").prop("disabled", false);
                    $("#btnCancel").prop("disabled", false);
                    console.log("failure");
                }
            }),
            error: (function (data) {
                $('#loader').hide();
                failureModal();
                console.log("error");
                if (IsNew && IsEdit) {
                    $("#btnSubmit").text('Submit');
                }
                else {
                    $("#btnSubmit").text('Re-Submit');
                }
                $("#pageLoader").addClass('invisible');
                $("#btnSubmit").prop("disabled", false);
                $("#btnCancel").prop("disabled", false);
            })
        })
        $("#tab").val(2);

    });

        $("#btnCancel").on('click', function (e) {
        window.location = "../Dashboard";
        });


    function saveResponse(text) {
       
        var status = '', comment = '';
        comment = $("#comment-" + text).val();
        switch (text) {
        case 'approve': {
        status = 'Approved';
        if (@CurrentUserLevel == "2") {
            addRemainingData(status, appRowId, comment, approvalType, text);

        }
        else {
        FormApproval(status, appRowId, comment, approvalType, text);
        }
        break;
        }
        case 'reject': {
        status = 'Rejected';
        if (comment == '') {
        validityModal(text);
        return;
        }
        else {
        FormApproval(status, appRowId, comment, approvalType, text);
        }
        break;
        }
        case 'enquire': {
        status = 'Enquired';
        if (comment == '') {
        validityModal(text);
        return;
        }
        else {
        FormApproval(status, appRowId, comment, approvalType, text);
        }
        break;
        }
        }

        $("#tab").val(1);
        }

        function FormApproval(status, appRowId, comment, approvalType, text) {
        //
        spinner.show();
        $.ajax({
        url: '/List/SaveResponse',
        type: 'POST',
        data: { response: status, appRowId: appRowId, comment: comment, approvalType: approvalType },
        dataType: 'JSON',
        success: (function (data) {
        if (data.Result == 1) {
        successQMCRModal(text);
        spinner.hide();
        //setTimeout(FilterMyTasks, 5000);
        spinner.hide();
        }
        else {
        failureModal();
        spinner.hide();
        }
        }),
        error: (function (data) {
        failureModal();
        spinner.hide();
        })
        })

        $("#tab").val(1);
        }

        $('#myModal').modal({ backdrop: 'static', keyboard: false })

        $('#successModel').on('hidden.bs.modal', function () {
        ////
        var tab = $("#tab").val();
        console.log(tab);
        if (tab == 1) {
        GetMyTaskTab();
        }
        else if (tab == 2) {
        window.location = "../Dashboard?tab=" + tab;
        }
        })



        $('input:checkbox[id="chkWeight"]').click(function () {
        if ($(this).prop("checked") == true) {
        $('input[id="chkWeight"]').prop('disabled', true);
        $('input[id="chkDimension"]').prop('checked', false);
        $('input[id="chkDimension"]').prop("disabled", false);
        $("#chkWD").val('Weight');

        }
        });

        $('input:checkbox[id="chkDimension"]').click(function () {
        if ($(this).prop("checked") == true) {
        $('input[id="chkDimension"]').prop('disabled', true);
        $('input[id="chkWeight"]').prop("checked", false);
        $('input[id="chkWeight"]').prop("disabled", false);
        $("#chkWD").val('Dimension');
        }
        });


    function allowAlphaNumericSpace(thisInput) {
        var arr = thisInput.value.split('');

        if (arr[0] === ".") {
            thisInput.value = "";
        }

        //thisInput.value = thisInput.value.split(/[^e]/).join('');
    }

    function addRemainingData(status, appRowId, comment, approvalType, text) {
        var StartTime = $("#txtNewOwnEPUS").val();
        if (StartTime == "") {
            errors += "<li id='error" + errorCount + "'>" + "New Own EPUS" + "</li>";
            //AddError("txtNewOwnEPUS", '', errorCount);
            errorCount++;
            //alert("")
        }

        if (errors.length) {
            errors = "<ol id='errorList'>" + errors + "</ol>";
            $("#headingErr").removeClass('d-none');
            document.getElementById("add_to_me").innerHTML = errors;
            errors = "";
            errorCount = 0;
            if (IsEditMode) {
                $("#myModalEdit").scrollTop(0);
                $("#myModalRequest").scrollTop(0);
            }
            else {
                $(window).scrollTop(0);
            }
            return false;
        }
        var form = $("#MMRForm");
        var formData = new FormData(form[0]);
        $.ajax({
            url: '/MMRForm/UpdateData',
            processData: false,
            contentType: false,
            type: 'POST',
            dataType: 'JSON',
            data: formData,
            enctype: 'multipart/form-data',
            success: (function (data) {
                if (data == 1) {
                    FormApproval(status, appRowId, comment, approvalType, text);
                }
                else {
                    failureModal(data.Message);

                    console.log("failure");
                }
            }),
            error: (function (data) {
                failureModal();


            })
        })

    }

    $("#txtFutureOwner").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "/List/GetEmployeeDetails",
                dataType: "json",
                cache: false,
                async: false,
                data: {
                    searchText: $("#txtFutureOwner").val()
                },

                success: function (data) {

                      data = data.filter(function (e) {
                        return e.Email !== "@user.Email";
                    });
                    response($.map(data, function (item) {
                        console.log(data, 'data');
                        return { label: item.FirstName, value: item.FullName, raw: item };
                    }));
                },
                 error: function (response) {
                    swal.fire({
                        title: "",
                        text: "Something went wrong, Kindly contact IT team.",
                        icon: "warning",
                    });
                },
                failure: function (response) {
                    swal.fire({
                        title: "",
                        text: "Something went wrong, Kindly contact IT team.",
                        icon: "warning",
                    });
                }
            });


        },
        search: function (event, ui) {
            var value = $("#txtFutureOwner").val();
            // If less than three chars, cancel the search event
            if (value.length < 4) {
                event.preventDefault();
            }
        },
        min_length: 4,
        change: function (event, ui) {
            if (!ui.item) {
                $(this).val('');
            }
        },
        delay: 0,
        select: function (event, ui) {
            var empOtherDetails = ui.item['raw'];
            $("#FutureOwnerEmail").val(empOtherDetails.Email)
            //Get the other details like Cost Center Code, Employee Number from DB.
            if (!empOtherDetails.Email) {
                document.getElementById('txtFutureOwner').value = '';
                DisplayAlert('success', 'Info', 'Please select a user with valid Email', 4000);
                event.preventDefault();
                return;
            }

        }

    });


    function DateValidation() {
        var FromDate = document.getElementById("txtTransferFromDate").value;
        var ToDate = document.getElementById("txtTransferToDate").value;
        var date1 = new Date(FromDate);
        var date2 = new Date(ToDate);
        var Today = new Date();

        if (date1 != "" && date2 != "") {
            if (date1 >= date2) {
                document.getElementById('txtTransferToDate').style.borderColor = "red";
                alert('Please enter valid Start Time and End Time');
                //Swal.fire({
                //    title: 'Error',
                //    text: "To Date should not be less than from date ",
                //    icon: 'error'
                //})
                $("#txtTransferToDate").val('');
                return false;

            } else {
                document.getElementById('txtTransferToDate').style.borderColor = "Gainsboro";
            }
        }

    }



</script>
