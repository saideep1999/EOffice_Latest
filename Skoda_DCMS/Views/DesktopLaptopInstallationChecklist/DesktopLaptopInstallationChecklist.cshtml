@{
    ViewBag.Title = "DesktopLaptopCheckListForm";
    int FormId = 0, AppRowId = 0, ApprovalType = 0; 
    int FormSrId = 0;
    bool IsNewMode = true, IsEditMode = false, IsViewMode = false;
    var currentUser = (Skoda_DCMS.Models.UserData)HttpContext.Current.Session["UserData"];
    List<Skoda_DCMS.Models.ApprovalDataModel> appList = new List<Skoda_DCMS.Models.ApprovalDataModel>();
    string disabled = "", chkboxDisabled = "";
    Skoda_DCMS.Models.DesktopLaptopInstallationChecklistModel DLIC = null;
    if (ViewBag != null && !ViewBag.IsNewMode)
    {
        IsNewMode = ViewBag.IsNewMode;
        IsEditMode = ViewBag.IsEditMode;
        IsViewMode = ViewBag.IsViewMode;
        disabled = IsViewMode ? "readonly" : "";
        chkboxDisabled = IsViewMode ? "disabled" : "";
        DLIC = ViewBag.Model.one[0] as Skoda_DCMS.Models.DesktopLaptopInstallationChecklistModel;
        FormId = ViewBag.FormId;
        AppRowId = ViewBag.AppRowId;
        appList = ViewBag.Model?.three as List<Skoda_DCMS.Models.ApprovalDataModel>;
        ApprovalType = ViewBag.ApprovalType != null ? (int)ViewBag.ApprovalType : 0;
        if (IsViewMode)
        {
            var Ap = appList?.Where(x =>
                x.ApproverUserName.ToLower() == currentUser.UserName.ToLower()
                && x.ApproverStatus.ToLower() == "pending"
            ).FirstOrDefault();
        }
    }
}

<style>
    .showBorder {
        border: 1px solid #dee2e6;
    }
    .f-600 {
        font-weight: 400 !important;
        /*color: #A9A9A9 !important;*/
    }
    .new-radio {
        margin-top: 8px;
    }
    .exisiting-radio {

        margin-left: 0px;
    }

    .textTrans {
        width: 100%;
        max-width: 100%;
        margin-right: 0px;
        border: 1px solid !important;
    }
    .form-row {
        display: -ms-flexbox;
        display: block;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        margin-right: -5px;
        margin-left: -5px;
    }
    .empDetailsBg {
        background-color: #fffbef;
    }
        /*.empDetailsBg .spanUpperSide {
            background-color: #fffbef !important;
        }*/
    #accordion select {
        width: 100% !important;
        height: 45px;
        background-color: #fff;
        border: 1px solid #BFBFBF;
        box-sizing: border-box;
        border-radius: 5px;
        background-image: url(data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>);
        background-repeat: no-repeat;
        background-position: right .75rem center;
        background-size: 16px 12px;
    }
    #accordion input[type='text'] {
        width: 100% !important;
        height: 45px;
        background-color: #fff;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
        padding-left: 7px !important;
    }
    #accordion input[type='date'] {
        width: 100% !important;

        height: 45px;
        background-color: #F8F8F8;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
        padding-left: 10px;
    }
    #accordion label {
        font-size: 16px;
        line-height: 22px;
        font-weight: 600;
        color: #201F1F;
    }
    #accordion table tr td {
        border: none;
        font-size: 16px;
        line-height: 19px;
        color: #201F1F;
    }
    #accordion label {
        display: block;
    }
    #accordion .card-header {
        background: rgb(4 59 100) !important;
        border-radius: 5px 5px 0px 0px;
        position: relative;
        margin-bottom: 15px;
    }
        #accordion .card-header.collapsed h5:after {
            content: '+';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }
        #accordion .card-header h5:after {
            content: '-';
            position: absolute;
            right: 22px;
            top: 17px;
            font-size: 20px;
            font-weight: 600;
            color: #fff;
        }
    #accordion h5 button {
        font-size: 18px;
        line-height: 22px;
        /* identical to box height */
        padding-left: 0px;
        display: flex;
        align-items: center;
        text-transform: uppercase;
        /* Text_white */
        color: #FFFFFF;
    }
        #accordion h5 button:focus {
            box-shadow: none;
        }
    .empDetailsFields label {
        display: block !important;
        margin-bottom: 0px;
    }
    .empDetailsFields .row label {
        display: block;
        margin-bottom: 0px;
    }
        .empDetailsFields .row label:nth-child(1) {
            font-style: normal;
            font-weight: normal !important;
            font-size: 12px;
            line-height: 18px;
            color: #A9A9A9 !important;
        }
        .empDetailsFields .row label:nth-child(2) {
            font-style: normal;
            font-weight: normal;
            font-size: 18px;
            line-height: 22px;
            color: #201F1F;
        }
    .firstLastName {
        font-style: normal;
        font-weight: normal;
        font-size: 20px;
        line-height: 24px;
        /* identical to box height */
        display: flex;
        align-items: center;
        color: #201F1F;
    }
    .submit-btn {
        background: #3D3D3D;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #FFFFFF;
        border-color: transparent !important;
    }
    .cancl-btn {
        background: #FAE99B;
        border-radius: 5px;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        border-color: transparent !important;
        line-height: 173.7%;
        /* identical to box height, or 28px */
        padding: 0.5rem 2rem;
        display: flex;
        align-items: center;
        text-align: center;
        text-transform: uppercase;
        color: #212221;
        margin-left: 10px;
    }


    .card-footer {
        display: flex;
        background-color: transparent !important;
        /*padding-left: 11.4%;*/
        border: none !important;
        margin-bottom: 20px;
    }
    .photo-form {
        width: 100%;
    }
    .approvalTracking table th {
        font-family: SKODA Next;
        font-style: normal;
        font-weight: 600;
        font-size: 16px;
        line-height: 19px;
        color: #201F1F;
        padding: .75rem 0 !important;
    }
    .approvalTracking table tr td {
        font-family: SKODA Next;
        font-style: normal;
        font-weight: 600;
        font-size: 14px !important;
        line-height: 19px;
        color: #201F1F;
        padding: .75rem 0 !important;
    }
    .actionTab textarea {
        width: 100% !important;
        max-width: 98.7%;
        height: 45px;
        background: #F8F8F8;
        border: 1px solid #BFBFBF !important;
        box-sizing: border-box;
        border-radius: 5px;
        padding-left: 10px;
    }
    .table-middle tr td, .table-middle tr th {
        text-align: center !important;
    }

    .astColor {
        color: red;
    }
    #OtherEmpName #txtOtherEmpname {
        border-radius: 0;
        height: 20%;
        font-size: 12px;
    }
    .ui-front {
        z-index: 9999999 !important;
    }
    .actionTypeWidth {
        width:16.4%;
    }
    .tempWidth {
        width: 20% !important;
    }
    .ownerOfAcc {
        width: 16%;
    }
    /*Animation CSS Starts*/
    div.input-block {
        position: relative;
    }
        div.input-block input {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 188px;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            border: 1px solid #D9D9D9;
            outline: none;
        }
        div.input-block textarea {
            font-weight: 500;
            font-size: 1rem;
            color: #000;
            width: 100%;
            padding: 15px 15px;
            border-bottom-left-radius: 5px !important;
            border-top-left-radius: 5px !important;
            border-bottom-right-radius: 0px !important;
            border-top-right-radius: 0px !important;
            background-color: #fff;
            border: 1px solid #D9D9D9;
            outline: none;
        }
        div.input-block span.placeholder {
            position: absolute;
            margin: 17px 0;
            padding: 0 4px;
            font-family: Roboto, sans-serif;
            color: #6c757d;
            display: flex;
            align-items: center;
            font-size: 1rem;
            top: -6px;
            left: 15px;
            transition: all 0.2s;
            transform-origin: 0% 0%;
            background: none;
            pointer-events: none;
            z-index: 1;
        }
        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px) !important;
            background-color: #fff !important;
        }
        div.input-block textarea:valid + span.placeholder,
        div.input-block textarea:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px) !important;
            background: #fff !important;
        }
      .empDetailsBg  div.input-block input:valid + span.placeholder
         {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }

       .empDetailsBg div.input-block input:focus + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }

       /*div.input-block input:valid + span.placeholder_white, div.input-block input:focus + span.placeholder_white {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(255,255,255) !important;
        }*/


        div.input-block input.spanUpperSide + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }
        div.input-block textarea.spanUpperSide + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background-color: rgb(219,238,213);
        }
        div.input-block input:read-only + span.placeholder,
        div.input-block input:read-only + span.placeholder {
            transform: scale(0.8) translateY(-25px);
            background: rgb(219,238,213);
        }
    div.inputSelect span.placeholder {
        position: absolute;
        margin: 17px 0;
        padding: 0 4px;
        font-family: Roboto, sans-serif;
        color: #000;
        display: flex;
        align-items: center;
        font-size: 1rem;
        top: -6px;
        left: 15px;
        transition: all 0.2s;
        transform-origin: 0% 0%;
        background: none;
        pointer-events: none;
        z-index: 1;
    }
    div.inputSelect select:focus + span.placeholder
   {
        transform: scale(0.8) translateY(-25px);
        background: rgb(219,238,213);
        z-index: 9;
    }
    div.inputSelect select:not([value=""]):valid + span.placeholder {
        transition: all 0.2s;
        transform-origin: 0% 0%;
    }
    div.input-block input:focus + span.placeholder {
        color: #284B63;
    }
    .breadcrumb {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding: 1rem 1rem 0;
        margin-bottom: 0;
        list-style: none;
        background-color: #FFFFFF;
        border-radius: .25rem;
    }
    body.nav-sm .container.body .left_col {
        width: 63px;
        padding: 0;
        position: fixed;
        height: 100%;
        z-index: 8;
    }
    .card {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0px;
        border-radius: .25rem;
    }
    .dropdown-toggle::after {
        display: none;
        width: 0;
        height: 0;
        margin-left: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
    }
    input.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213);
    }
    inputSelect.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213) !important;
    }
    select.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background-color: rgb(219,238,213);
        z-index: 9;
    }
    .empDetailsBg select.spanUpperSide + span.placeholder {
        background-color: rgb(219,238,213) !important;
    }

    textarea.spanUpperSide + span.placeholder {
        transform: scale(0.8) translateY(-25px) !important;
        background: #fff !important;
        z-index: 9;
    }
    @@media only screen and (min-width: 992px) {
        div.input-block span.placeholder {
            font-size: 15px;
        }
        div.inputSelect span.placeholder {
            font-size: 15px;
        }
    }
    .TransView {
        background-color: rgb(255,255,255) !important;
    }
    #accordion table.tblBorders tr td {
        border: 1px solid #dee2e6 !important;
    }
    .sNo {
        text-align: center !important;
    }
    .w18 {
        width: 18.3%;
    }
    .ml06rem {
        margin-left:1.8rem;
    }
    .w16 {
        width: 16.8%;
    }
    .ml06remEdit {
        margin-left: 0.4rem;
    }
    .listCols
         {
  columns: 2;
  -webkit-columns: 2;
  -moz-columns: 2;
  list-style: none;
  padding-left: 12px;
    }
    #loader {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        
        z-index: 10000;
    }

    

</style>



<div class="container right_col bg-transparent" role="main">
    <form id="DLICForm" method="post" action="/DesktopLaptopInstallationChecklist/SaveData">
        <div class="container">
            <div class="breadcrumb-container">
                <div>
                    @if (IsEditMode || IsViewMode)
                    {
                        <div>
                            <input type="hidden" id="FormId" name="FormId" value="@(FormId)" />
                            <input type="hidden" id="AppRowId" name="AppRowId" value="@(AppRowId)" />
                        </div>
                    }
                    <ol class="breadcrumb pl-0">
                        <li>
                            <a href="/Dashboard?formName=DLIC">
                                Dashboard
                            </a>
                        </li>
                        <li class="active"><a href="/Dashboard/GetDepartmentWiseForms?department=IT">IT Department</a></li>
                        <li class="active">Desktop Laptop Checklist Form</li>
                    </ol>
                </div>
            </div>

            <div class="row breadcrumb-container table-bordered  mr-1 ml-1" style="background-color: rgb(219,238,213) !important; ">
                <div class="col-md-2 col-lg-2">
                    <span class="placeholder">Date :  @(IsViewMode || IsEditMode ? (Convert.ToDateTime(appList.FirstOrDefault().FormId.CreatedDate).ToShortDateString()) : DateTime.Now.ToShortDateString())</span>
                </div>
                <div class="col-md-8 col-lg-8 mt-2 mb-1 form-heading" style="text-align:center; margin-top:5px">
                    <span> Desktop Laptop Checklist Form </span>
                </div>
                <div class="col-md-2 col-lg-2">
                    @if (IsViewMode || IsEditMode)
                    {
                        <span class="placeholder"> Form Id : @(IsViewMode || IsEditMode ? ("DLIC" + FormId ?? "") : "" )</span>
                    }
                </div>
            </div>
            <div class="container form-container">
                <div class="pt-4">
                    <table class="w-100 m-auto">
                        <tbody>
                            <tr>
                                <td>

                                    <div class="heading d-none" id="headingErr">
                                        <h1 id="" class="info-header">Following fields are mandatory. Please fill in information for<br></h1>
                                        <div id="add_to_me" class="header-list" style="color:red;"></div>
                                    </div>
                                    <!-- ACCORDIAN STRUCTURE START HERE-->
                                    @* Submitter Section *@
                                    @{
                                        Html.RenderPartial("_NewSubmitterDetailsWithModel", (ViewBag as object));
                                    }

                                    @* Applicant Section *@
                                    @{
                                        Html.RenderPartial("_NewApplicantDetailsWithModel", (ViewBag as object));
                                    }

                                    @* Transaction Fields *@
                                    <div id="accordion">
                                        <div class="card">
                                            <div class="card-header collapsed" id="headingThree" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                                <h5 class="mb-0">
                                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                                        <img src="~/assets/img/transactionIcon.svg" width="24" height="24" class="mr-2">Transaction Fields
                                                    </button>
                                                </h5>
                                            </div>
                                            <div id="collapseThree" class="card-body collapse show" aria-labelledby="headingThree">
                                                <div class="row">
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                                        <input type="text" class="w-100 txtDisable" id="txtTranEmployeeName" name="T_EmployeeName" value="@(DLIC?.T_EmployeeName)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">Employee Name<span class="astColor">*</span></span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                                        <input type="text" class="w-100 txtDisable" id="txtTranEmployeeCode" name="T_EmployeeCode" value="@(DLIC?.T_EmployeeCode)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">Employee Code<span class="astColor">*</span></span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                                        <input type="text" class="w-100 txtDisable" id="txtTranUserId" name="T_UserId" value="@(DLIC?.T_UserId)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">User ID<span class="astColor">*</span></span>
                                                    </div>
                                                    <div class="form-group col-md-3 col-lg-3 col-12 input-block">
                                                        <input type="text" class="w-100 txtDisable" id="txtTranCostCenter" name="T_CostCenter" value="@(DLIC?.T_CostCenter)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">Cost Center<span class="astColor">*</span></span>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="form-group col-md-6 col-lg-6 col-12 input-block">

                                                        <input type="text" class="w-100 txtDisable" id="txtTicketNum" name="TicketNum" value="@(DLIC?.TicketNum)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">Ticket No.<span class="astColor">*</span></span>
                                                    </div>
                                                    <div class="form-group col-md-6 col-lg-6 col-12 input-block">

                                                        <input type="text" class="w-100 txtDisable" id="txtMake" name="Make" value="@(DLIC?.Make)"
                                                               required @(disabled)>
                                                        <span class="placeholder placeholder_white">Make<span class="astColor">*</span></span>
                                                    </div>

                                                    <div class="form-group col-md-4 col-lg-4 col-12 input-block">

                                                        <input type="text" class="w-100 txtDisable" id="txtModal" name="Modal" value="@(DLIC?.Modal)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">Model<span class="astColor">*</span></span>
                                                    </div>

                                                    <div class="form-group col-md-4 col-lg-4 col-12 input-block">

                                                        <input type="text" class="w-100 txtDisable" id="txtSerialNumber" name="SerialNumber" value="@(DLIC?.SerialNumber)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">Serial No.<span class="astColor">*</span></span>
                                                    </div>

                                                    <div class="form-group col-md-4 col-lg-4 col-12 input-block">

                                                        <input type="text" class="w-100 txtDisable" id="txtHostName" name="HostName" value="@(DLIC?.HostName)" required @(disabled)>
                                                        <span class="placeholder placeholder_white">Host Name<span class="astColor">*</span></span>
                                                    </div>

                                                </div>
                                                <div class="row mt-4">
                                                    <div class="col-md-12 col-lg-12 col-12">



                                                        <div class="">
                                                            <ul class="listCols">
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsIDoCompleted">
                                                                        i.Do completed<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsIDoCompleted" @(DLIC?.IsIDoCompleted == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>

                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsBitLockerCompleted">
                                                                        Bitlocker<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsBitLockerCompleted" @(DLIC?.IsBitLockerCompleted == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>

                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsAntivirusUpdated">
                                                                        Antivirus Updates Checked<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsAntivirusUpdated" @(DLIC?.IsAntivirusUpdated == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsProxyConfig">
                                                                        Zscaler/Proxy Configuration
                                                                        <input type="checkbox" class="inpDisable" id="chkIsProxyConfig" @(DLIC?.IsProxyConfig == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsUSBBluetoothDisabled">
                                                                        USB/Bluetooth Disabled<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsUSBBluetoothDisabled" @(DLIC?.IsUSBBluetoothDisabled == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsUSBBluetoothDisabled">
                                                                        User ID Configured
                                                                        <input type="checkbox" class="inpDisable" id="chkIsUserIdConfigured" @(DLIC?.IsUserIdConfigured == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsOutLookConfiguration">
                                                                        Outlook Configuration
                                                                        <input type="checkbox" class="inpDisable" id="chkIsOutLookConfiguration" @(DLIC?.IsOutLookConfiguration == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsFirEyeAgent">
                                                                        FireEye Agent<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsFirEyeAgent" @(DLIC?.IsFirEyeAgent == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>

                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsEncryptedEmailConfiguration">
                                                                        Encrypted email Configuration
                                                                        <input type="checkbox" class="inpDisable" id="chkIsEncryptedEmailConfiguration" @(DLIC?.IsEncryptedEmailConfiguration == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsPKIDigitSignCert">
                                                                        PKI Card &  Digital Signature Setting
                                                                        <input type="checkbox" class="inpDisable" id="chkIsPKIDigitSignCert" @(DLIC?.IsPKIDigitSignCert == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsPrinterConfiguration">
                                                                        Printer Configuration
                                                                        <input type="checkbox" class="inpDisable" id="chkIsPrinterConfiguration" @(DLIC?.IsPrinterConfiguration == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsVPNConfigurationDone">
                                                                        VPN Configuration (Laptop Only)
                                                                        <input type="checkbox" class="inpDisable" id="chkIsVPNConfigurationDone" @(DLIC?.IsVPNConfigurationDone == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsSharedFolderAccessDone">
                                                                        Shared Folder Access
                                                                        <input type="checkbox" class="inpDisable" id="chkIsSharedFolderAccessDone" @(DLIC?.IsSharedFolderAccessDone == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsDataRestored">
                                                                        Data Restored (for Replacement / re-i.do)
                                                                        <input type="checkbox" class="inpDisable" id="chkIsDataRestored" @(DLIC?.IsDataRestored == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>

                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsNessusAgent">
                                                                        Nessus Agent<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsNessusAgent" @(DLIC?.IsNessusAgent == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsClassificationAddInForOffice">
                                                                        @*Classification add-in for Office*@Classification add-in for Office/ Azure Info Protect<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsClassificationAddInForOffice" @(DLIC?.IsClassificationAddInForOffice == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsUsedMachineToBeClean">
                                                                        Used machine to be cleaned
                                                                        <input type="checkbox" class="inpDisable" id="chkIsUsedMachineToBeClean" @(DLIC?.IsUsedMachineToBeClean == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li>
                                                                    <label class="checkbox-container f-600" id="lblIsOneDriveConfiguration">
                                                                        One Drive Configuration<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsOneDriveConfiguration" @(DLIC?.IsOneDriveConfiguration == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li class="d-flex">
                                                                    <label class="checkbox-container mr-0 f-600" id="lblIsLocalApps">
                                                                        Local Apps (Smart sign/ Virtual smart card installation)<span class="astColor">*</span>
                                                                        <input type="checkbox" class="inpDisable" id="chkIsLocalApps" @(DLIC?.IsLocalApps == true ? "checked" : "")
                                                                               @*@(chkboxDisabled)*@ checked disabled />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                @*<li class="d-flex">
                                                                    <label class="checkbox-container mr-0 f-600" id="lblIsLocalApps">
                                                                        Virtual Smart Card Installation + Setup (For VIPs set it up on iPhones too)
                                                                        <input type="checkbox" class="inpDisable" id="chkIsVirtualSmartCard" @(DLIC?.IsVirtualSmartCard == true ? "checked" : "") @(chkboxDisabled) />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>*@
                                                                <li class="d-flex">
                                                                    <label class="checkbox-container mr-0 f-600" id="lblIsLocalApps">
                                                                        I.Agree app installation + setup (VIP users)
                                                                        <input type="checkbox" class="inpDisable" id="chkIsAgreeAppInstallation" @(DLIC?.IsAgreeAppInstallation == true ? "checked" : "") @(chkboxDisabled) />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </li>
                                                                <li class="d-flex">
                                                                    <label class="checkbox-container mr-0 f-600" id="lblIsOthers">
                                                                        <input type="checkbox" class="inpDisable" id="chkIsOthers" @(DLIC?.IsOthers == true ? "checked" : "") @(chkboxDisabled)>
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                    <input type="text" class="w-75 mr-0 txtDisable txtInp" id="txtOthersText" name="OthersText" value="@(DLIC?.OthersText)" @(disabled)>
                                                                </li>
                                                            </ul>
                                                        </div>

                                                        <div class="form-group col-md-12 input-block">
                                                            <textarea maxlength="500" cols="50" rows="3" id="txtBusinessNeed" name="BusinessNeed" required @(disabled)>@(DLIC?.BusinessNeed)</textarea>
                                                            <span class="placeholder placeholder_white">Business Function & Responsibility (Max. 500)<span class="astColor">*</span></span>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                @* Approval Section And Action Section *@
                @if (IsViewMode || IsEditMode)
                {
                    //Approval Section
                    <div id="accordion">
                        <div class="card">
                            <div class="card-header collapsed" id="headingFour" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour">
                                <h5 class="mb-0">
                                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour">
                                        <img src="~/assets/img/approvalTracking.svg" width="24" height="24" class="mr-2" />Approval Tracking
                                    </button>
                                </h5>
                            </div>
                            <div id="collapseFour" class="collapse" aria-labelledby="headingFour">
                                <div class="card-body">
                                    <div class="form-row">
                                        <div class="col-12">
                                            <table class="table w-100 td-border showBorder">
                                                <thead>
                                                    <tr>
                                                        @*<th>Sr. No.</th>*@
                                                        <th>Name</th>
                                                        <th>Role</th>
                                                        <th style="display: @(appList.Any(x => !string.IsNullOrEmpty(x.ExtraDetails)) ? "" : "none")">Content</th>
                                                        <th>Processed on</th>
                                                        <th>Status</th>
                                                        <th class="text-center">Comments</th>
                                                        <th class="text-center">Approval Level</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (IsViewMode || IsEditMode)
                                                    {
                                                        Html.RenderPartial("_ApprovalTracking", appList);
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                }

                @* Buttons *@
                @if (IsNewMode)
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn" id="btnSubmit">
                            Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }
                else if (IsEditMode)
                {
                    <div class="card-footer align-content-center">
                        <button type="button" class="btn btn-primary btn-sm submit-btn" id="btnSubmit">
                            Re-Submit
                        </button>
                        <button type="reset" class="btn btn-danger btn-sm cancl-btn" id="btnCancel">
                            Cancel
                        </button>
                    </div>
                }
            </div>
        </div>
    </form>
</div>

@{
    Html.RenderPartial("_SuccessModel", (ViewBag as object));
}

<script>
    var spinner = $('#loader');
    var IsNewMode = @Html.Raw(Json.Encode(IsNewMode));
    var IsEditMode = @Html.Raw(Json.Encode(IsEditMode));
    var IsViewMode = @Html.Raw(Json.Encode(IsViewMode));
    var DLIC = @Html.Raw(Json.Encode(DLIC));
    var appRowId = @Html.Raw(Json.Encode(AppRowId));
    var formID = @Html.Raw(Json.Encode(FormId));
    var approvalType =@Html.Raw(Json.Encode(ApprovalType));
    var errorCount = 0;
    var errors = "";

    $(document).ready(function () {
        console.log('Before check');
        if ($('#chkIsOthers:checked').prop("checked")) {
            $('#txtOthersText').prop('disabled', false);
        }
        else {
            $('#txtOthersText').prop('disabled', true);
        }
    })

    $("#txtTranEmployeeName").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "/List/GetEmployeeDetails",
                dataType: "json",
                cache: false,
                async: true,
                data: {
                    searchText: $("#txtTranEmployeeName").val()
                },
                success: function (data) {
                    data = data.filter(function (e) {
                        return e.Email !== "@currentUser.Email";
                    });

                    response($.map(data, function (item) {
                        return { label: item.FirstName, value: item.FullName, raw: item };
                    }));
                }
            });
        },
        search: function (event, ui) {
            var value = $("#txtTranEmployeeName").val();
            if (value.length < 4) {
                event.preventDefault();
            }
        },
        min_length: 4,
        change: function (event, ui) {
            if (!ui.item) {
                $(this).val('');
                $('#txtTranEmployeeCode').val('');
                $('#txtTranCostCenter').val('');
                $('#txtTranUserId').val('');
            }
        },
        delay: 0,
        select: function (event, ui) {
            var empOtherDetails = ui.item['raw'];
            if (!empOtherDetails.Email) {
                document.getElementById('txtTranEmployeeName').value = '';
                DisplayAlert('success', 'Info', 'Please select a user with valid Email', 4000);
                event.preventDefault();
                return;
            }
            $.ajax({
                url: "/List/GetExistingEmployeeDetails",
                dataType: "json",
                cache: false,
                async: true,
                data: {
                    otherEmpUserId: empOtherDetails.Email,
                },
                success: function (data) {
                    $('#txtTranEmployeeName').val(data.FullName);
                    data.EmpNumber == 0 || data.EmpNumber == null
                        ? $('#txtTranEmployeeCode').val('').prop("readOnly", false)
                        : $('#txtTranEmployeeCode').val(data.EmpNumber).prop("readOnly", true).change();
                    data.CostCenter == 0 || data.CostCenter == null
                        ? $('#txtTranCostCenter').val('').prop("readOnly", false)
                        : $('#txtTranCostCenter').val(data.CostCenter).prop("readOnly", true).change();
                    data.UserName == " " || data.UserName == null
                        ? $('#txtTranUserId').val('').prop("readOnly", false)
                        : $('#txtTranUserId').val(data.UserName).prop("readOnly", true).change();
                }
            });
        }

    });

    $("#btnSubmit").on('click', function (e) {
        errors = "";
        validateSubmitter();
        validateApplicant();
        var data = '';

        data = $('#txtTranEmployeeName').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Employee Name in Transaction is required" + "</li>";
            AddError("txtTranEmployeeName", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtTranEmployeeName");

        data = $('#txtTranEmployeeCode').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Employee Code in Transaction is required" + "</li>";
            AddError("txtTranEmployeeCode", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtTranEmployeeCode");

        data = $('#txtTranUserId').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "UserId in Transaction is required" + "</li>";
            AddError("txtTranUserId", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtTranUserId");

        data = $('#txtTranCostCenter').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Cost Center in Transaction is required" + "</li>";
            AddError("txtTranCostCenter", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtTranCostCenter");

        data = $('#txtTicketNum').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Ticket Number is required" + "</li>";
            AddError("txtTicketNum", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtTicketNum");

        data = $('#txtMake').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Make is required" + "</li>";
            AddError("txtMake", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtMake");

        data = $('#txtModal').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Model is required" + "</li>";
            AddError("txtModal", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtModal");

        data = $('#txtSerialNumber').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Serial Number is required" + "</li>";
            AddError("txtSerialNumber", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtSerialNumber");

        data = $('#txtHostName').val();
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Host Name is required" + "</li>";
            AddError("txtHostName", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtHostName");

        var chkRequiredFieldArray = [
            'chkIsIDoCompleted', 'chkIsBitLockerCompleted', 'chkIsAntivirusUpdated',
            'chkIsUSBBluetoothDisabled', 'chkIsFirEyeAgent', 'chkIsNessusAgent',
            'chkIsClassificationAddInForOffice', 'chkIsOneDriveConfiguration',
            'chkIsLocalApps', 'chkIsOthers'
        ];
        chkRequiredFieldArray.forEach(x => {
            if (x === 'chkIsOthers') {
                if ($('#chkIsOthers').prop('checked')) {
                    data = $('#txtOthersText').val();
                    if (!data) {
                        errors += "<li id='error" + errorCount + "'>" + "Others value " + "</li>";
                        AddError("txtOthersText", '', errorCount);
                        errorCount++;
                    }
                    else
                        RemoveError("txtOthersText");
                }
                return;
            }
            var chkId = '#' + x;
            data = $(chkId).prop('checked');
            if (!data) {
                errors += "<li id='error" + errorCount + "'>" + $('#' + x.replace('chk', 'lbl'))[0].innerText + " is required</li>";
                console.log(chkId);
                $(chkId).addClass('remove' + x);
                AddError('lbl' + x.replace('chk', ''), 'remove' + x, errorCount);
                errorCount++;
            }
            else
                RemoveError('lbl' + x.replace('chk', ''));
        });

        data = document.getElementById("txtBusinessNeed").value;
        if (!data) {
            errors += "<li id='error" + errorCount + "'>" + "Business Need " + "</li>";
            AddError("txtBusinessNeed", '', errorCount);
            errorCount++;
        }
        else
            RemoveError("txtBusinessNeed");

        if (errors.length) {
            errors = "<ol id='errorList'>" + errors + "</ol>";
            $("#headingErr").removeClass('d-none');
            document.getElementById("add_to_me").innerHTML = errors;
            errors = "";
            errorCount = 0;
            if (IsEditMode) {
                $("#myModalRequest").scrollTop(0);
            }
            else {
                $(window).scrollTop(0);
            }
            return false;
        }
        $("#headingErr").addClass('d-none');
        document.getElementById("add_to_me").innerHTML = '';
        errors = "";
        errorCount = 0;

        $("#pageLoader").removeClass('invisible');
        $("#btnSubmit").text('Saving');
        $("#btnSubmit").prop("disabled", true);
        $("#btnCancel").prop("disabled", true);

        var serializedArray = $('#DLICForm').serializeArray();
        var form = {};
        var chkArray = [
            'chkIsIDoCompleted', 'chkIsBitLockerCompleted', 'chkIsAntivirusUpdated',
            'chkIsProxyConfig', 'chkIsUSBBluetoothDisabled', 'chkIsUserIdConfigured',
            'chkIsOutLookConfiguration', 'chkIsFirEyeAgent', 'chkIsEncryptedEmailConfiguration',
            'chkIsPKIDigitSignCert', 'chkIsPrinterConfiguration', 'chkIsVPNConfigurationDone',
            'chkIsSharedFolderAccessDone', 'chkIsDataRestored', 'chkIsNessusAgent',
            'chkIsClassificationAddInForOffice', 'chkIsUsedMachineToBeClean',
            'chkIsOneDriveConfiguration', 'chkIsLocalApps', 'chkIsOthers',
            'chkIsVirtualSmartCard', 'chkIsAgreeAppInstallation'
        ];
        serializedArray.forEach(
            x => form[x.name] = x.value
        );
        chkArray.forEach(
            x => form[x.replace('chk', '')] = $('#' + x).prop('checked')
        );
        $.ajax({
            url: '/DesktopLaptopInstallationChecklist/SaveData',
            type: 'POST',
            data: form,
            cache: false,
            dataType: 'JSON',
            success: (function (data) {
                if (data.Status == 200) {
                    $("#pageLoader").addClass('invisible');
                    if (IsNewMode) {
                        $("#btnSubmit").text('Submit');
                    }
                    else {
                        $("#btnSubmit").text('Re-Submit');
                    }
                    $("#btnSubmit").prop("disabled", false);
                    $("#btnCancel").prop("disabled", false);
                    successModal("DLIC" + data.Message);
                }
                else {
                    failureModal(data.Message);
                    if (IsNewMode) {
                        $("#btnSubmit").text('Submit');
                    }
                    else {
                        $("#btnSubmit").text('Re-Submit');
                    }
                    $("#pageLoader").addClass('invisible');
                    $("#btnSubmit").prop("disabled", false);
                    $("#btnCancel").prop("disabled", false);
                }
            }),
            error: (function (data) {
                failureModal(data.Message);
                if (IsNewMode && IsEditMode) {
                    $("#btnSubmit").text('Submit');
                }
                else {
                    $("#btnSubmit").text('Re-Submit');
                }
                $("#pageLoader").addClass('invisible');
                $("#btnSubmit").prop("disabled", false);
                $("#btnCancel").prop("disabled", false);
            })
        })
        $("#tab").val(2);
    });

    function saveResponse(text) {
        var status = '', comment = '';
        comment = $("#comment-" + text).val();
        switch (text) {
            case 'approve': {
                status = 'Approved';
                break;
            }
            case 'reject': {
                status = 'Rejected';
                if (comment == '') {
                    validityModal(text);
                    return;
                }
                break;
            }
            case 'enquire': {
                status = 'Enquired';
                if (comment == '') {
                    validityModal(text);
                    return;
                }
                break;
            }
        }
        spinner.show();
        $.ajax({
            url: '/List/SaveResponse',
            type: 'POST',
            data: { response: status, appRowId: appRowId, comment: comment, approvalType: approvalType },
            dataType: 'JSON',
            success: (function (data) {
                console.log("Data : " + data);
                if (data.Result == 1) {
                    successModal(text);
                    setTimeout(FilterMyTasks, 5000)
                    spinner.hide();
                }
                else {
                    failureModal();
                    spinner.hide();
                }

            }),
            error: (function (data) {
                failureModal();
                spinner.hide();
            })
        })
        $("#tab").val(1);
        return false;
    }


    $("#btnCancel").on('click', function (e) {
        window.location = "../Dashboard";
    });

    $('input:checkbox[id="chkIsOthers"]').click(function () {
        if ($(this).prop("checked")) {
            $('#txtOthersText').prop('disabled', false);
        }
        else {
            $('#txtOthersText').prop('disabled', true);
        }
    });    
</script>